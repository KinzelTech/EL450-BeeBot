

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
<<<<<<< Updated upstream
                                                                                               Sat Mar 23 19:59:42 2024
=======
                                                                                               Mon Apr 08 11:50:25 2024
>>>>>>> Stashed changes

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
<<<<<<< Updated upstream
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    33                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    34                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    36   000000                     
    37                           ; Generated 12/10/2023 GMT
    38                           ; 
    39                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution. Publication is not required when
    53                           ;        this file is used in an embedded application.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC18F46K22 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71   000000                     _TMR0L	set	4054
    72   000000                     _TMR0H	set	4055
    73   000000                     _TRISCbits	set	3988
    74   000000                     _T0CONbits	set	4053
    75   000000                     _TMR0IF	set	32658
    76   000000                     _TMR0IE	set	32661
    77   000000                     _SSP2STATbits	set	3949
    78   000000                     _SSP2BUF	set	3951
    79   000000                     _ANSELE	set	3900
    80   000000                     _ANSELD	set	3899
    81   000000                     _ANSELC	set	3898
    82   000000                     _ANSELB	set	3897
    83   000000                     _ANSELA	set	3896
    84   000000                     _PORTDbits	set	3971
    85   000000                     _OSCCON	set	4051
    86   000000                     _T0CON	set	4053
    87   000000                     _INTCONbits	set	4082
    88   000000                     _LATCbits	set	3979
    89   000000                     _TRISBbits	set	3987
    90   000000                     _TRISDbits	set	3989
    91   000000                     _PIE1bits	set	3997
    92   000000                     _PIR1bits	set	3998
    93   000000                     _PIE3bits	set	4003
    94   000000                     _RCONbits	set	4048
    95   000000                     _TXREG1	set	4013
    96   000000                     _RCREG1	set	4014
    97   000000                     _INTCON3bits	set	4080
    98   000000                     _RCSTA2bits	set	3953
    99   000000                     _TXSTA2bits	set	3954
   100   000000                     _PORTBbits	set	3969
   101   000000                     _SPBRG2	set	3957
   102                           
   103                           	psect	smallconst
   104   001000                     __psmallconst:
   105                           	callstack 0
   106   001000  00                 	db	0
   107   001001                     STR_19:
   108   001001  52                 	db	82	;'R'
   109   001002  45                 	db	69	;'E'
   110   001003  43                 	db	67	;'C'
   111   001004  00                 	db	0
   112   001005                     STR_15:
   113   001005  53                 	db	83	;'S'
   114   001006  54                 	db	84	;'T'
   115   001007  50                 	db	80	;'P'
   116   001008  00                 	db	0
   117   001009                     STR_17:
   118   001009  52                 	db	82	;'R'
   119   00100A  45                 	db	69	;'E'
   120   00100B  53                 	db	83	;'S'
   121   00100C  00                 	db	0
   122   00100D                     STR_1:
   123   00100D  4E                 	db	78	;'N'
   124   00100E  41                 	db	65	;'A'
   125   00100F  56                 	db	86	;'V'
   126   001010  00                 	db	0
   127   001011                     STR_11:
   128   001011  52                 	db	82	;'R'
   129   001012  41                 	db	65	;'A'
   130   001013  00                 	db	0
   131   001014                     STR_13:
   132   001014  48                 	db	72	;'H'
   133   001015  00                 	db	0
   134   001016                     STR_9:
   135   001016  52                 	db	82	;'R'
   136   001017  00                 	db	0
   137   001018                     STR_3:
   138   001018  4D                 	db	77	;'M'
   139   001019  00                 	db	0
   140   00101A  00                 	db	0	; dummy byte at the end
   141   000000                     
   142                           ; #config settings
   143                           
   144                           	psect	cinit
   145   001A72                     __pcinit:
   146                           	callstack 0
   147   001A72                     start_initialization:
   148                           	callstack 0
   149   001A72                     __initialization:
   150                           	callstack 0
   151                           
   152                           ; Clear objects allocated to BIGRAM (960 bytes)
   153   001A72  EE01  F050         	lfsr	0,__pbssBIGRAM
   154   001A76  EE13 F0C0          	lfsr	1,960
   155   001A7A                     clear_0:
   156   001A7A  6AEE               	clrf	postinc0,c
   157   001A7C  50E5               	movf	postdec1,w,c
   158   001A7E  50E1               	movf	fsr1l,w,c
   159   001A80  E1FC               	bnz	clear_0
   160   001A82  50E2               	movf	fsr1h,w,c
   161   001A84  E1FA               	bnz	clear_0
   162                           
   163                           ; Clear objects allocated to BANK1 (80 bytes)
   164   001A86  EE01  F000         	lfsr	0,__pbssBANK1
   165   001A8A  0E50               	movlw	80
   166   001A8C                     clear_1:
   167   001A8C  6AEE               	clrf	postinc0,c
   168   001A8E  06E8               	decf	wreg,f,c
   169   001A90  E1FD               	bnz	clear_1
   170                           
   171                           ; Clear objects allocated to BANK0 (122 bytes)
   172   001A92  EE00  F060         	lfsr	0,__pbssBANK0
   173   001A96  0E7A               	movlw	122
   174   001A98                     clear_2:
   175   001A98  6AEE               	clrf	postinc0,c
   176   001A9A  06E8               	decf	wreg,f,c
   177   001A9C  E1FD               	bnz	clear_2
   178                           
   179                           ; Clear objects allocated to COMRAM (5 bytes)
   180   001A9E  6A4A               	clrf	(__pbssCOMRAM+4)& (0+255),c
   181   001AA0  6A49               	clrf	(__pbssCOMRAM+3)& (0+255),c
   182   001AA2  6A48               	clrf	(__pbssCOMRAM+2)& (0+255),c
   183   001AA4  6A47               	clrf	(__pbssCOMRAM+1)& (0+255),c
   184   001AA6  6A46               	clrf	__pbssCOMRAM& (0+255),c
   185   001AA8                     end_of_initialization:
   186                           	callstack 0
   187   001AA8                     __end_of__initialization:
   188                           	callstack 0
   189   001AA8  904B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   190   001AAA  924B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   191   001AAC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   192   001AAE  6EF8               	movwf	tblptru,c
   193   001AB0  0100               	movlb	0
   194   001AB2  EF4F  F00B         	goto	_main	;jump to C main() function
   195                           
   196                           	psect	bssCOMRAM
   197   000046                     __pbssCOMRAM:
   198                           	callstack 0
   199   000046                     _timer_tick:
   200                           	callstack 0
   201   000046                     	ds	2
   202   000048                     _usb_received:
   203                           	callstack 0
   204   000048                     	ds	1
   205   000049                     _usb_message_received:
   206                           	callstack 0
   207   000049                     	ds	1
   208   00004A                     _MRF_transmitting:
   209                           	callstack 0
   210   00004A                     	ds	1
   211                           
   212                           	psect	bssBANK0
   213   000060                     __pbssBANK0:
   214                           	callstack 0
   215   000060                     _state:
   216                           	callstack 0
   217   000060                     	ds	1
   218   000061                     _MRF_message_received:
   219                           	callstack 0
   220   000061                     	ds	1
   221   000062                     _usb_message:
   222                           	callstack 0
   223   000062                     	ds	40
   224   00008A                     _MRF_message:
   225                           	callstack 0
   226   00008A                     	ds	40
   227   0000B2                     _USB_param2:
   228                           	callstack 0
   229   0000B2                     	ds	10
   230   0000BC                     _USB_param1:
   231                           	callstack 0
   232   0000BC                     	ds	10
   233   0000C6                     _MRF_param2:
   234                           	callstack 0
   235   0000C6                     	ds	10
   236   0000D0                     _MRF_param1:
   237                           	callstack 0
   238   0000D0                     	ds	10
   239                           
   240                           	psect	bssBANK1
   241   000100                     __pbssBANK1:
   242                           	callstack 0
   243   000100                     ISR@F6726:
   244                           	callstack 0
   245   000100                     	ds	40
   246   000128                     _current_report:
   247                           	callstack 0
   248   000128                     	ds	40
   249                           
   250                           	psect	bssBIGRAM
   251   000150                     __pbssBIGRAM:
   252                           	callstack 0
   253   000150                     _all_reports:
   254                           	callstack 0
   255   000150                     	ds	960
   256                           
   257                           	psect	cstackBANK0
   258   0000DA                     __pcstackBANK0:
   259                           	callstack 0
   260   0000DA                     ?_strcmp:
   261                           	callstack 0
   262   0000DA                     ?_strlen:
   263                           	callstack 0
   264   0000DA                     ?_isdigit:
   265                           	callstack 0
   266   0000DA                     isdigit@c:
   267                           	callstack 0
   268   0000DA                     strcmp@l:
   269                           	callstack 0
   270   0000DA                     strcpy@dest:
   271                           	callstack 0
   272   0000DA                     strlen@s:
   273                           	callstack 0
   274                           
   275                           ; 2 bytes @ 0x0
   276   0000DA                     	ds	2
   277   0000DC                     ??_isdigit:
   278   0000DC                     strcmp@r:
   279                           	callstack 0
   280   0000DC                     strcpy@src:
   281                           	callstack 0
   282   0000DC                     strlen@a:
   283                           	callstack 0
   284                           
   285                           ; 2 bytes @ 0x2
   286   0000DC                     	ds	2
   287   0000DE                     ??_strcmp:
   288   0000DE                     ??_strcpy:
   289                           
   290                           ; 1 bytes @ 0x4
   291   0000DE                     	ds	2
   292   0000E0                     strcpy@s:
   293                           	callstack 0
   294                           
   295                           ; 2 bytes @ 0x6
   296   0000E0                     	ds	2
   297   0000E2                     strcpy@d:
   298                           	callstack 0
   299                           
   300                           ; 2 bytes @ 0x8
   301   0000E2                     	ds	2
   302   0000E4                     append_string@str:
   303                           	callstack 0
   304                           
   305                           ; 2 bytes @ 0xA
   306   0000E4                     	ds	2
   307   0000E6                     append_string@ch:
   308                           	callstack 0
   309                           
   310                           ; 1 bytes @ 0xC
   311   0000E6                     	ds	1
   312   0000E7                     ??_append_string:
   313                           
   314                           ; 1 bytes @ 0xD
   315   0000E7                     	ds	2
   316   0000E9                     append_string@length:
   317                           	callstack 0
   318                           
   319                           ; 2 bytes @ 0xF
   320   0000E9                     	ds	2
   321   0000EB                     MRF_parse_message@message:
   322                           	callstack 0
   323   0000EB                     parse_usb_message@message:
   324                           	callstack 0
   325                           
   326                           ; 2 bytes @ 0x11
   327   0000EB                     	ds	2
   328   0000ED                     ??_parse_usb_message:
   329   0000ED                     MRF_parse_message@code:
   330                           	callstack 0
   331                           
   332                           ; 2 bytes @ 0x13
   333   0000ED                     	ds	2
   334   0000EF                     ??_MRF_parse_message:
   335                           
   336                           ; 1 bytes @ 0x15
   337   0000EF                     	ds	3
   338   0000F2                     parse_usb_message@length:
   339                           	callstack 0
   340                           
   341                           ; 1 bytes @ 0x18
   342   0000F2                     	ds	1
   343   0000F3                     parse_usb_message@param1_full:
   344                           	callstack 0
   345                           
   346                           ; 1 bytes @ 0x19
   347   0000F3                     	ds	1
   348   0000F4                     MRF_parse_message@length:
   349                           	callstack 0
   350   0000F4                     parse_usb_message@counter:
   351                           	callstack 0
   352                           
   353                           ; 1 bytes @ 0x1A
   354   0000F4                     	ds	1
   355   0000F5                     MRF_parse_message@param1_full:
   356                           	callstack 0
   357                           
   358                           ; 1 bytes @ 0x1B
   359   0000F5                     	ds	1
   360   0000F6                     MRF_parse_message@counter:
   361                           	callstack 0
   362                           
   363                           ; 1 bytes @ 0x1C
   364   0000F6                     	ds	1
   365   0000F7                     ??_main:
   366                           
   367                           ; 1 bytes @ 0x1D
   368   0000F7                     	ds	2
   369   0000F9                     main@MRF_msg_code:
   370                           	callstack 0
   371                           
   372                           ; 4 bytes @ 0x1F
   373   0000F9                     	ds	4
   374   0000FD                     main@previous_state:
   375                           	callstack 0
   376                           
   377                           ; 1 bytes @ 0x23
   378   0000FD                     	ds	1
   379                           
   380                           	psect	cstackCOMRAM
   381   000001                     __pcstackCOMRAM:
   382                           	callstack 0
   383   000001                     ?i2_strlen:
   384                           	callstack 0
   385   000001                     read_spi_data@data:
   386                           	callstack 0
   387   000001                     read_byte_usb@content:
   388                           	callstack 0
   389   000001                     i2strcpy@dest:
   390                           	callstack 0
   391   000001                     i2strlen@s:
   392                           	callstack 0
   393                           
   394                           ; 2 bytes @ 0x0
   395   000001                     	ds	1
   396   000002                     
   397                           ; 1 bytes @ 0x1
   398   000002                     	ds	1
   399   000003                     i2strcpy@src:
   400                           	callstack 0
   401   000003                     i2strlen@a:
   402                           	callstack 0
   403                           
   404                           ; 2 bytes @ 0x2
   405   000003                     	ds	2
   406   000005                     ??i2_strcpy:
   407                           
   408                           ; 1 bytes @ 0x4
   409   000005                     	ds	2
   410   000007                     i2strcpy@s:
   411                           	callstack 0
   412                           
   413                           ; 2 bytes @ 0x6
   414   000007                     	ds	2
   415   000009                     i2strcpy@d:
   416                           	callstack 0
   417                           
   418                           ; 2 bytes @ 0x8
   419   000009                     	ds	2
   420   00000B                     i2append_string@str:
   421                           	callstack 0
   422                           
   423                           ; 2 bytes @ 0xA
   424   00000B                     	ds	2
   425   00000D                     i2append_string@ch:
   426                           	callstack 0
   427                           
   428                           ; 1 bytes @ 0xC
   429   00000D                     	ds	1
   430   00000E                     ??i2_append_string:
   431                           
   432                           ; 1 bytes @ 0xD
   433   00000E                     	ds	2
   434   000010                     i2append_string@length:
   435                           	callstack 0
   436                           
   437                           ; 2 bytes @ 0xF
   438   000010                     	ds	2
   439   000012                     ??_ISR:
   440                           
   441                           ; 1 bytes @ 0x11
   442   000012                     	ds	10
   443   00001C                     ISR@temp_receive_string:
   444                           	callstack 0
   445                           
   446                           ; 40 bytes @ 0x1B
   447   00001C                     	ds	40
   448   000044                     ISR@usb_input:
   449                           	callstack 0
   450                           
   451                           ; 1 bytes @ 0x43
   452   000044                     	ds	1
   453   000045                     ISR@MRF_input:
   454                           	callstack 0
   455                           
   456                           ; 1 bytes @ 0x44
   457   000045                     	ds	1
   458                           
   459 ;;
   460 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   461 ;;
   462 ;; *************** function _main *****************
   463 ;; Defined at:
   464 ;;		line 115 in file "BeeBot_Main.c"
   465 ;; Parameters:    Size  Location     Type
   466 ;;		None
   467 ;; Auto vars:     Size  Location     Type
   468 ;;  MRF_msg_code    4   31[BANK0 ] unsigned char [4]
   469 ;;  previous_sta    1   35[BANK0 ] unsigned char 
   470 ;; Return value:  Size  Location     Type
   471 ;;                  1    wreg      void 
   472 ;; Registers used:
   473 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   474 ;; Tracked objects:
   475 ;;		On entry : 0/0
   476 ;;		On exit  : 0/0
   477 ;;		Unchanged: 0/0
   478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   480 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   481 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   482 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   483 ;;Total ram usage:        7 bytes
   484 ;; Hardware stack levels required when called: 6
   485 ;; This function calls:
   486 ;;		_MRF_parse_message
   487 ;;		_init_interrupts
   488 ;;		_init_pins
   489 ;;		_init_uart2
   490 ;;		_parse_usb_message
   491 ;;		_strcmp
   492 ;;		_strcpy
   493 ;; This function is called by:
   494 ;;		Startup code after reset
   495 ;; This function uses a non-reentrant model
   496 ;;
   497                           
   498                           	psect	text0
   499   00169E                     __ptext0:
   500                           	callstack 0
   501   00169E                     _main:
   502                           	callstack 25
   503   00169E                     
   504                           ;BeeBot_Main.c: 117:     BYTE previous_state;;BeeBot_Main.c: 118:     char MRF_msg_code[
      +                          4];;BeeBot_Main.c: 120:     OSCCON = 0b01100111;
   505   00169E  0E67               	movlw	103
   506   0016A0  6ED3               	movwf	211,c	;volatile
   507   0016A2                     
   508                           ;BeeBot_Main.c: 121:     _delay((unsigned long)((200)*(8000000/4000.0)));
   509   0016A2  0E03               	movlw	3
   510   0016A4  0100               	movlb	0	; () banked
   511   0016A6  6FF8               	movwf	(??_main+1)& (0+255),b
   512   0016A8  0E08               	movlw	8
   513   0016AA  6FF7               	movwf	??_main& (0+255),b
   514   0016AC  0E77               	movlw	119
   515   0016AE                     u1357:
   516   0016AE  2EE8               	decfsz	wreg,f,c
   517   0016B0  D7FE               	bra	u1357
   518   0016B2  2FF7               	decfsz	??_main& (0+255),f,b
   519   0016B4  D7FC               	bra	u1357
   520   0016B6  2FF8               	decfsz	(??_main+1)& (0+255),f,b
   521   0016B8  D7FA               	bra	u1357
   522   0016BA  EFE7  F00B         	goto	l1824
   523   0016BE                     l1794:
   524                           
   525                           ; BSR set to: 0
   526                           ;BeeBot_Main.c: 132:                 init_pins ();
   527   0016BE  EC93  F00D         	call	_init_pins	;wreg free
   528                           
   529                           ;BeeBot_Main.c: 133:                 init_interrupts();
   530   0016C2  ECD3  F00D         	call	_init_interrupts	;wreg free
   531                           
   532                           ;BeeBot_Main.c: 134:                 init_uart2 ();
   533   0016C6  ECEE  F00D         	call	_init_uart2	;wreg free
   534   0016CA                     
   535                           ;BeeBot_Main.c: 135:                 previous_state = INIT;
   536   0016CA  0E00               	movlw	0
   537   0016CC  0100               	movlb	0	; () banked
   538   0016CE  6FFD               	movwf	main@previous_state& (0+255),b
   539   0016D0                     
   540                           ; BSR set to: 0
   541                           ;BeeBot_Main.c: 136:                 state = WAITING;
   542   0016D0  0E01               	movlw	1
   543   0016D2  6F60               	movwf	_state& (0+255),b
   544                           
   545                           ;BeeBot_Main.c: 137:                 break;
   546   0016D4  EF0D  F00C         	goto	l104
   547   0016D8                     l1800:
   548                           
   549                           ; BSR set to: 0
   550                           ;BeeBot_Main.c: 140:                 if(MRF_message_received)
   551   0016D8  5161               	movf	_MRF_message_received& (0+255),w,b
   552   0016DA  B4D8               	btfsc	status,2,c
   553   0016DC  EF72  F00B         	goto	u1171
   554   0016E0  EF74  F00B         	goto	u1170
   555   0016E4                     u1171:
   556   0016E4  EF0D  F00C         	goto	l104
   557   0016E8                     u1170:
   558   0016E8                     
   559                           ; BSR set to: 0
   560                           ;BeeBot_Main.c: 141:                 {;BeeBot_Main.c: 142:                     MRF_messa
      +                          ge_received = 0;
   561   0016E8  0E00               	movlw	0
   562   0016EA  6F61               	movwf	_MRF_message_received& (0+255),b
   563   0016EC                     
   564                           ; BSR set to: 0
   565                           ;BeeBot_Main.c: 143:                     MRF_parse_message(MRF_message, MRF_msg_code);
   566   0016EC  0E8A               	movlw	low _MRF_message
   567   0016EE  6FEB               	movwf	MRF_parse_message@message& (0+255),b
   568   0016F0  0E00               	movlw	high _MRF_message
   569   0016F2  6FEC               	movwf	(MRF_parse_message@message+1)& (0+255),b
   570   0016F4  0EF9               	movlw	low main@MRF_msg_code
   571   0016F6  6FED               	movwf	MRF_parse_message@code& (0+255),b
   572   0016F8  0E00               	movlw	high main@MRF_msg_code
   573   0016FA  6FEE               	movwf	(MRF_parse_message@code+1)& (0+255),b
   574   0016FC  EC0E  F008         	call	_MRF_parse_message	;wreg free
   575   001700                     
   576                           ;BeeBot_Main.c: 145:                     if(!strcmp(MRF_msg_code, "NAV"))
   577   001700  0EF9               	movlw	low main@MRF_msg_code
   578   001702  0100               	movlb	0	; () banked
   579   001704  6FDA               	movwf	strcmp@l& (0+255),b
   580   001706  0E00               	movlw	high main@MRF_msg_code
   581   001708  6FDB               	movwf	(strcmp@l+1)& (0+255),b
   582   00170A  0E0D               	movlw	low STR_1
   583   00170C  6FDC               	movwf	strcmp@r& (0+255),b
   584   00170E  0E10               	movlw	high STR_1
   585   001710  6FDD               	movwf	(strcmp@r+1)& (0+255),b
   586   001712  EC30  F00C         	call	_strcmp	;wreg free
   587   001716  0100               	movlb	0	; () banked
   588   001718  51DA               	movf	?_strcmp& (0+255),w,b
   589   00171A  11DB               	iorwf	(?_strcmp+1)& (0+255),w,b
   590   00171C  A4D8               	btfss	status,2,c
   591   00171E  EF93  F00B         	goto	u1181
   592   001722  EF95  F00B         	goto	u1180
   593   001726                     u1181:
   594   001726  EF9B  F00B         	goto	l1810
   595   00172A                     u1180:
   596   00172A                     
   597                           ; BSR set to: 0
   598                           ;BeeBot_Main.c: 146:                     {;BeeBot_Main.c: 147:                         s
      +                          tate = AUTO;
   599   00172A  0E02               	movlw	2
   600   00172C  6F60               	movwf	_state& (0+255),b
   601                           
   602                           ;BeeBot_Main.c: 148:                         previous_state = WAITING;
   603   00172E  0E01               	movlw	1
   604   001730  6FFD               	movwf	main@previous_state& (0+255),b
   605                           
   606                           ;BeeBot_Main.c: 149:                     }
   607   001732  EF0D  F00C         	goto	l104
   608   001736                     l1810:
   609                           
   610                           ; BSR set to: 0
   611   001736  0EF9               	movlw	low main@MRF_msg_code
   612   001738  6FDA               	movwf	strcmp@l& (0+255),b
   613   00173A  0E00               	movlw	high main@MRF_msg_code
   614   00173C  6FDB               	movwf	(strcmp@l+1)& (0+255),b
   615   00173E  0E18               	movlw	low STR_3
   616   001740  6FDC               	movwf	strcmp@r& (0+255),b
   617   001742  0E10               	movlw	high STR_3
   618   001744  6FDD               	movwf	(strcmp@r+1)& (0+255),b
   619   001746  EC30  F00C         	call	_strcmp	;wreg free
   620   00174A  0100               	movlb	0	; () banked
   621   00174C  51DA               	movf	?_strcmp& (0+255),w,b
   622   00174E  11DB               	iorwf	(?_strcmp+1)& (0+255),w,b
   623   001750  A4D8               	btfss	status,2,c
   624   001752  EFAD  F00B         	goto	u1191
   625   001756  EFAF  F00B         	goto	u1190
   626   00175A                     u1191:
   627   00175A  EF0D  F00C         	goto	l104
   628   00175E                     u1190:
   629   00175E                     
   630                           ; BSR set to: 0
   631                           ;BeeBot_Main.c: 151:                     {;BeeBot_Main.c: 152:                         s
      +                          tate = MANUAL;
   632   00175E  0E03               	movlw	3
   633   001760  6F60               	movwf	_state& (0+255),b
   634                           
   635                           ;BeeBot_Main.c: 153:                         previous_state = WAITING;
   636   001762  0E01               	movlw	1
   637   001764  6FFD               	movwf	main@previous_state& (0+255),b
   638   001766  EF0D  F00C         	goto	l104
   639   00176A                     l112:
   640                           
   641                           ; BSR set to: 0
   642                           ;BeeBot_Main.c: 166:                 if((!PORTDbits.RD5))
   643   00176A  BA83               	btfsc	131,5,c	;volatile
   644   00176C  EFBA  F00B         	goto	u1201
   645   001770  EFBC  F00B         	goto	u1200
   646   001774                     u1201:
   647   001774  EFC0  F00B         	goto	l1818
   648   001778                     u1200:
   649   001778                     
   650                           ; BSR set to: 0
   651                           ;BeeBot_Main.c: 167:                 {;BeeBot_Main.c: 168:                     state = p
      +                          revious_state;
   652   001778  C0FD  F060         	movff	main@previous_state,_state
   653   00177C                     
   654                           ; BSR set to: 0
   655                           ;BeeBot_Main.c: 169:                     previous_state = DEBUG;
   656   00177C  0E04               	movlw	4
   657   00177E  6FFD               	movwf	main@previous_state& (0+255),b
   658   001780                     l1818:
   659                           
   660                           ; BSR set to: 0
   661                           ;BeeBot_Main.c: 172:                 if(strcmp(usb_message, ""))
   662   001780  0E62               	movlw	low _usb_message
   663   001782  6FDA               	movwf	strcmp@l& (0+255),b
   664   001784  0E00               	movlw	high _usb_message
   665   001786  6FDB               	movwf	(strcmp@l+1)& (0+255),b
   666   001788  0E13               	movlw	low (STR_11+2)
   667   00178A  6FDC               	movwf	strcmp@r& (0+255),b
   668   00178C  0E10               	movlw	high (STR_11+2)
   669   00178E  6FDD               	movwf	(strcmp@r+1)& (0+255),b
   670   001790  EC30  F00C         	call	_strcmp	;wreg free
   671   001794  0100               	movlb	0	; () banked
   672   001796  51DA               	movf	?_strcmp& (0+255),w,b
   673   001798  11DB               	iorwf	(?_strcmp+1)& (0+255),w,b
   674   00179A  B4D8               	btfsc	status,2,c
   675   00179C  EFD2  F00B         	goto	u1211
   676   0017A0  EFD4  F00B         	goto	u1210
   677   0017A4                     u1211:
   678   0017A4  EF0D  F00C         	goto	l104
   679   0017A8                     u1210:
   680   0017A8                     
   681                           ; BSR set to: 0
   682                           ;BeeBot_Main.c: 173:                 {;BeeBot_Main.c: 174:                     parse_usb
      +                          _message(usb_message);
   683   0017A8  0E62               	movlw	low _usb_message
   684   0017AA  6FEB               	movwf	parse_usb_message@message& (0+255),b
   685   0017AC  0E00               	movlw	high _usb_message
   686   0017AE  6FEC               	movwf	(parse_usb_message@message+1)& (0+255),b
   687   0017B0  EC50  F00A         	call	_parse_usb_message	;wreg free
   688                           
   689                           ;BeeBot_Main.c: 175:                     strcpy(usb_message, "");
   690   0017B4  0E62               	movlw	low _usb_message
   691   0017B6  0100               	movlb	0	; () banked
   692   0017B8  6FDA               	movwf	strcpy@dest& (0+255),b
   693   0017BA  0E00               	movlw	high _usb_message
   694   0017BC  6FDB               	movwf	(strcpy@dest+1)& (0+255),b
   695   0017BE  0E13               	movlw	low (STR_11+2)
   696   0017C0  6FDC               	movwf	strcpy@src& (0+255),b
   697   0017C2  0E10               	movlw	high (STR_11+2)
   698   0017C4  6FDD               	movwf	(strcpy@src+1)& (0+255),b
   699   0017C6  ECDA  F00C         	call	_strcpy	;wreg free
   700   0017CA  EF0D  F00C         	goto	l104
   701   0017CE                     l1824:
   702   0017CE  0100               	movlb	0	; () banked
   703   0017D0  5160               	movf	_state& (0+255),w,b
   704   0017D2  6FF7               	movwf	??_main& (0+255),b
   705   0017D4  6BF8               	clrf	(??_main+1)& (0+255),b
   706                           
   707                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   708                           ; Switch size 1, requested type "simple"
   709                           ; Number of cases is 1, Range of values is 0 to 0
   710                           ; switch strategies available:
   711                           ; Name         Instructions Cycles
   712                           ; simple_byte            4     3 (average)
   713                           ;	Chosen strategy is simple_byte
   714   0017D6  51F8               	movf	(??_main+1)& (0+255),w,b
   715   0017D8  0A00               	xorlw	0	; case 0
   716   0017DA  B4D8               	btfsc	status,2,c
   717   0017DC  EFF2  F00B         	goto	l1938
   718   0017E0  EF0D  F00C         	goto	l104
   719   0017E4                     l1938:
   720                           
   721                           ; BSR set to: 0
   722                           ; Switch size 1, requested type "simple"
   723                           ; Number of cases is 6, Range of values is 0 to 5
   724                           ; switch strategies available:
   725                           ; Name         Instructions Cycles
   726                           ; simple_byte           19    10 (average)
   727                           ;	Chosen strategy is simple_byte
   728   0017E4  51F7               	movf	??_main& (0+255),w,b
   729   0017E6  0A00               	xorlw	0	; case 0
   730   0017E8  B4D8               	btfsc	status,2,c
   731   0017EA  EF5F  F00B         	goto	l1794
   732   0017EE  0A01               	xorlw	1	; case 1
   733   0017F0  B4D8               	btfsc	status,2,c
   734   0017F2  EF6C  F00B         	goto	l1800
   735   0017F6  0A03               	xorlw	3	; case 2
   736   0017F8  B4D8               	btfsc	status,2,c
   737   0017FA  EF0D  F00C         	goto	l104
   738   0017FE  0A01               	xorlw	1	; case 3
   739   001800  B4D8               	btfsc	status,2,c
   740   001802  EF0D  F00C         	goto	l104
   741   001806  0A07               	xorlw	7	; case 4
   742   001808  B4D8               	btfsc	status,2,c
   743   00180A  EFB5  F00B         	goto	l112
   744   00180E  0A01               	xorlw	1	; case 5
   745   001810  B4D8               	btfsc	status,2,c
   746   001812  EF0D  F00C         	goto	l104
   747   001816  EF0D  F00C         	goto	l104
   748   00181A                     l104:
   749                           
   750                           ;BeeBot_Main.c: 185:         if(PORTDbits.RD5 && state != DEBUG)
   751   00181A  AA83               	btfss	131,5,c	;volatile
   752   00181C  EF12  F00C         	goto	u1221
   753   001820  EF14  F00C         	goto	u1220
   754   001824                     u1221:
   755   001824  EFE7  F00B         	goto	l1824
   756   001828                     u1220:
   757   001828  0E04               	movlw	4
   758   00182A  0100               	movlb	0	; () banked
   759   00182C  1960               	xorwf	_state& (0+255),w,b
   760   00182E  B4D8               	btfsc	status,2,c
   761   001830  EF1C  F00C         	goto	u1231
   762   001834  EF1E  F00C         	goto	u1230
   763   001838                     u1231:
   764   001838  EFE7  F00B         	goto	l1824
   765   00183C                     u1230:
   766   00183C                     
   767                           ; BSR set to: 0
   768                           ;BeeBot_Main.c: 186:         {;BeeBot_Main.c: 187:             previous_state = WAITING;
   769   00183C  0E01               	movlw	1
   770   00183E  6FFD               	movwf	main@previous_state& (0+255),b
   771                           
   772                           ;BeeBot_Main.c: 188:             state = DEBUG;
   773   001840  0E04               	movlw	4
   774   001842  6F60               	movwf	_state& (0+255),b
   775   001844                     
   776                           ; BSR set to: 0
   777                           ;BeeBot_Main.c: 189:             strcpy(usb_message, "");
   778   001844  0E62               	movlw	low _usb_message
   779   001846  6FDA               	movwf	strcpy@dest& (0+255),b
   780   001848  0E00               	movlw	high _usb_message
   781   00184A  6FDB               	movwf	(strcpy@dest+1)& (0+255),b
   782   00184C  0E13               	movlw	low (STR_11+2)
   783   00184E  6FDC               	movwf	strcpy@src& (0+255),b
   784   001850  0E10               	movlw	high (STR_11+2)
   785   001852  6FDD               	movwf	(strcpy@src+1)& (0+255),b
   786   001854  ECDA  F00C         	call	_strcpy	;wreg free
   787   001858  EFE7  F00B         	goto	l1824
   788   00185C  EF99  F000         	goto	start
   789   001860                     __end_of_main:
   790                           	callstack 0
   791                           
   792 ;; *************** function _parse_usb_message *****************
   793 ;; Defined at:
   794 ;;		line 72 in file "MCP2221A.c"
   795 ;; Parameters:    Size  Location     Type
   796 ;;  message         2   17[BANK0 ] PTR unsigned char 
   797 ;;		 -> usb_message(40), 
   798 ;; Auto vars:     Size  Location     Type
   799 ;;  counter         1   26[BANK0 ] unsigned char 
   800 ;;  param1_full     1   25[BANK0 ] unsigned char 
   801 ;;  length          1   24[BANK0 ] unsigned char 
   802 ;; Return value:  Size  Location     Type
   803 ;;                  1    wreg      void 
   804 ;; Registers used:
   805 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   806 ;; Tracked objects:
   807 ;;		On entry : 0/0
   808 ;;		On exit  : 0/0
   809 ;;		Unchanged: 0/0
   810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   811 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   812 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   813 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   814 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   815 ;;Total ram usage:       10 bytes
   816 ;; Hardware stack levels used: 1
   817 ;; Hardware stack levels required when called: 5
   818 ;; This function calls:
   819 ;;		_append_string
   820 ;;		_isdigit
   821 ;;		_strcmp
   822 ;; This function is called by:
   823 ;;		_main
   824 ;; This function uses a non-reentrant model
   825 ;;
   826                           
   827                           	psect	text1
   828   0014A0                     __ptext1:
   829                           	callstack 0
   830   0014A0                     _parse_usb_message:
   831                           	callstack 25
   832   0014A0                     
   833                           ;MCP2221A.c: 72: void parse_usb_message(char message[]);MCP2221A.c: 73: {;MCP2221A.c: 74
      +                          :     BYTE counter;;MCP2221A.c: 75:     BYTE param1_full;;MCP2221A.c: 76:     BYTE lengt
      +                          h;;MCP2221A.c: 79:     if(!strcmp(usb_message, "R"))
   834   0014A0  0E62               	movlw	low _usb_message
   835   0014A2  0100               	movlb	0	; () banked
   836   0014A4  6FDA               	movwf	strcmp@l& (0+255),b
   837   0014A6  0E00               	movlw	high _usb_message
   838   0014A8  6FDB               	movwf	(strcmp@l+1)& (0+255),b
   839   0014AA  0E16               	movlw	low STR_9
   840   0014AC  6FDC               	movwf	strcmp@r& (0+255),b
   841   0014AE  0E10               	movlw	high STR_9
   842   0014B0  6FDD               	movwf	(strcmp@r+1)& (0+255),b
   843   0014B2  EC30  F00C         	call	_strcmp	;wreg free
   844   0014B6  0100               	movlb	0	; () banked
   845   0014B8  51DA               	movf	?_strcmp& (0+255),w,b
   846   0014BA  11DB               	iorwf	(?_strcmp+1)& (0+255),w,b
   847   0014BC  A4D8               	btfss	status,2,c
   848   0014BE  EF63  F00A         	goto	u1021
   849   0014C2  EF65  F00A         	goto	u1020
   850   0014C6                     u1021:
   851   0014C6  EF67  F00A         	goto	l1726
   852   0014CA                     u1020:
   853   0014CA  EF4E  F00B         	goto	l338
   854   0014CE                     l1726:
   855                           
   856                           ; BSR set to: 0
   857   0014CE  0E62               	movlw	low _usb_message
   858   0014D0  6FDA               	movwf	strcmp@l& (0+255),b
   859   0014D2  0E00               	movlw	high _usb_message
   860   0014D4  6FDB               	movwf	(strcmp@l+1)& (0+255),b
   861   0014D6  0E11               	movlw	low STR_11
   862   0014D8  6FDC               	movwf	strcmp@r& (0+255),b
   863   0014DA  0E10               	movlw	high STR_11
   864   0014DC  6FDD               	movwf	(strcmp@r+1)& (0+255),b
   865   0014DE  EC30  F00C         	call	_strcmp	;wreg free
   866   0014E2  0100               	movlb	0	; () banked
   867   0014E4  51DA               	movf	?_strcmp& (0+255),w,b
   868   0014E6  11DB               	iorwf	(?_strcmp+1)& (0+255),w,b
   869   0014E8  A4D8               	btfss	status,2,c
   870   0014EA  EF79  F00A         	goto	u1031
   871   0014EE  EF7B  F00A         	goto	u1030
   872   0014F2                     u1031:
   873   0014F2  EF7D  F00A         	goto	l1730
   874   0014F6                     u1030:
   875   0014F6  EF4E  F00B         	goto	l338
   876   0014FA                     l1730:
   877                           
   878                           ; BSR set to: 0
   879   0014FA  0E62               	movlw	low _usb_message
   880   0014FC  6FDA               	movwf	strcmp@l& (0+255),b
   881   0014FE  0E00               	movlw	high _usb_message
   882   001500  6FDB               	movwf	(strcmp@l+1)& (0+255),b
   883   001502  0E0D               	movlw	low STR_1
   884   001504  6FDC               	movwf	strcmp@r& (0+255),b
   885   001506  0E10               	movlw	high STR_1
   886   001508  6FDD               	movwf	(strcmp@r+1)& (0+255),b
   887   00150A  EC30  F00C         	call	_strcmp	;wreg free
   888   00150E  0100               	movlb	0	; () banked
   889   001510  51DA               	movf	?_strcmp& (0+255),w,b
   890   001512  11DB               	iorwf	(?_strcmp+1)& (0+255),w,b
   891   001514  A4D8               	btfss	status,2,c
   892   001516  EF8F  F00A         	goto	u1041
   893   00151A  EF91  F00A         	goto	u1040
   894   00151E                     u1041:
   895   00151E  EF93  F00A         	goto	l1734
   896   001522                     u1040:
   897   001522  EF4E  F00B         	goto	l338
   898   001526                     l1734:
   899                           
   900                           ; BSR set to: 0
   901   001526  0E0D               	movlw	low STR_1
   902   001528  6EF6               	movwf	tblptrl,c
   903   00152A                     	if	1	;There is more than 1 active tblptr byte
   904   00152A  0E10               	movlw	high STR_1
   905   00152C  6EF7               	movwf	tblptrh,c
   906   00152E                     	endif
   907   00152E                     	if	0	;There are less than 3 active tblptr bytes
   908   00152E                     	endif
   909   00152E  0008               	tblrd		*
   910   001530  50F5               	movf	tablat,w,c
   911   001532  6362               	cpfseq	_usb_message& (0+255),b
   912   001534  EF9E  F00A         	goto	u1051
   913   001538  EFA0  F00A         	goto	u1050
   914   00153C                     u1051:
   915   00153C  EF4E  F00B         	goto	l338
   916   001540                     u1050:
   917   001540                     
   918                           ; BSR set to: 0
   919   001540  0E0E               	movlw	low (STR_1+1)
   920   001542  6EF6               	movwf	tblptrl,c
   921   001544  0E10               	movlw	high (STR_1+1)
   922   001546  6EF7               	movwf	tblptrh,c
   923   001548                     	if	0	;tblptru may be non-zero
   924   001548                     	endif
   925   001548                     	if	0	;tblptru may be non-zero
   926   001548                     	endif
   927   001548  0008               	tblrd		*
   928   00154A  50F5               	movf	tablat,w,c
   929   00154C  6363               	cpfseq	(_usb_message+1)& (0+255),b
   930   00154E  EFAB  F00A         	goto	u1061
   931   001552  EFAD  F00A         	goto	u1060
   932   001556                     u1061:
   933   001556  EF4E  F00B         	goto	l338
   934   00155A                     u1060:
   935   00155A                     
   936                           ; BSR set to: 0
   937   00155A  0E0F               	movlw	low (STR_1+2)
   938   00155C  6EF6               	movwf	tblptrl,c
   939   00155E  0E10               	movlw	high (STR_1+2)
   940   001560  6EF7               	movwf	tblptrh,c
   941   001562                     	if	0	;tblptru may be non-zero
   942   001562                     	endif
   943   001562                     	if	0	;tblptru may be non-zero
   944   001562                     	endif
   945   001562  0008               	tblrd		*
   946   001564  50F5               	movf	tablat,w,c
   947   001566  6364               	cpfseq	(_usb_message+2)& (0+255),b
   948   001568  EFB8  F00A         	goto	u1071
   949   00156C  EFBA  F00A         	goto	u1070
   950   001570                     u1071:
   951   001570  EF4E  F00B         	goto	l338
   952   001574                     u1070:
   953   001574                     
   954                           ; BSR set to: 0
   955                           ;MCP2221A.c: 99:     {;MCP2221A.c: 102:         for(counter = 0; counter < length; count
      +                          er++)
   956   001574  0E00               	movlw	0
   957   001576  6FF4               	movwf	parse_usb_message@counter& (0+255),b
   958   001578  EF45  F00B         	goto	l1764
   959   00157C                     l1744:
   960                           
   961                           ; BSR set to: 0
   962   00157C  51F4               	movf	parse_usb_message@counter& (0+255),w,b
   963   00157E  25EB               	addwf	parse_usb_message@message& (0+255),w,b
   964   001580  6ED9               	movwf	fsr2l,c
   965   001582  0E00               	movlw	0
   966   001584  21EC               	addwfc	(parse_usb_message@message+1)& (0+255),w,b
   967   001586  6EDA               	movwf	fsr2h,c
   968   001588  50DF               	movf	indf2,w,c
   969   00158A  6FED               	movwf	??_parse_usb_message& (0+255),b
   970   00158C  0ED0               	movlw	208
   971   00158E  25ED               	addwf	??_parse_usb_message& (0+255),w,b
   972   001590  6FEE               	movwf	(??_parse_usb_message+1)& (0+255),b
   973   001592  6BEF               	clrf	(??_parse_usb_message+2)& (0+255),b
   974   001594  0EFF               	movlw	255
   975   001596  23EF               	addwfc	(??_parse_usb_message+2)& (0+255),f,b
   976   001598  51EF               	movf	(??_parse_usb_message+2)& (0+255),w,b
   977   00159A  E109               	bnz	u1080
   978   00159C  0E0A               	movlw	10
   979   00159E  5DEE               	subwf	(??_parse_usb_message+1)& (0+255),w,b
   980   0015A0  A0D8               	btfss	status,0,c
   981   0015A2  EFD5  F00A         	goto	u1081
   982   0015A6  EFD7  F00A         	goto	u1080
   983   0015AA                     u1081:
   984   0015AA  EFE6  F00A         	goto	l1748
   985   0015AE                     u1080:
   986   0015AE                     
   987                           ; BSR set to: 0
   988   0015AE  51F4               	movf	parse_usb_message@counter& (0+255),w,b
   989   0015B0  25EB               	addwf	parse_usb_message@message& (0+255),w,b
   990   0015B2  6ED9               	movwf	fsr2l,c
   991   0015B4  0E00               	movlw	0
   992   0015B6  21EC               	addwfc	(parse_usb_message@message+1)& (0+255),w,b
   993   0015B8  6EDA               	movwf	fsr2h,c
   994   0015BA  0E2E               	movlw	46
   995   0015BC  18DE               	xorwf	postinc2,w,c
   996   0015BE  A4D8               	btfss	status,2,c
   997   0015C0  EFE4  F00A         	goto	u1091
   998   0015C4  EFE6  F00A         	goto	u1090
   999   0015C8                     u1091:
  1000   0015C8  EF43  F00B         	goto	l1762
  1001   0015CC                     u1090:
  1002   0015CC                     l1748:
  1003                           
  1004                           ; BSR set to: 0
  1005                           ;MCP2221A.c: 105:             {;MCP2221A.c: 106:                 if(!param1_full)
  1006   0015CC  51F3               	movf	parse_usb_message@param1_full& (0+255),w,b
  1007   0015CE  A4D8               	btfss	status,2,c
  1008   0015D0  EFEC  F00A         	goto	u1101
  1009   0015D4  EFEE  F00A         	goto	u1100
  1010   0015D8                     u1101:
  1011   0015D8  EF35  F00B         	goto	l1760
  1012   0015DC                     u1100:
  1013   0015DC                     
  1014                           ; BSR set to: 0
  1015                           ;MCP2221A.c: 107:                 {;MCP2221A.c: 108:                     append_string(U
      +                          SB_param1, message[counter]);
  1016   0015DC  0EBC               	movlw	low _USB_param1
  1017   0015DE  6FE4               	movwf	append_string@str& (0+255),b
  1018   0015E0  0E00               	movlw	high _USB_param1
  1019   0015E2  6FE5               	movwf	(append_string@str+1)& (0+255),b
  1020   0015E4  51F4               	movf	parse_usb_message@counter& (0+255),w,b
  1021   0015E6  25EB               	addwf	parse_usb_message@message& (0+255),w,b
  1022   0015E8  6ED9               	movwf	fsr2l,c
  1023   0015EA  0E00               	movlw	0
  1024   0015EC  21EC               	addwfc	(parse_usb_message@message+1)& (0+255),w,b
  1025   0015EE  6EDA               	movwf	fsr2h,c
  1026   0015F0  50DF               	movf	indf2,w,c
  1027   0015F2  6FE6               	movwf	append_string@ch& (0+255),b
  1028   0015F4  EC69  F00C         	call	_append_string	;wreg free
  1029   0015F8  0100               	movlb	0	; () banked
  1030   0015FA  51F4               	movf	parse_usb_message@counter& (0+255),w,b
  1031   0015FC  25EB               	addwf	parse_usb_message@message& (0+255),w,b
  1032   0015FE  6FED               	movwf	??_parse_usb_message& (0+255),b
  1033   001600  0E00               	movlw	0
  1034   001602  21EC               	addwfc	(parse_usb_message@message+1)& (0+255),w,b
  1035   001604  6FEE               	movwf	(??_parse_usb_message+1)& (0+255),b
  1036   001606  0E01               	movlw	1
  1037   001608  25ED               	addwf	??_parse_usb_message& (0+255),w,b
  1038   00160A  6ED9               	movwf	fsr2l,c
  1039   00160C  0E00               	movlw	0
  1040   00160E  21EE               	addwfc	(??_parse_usb_message+1)& (0+255),w,b
  1041   001610  6EDA               	movwf	fsr2h,c
  1042   001612  50DF               	movf	indf2,w,c
  1043   001614  6FEF               	movwf	(??_parse_usb_message+2)& (0+255),b
  1044   001616  0ED0               	movlw	208
  1045   001618  25EF               	addwf	(??_parse_usb_message+2)& (0+255),w,b
  1046   00161A  6FF0               	movwf	(??_parse_usb_message+3)& (0+255),b
  1047   00161C  6BF1               	clrf	(??_parse_usb_message+4)& (0+255),b
  1048   00161E  0EFF               	movlw	255
  1049   001620  23F1               	addwfc	(??_parse_usb_message+4)& (0+255),f,b
  1050   001622  51F1               	movf	(??_parse_usb_message+4)& (0+255),w,b
  1051   001624  E109               	bnz	u1110
  1052   001626  0E0A               	movlw	10
  1053   001628  5DF0               	subwf	(??_parse_usb_message+3)& (0+255),w,b
  1054   00162A  A0D8               	btfss	status,0,c
  1055   00162C  EF1A  F00B         	goto	u1111
  1056   001630  EF1C  F00B         	goto	u1110
  1057   001634                     u1111:
  1058   001634  EF43  F00B         	goto	l1762
  1059   001638                     u1110:
  1060   001638                     
  1061                           ; BSR set to: 0
  1062   001638  51F4               	movf	parse_usb_message@counter& (0+255),w,b
  1063   00163A  25EB               	addwf	parse_usb_message@message& (0+255),w,b
  1064   00163C  6FED               	movwf	??_parse_usb_message& (0+255),b
  1065   00163E  0E00               	movlw	0
  1066   001640  21EC               	addwfc	(parse_usb_message@message+1)& (0+255),w,b
  1067   001642  6FEE               	movwf	(??_parse_usb_message+1)& (0+255),b
  1068   001644  0E01               	movlw	1
  1069   001646  25ED               	addwf	??_parse_usb_message& (0+255),w,b
  1070   001648  6ED9               	movwf	fsr2l,c
  1071   00164A  0E00               	movlw	0
  1072   00164C  21EE               	addwfc	(??_parse_usb_message+1)& (0+255),w,b
  1073   00164E  6EDA               	movwf	fsr2h,c
  1074   001650  0E2E               	movlw	46
  1075   001652  18DE               	xorwf	postinc2,w,c
  1076   001654  B4D8               	btfsc	status,2,c
  1077   001656  EF2F  F00B         	goto	u1121
  1078   00165A  EF31  F00B         	goto	u1120
  1079   00165E                     u1121:
  1080   00165E  EF43  F00B         	goto	l1762
  1081   001662                     u1120:
  1082   001662                     
  1083                           ; BSR set to: 0
  1084                           ;MCP2221A.c: 110:                         param1_full = 1;
  1085   001662  0E01               	movlw	1
  1086   001664  6FF3               	movwf	parse_usb_message@param1_full& (0+255),b
  1087   001666  EF43  F00B         	goto	l1762
  1088   00166A                     l1760:
  1089                           
  1090                           ; BSR set to: 0
  1091                           ;MCP2221A.c: 113:                     append_string(USB_param2, message[counter]);
  1092   00166A  0EB2               	movlw	low _USB_param2
  1093   00166C  6FE4               	movwf	append_string@str& (0+255),b
  1094   00166E  0E00               	movlw	high _USB_param2
  1095   001670  6FE5               	movwf	(append_string@str+1)& (0+255),b
  1096   001672  51F4               	movf	parse_usb_message@counter& (0+255),w,b
  1097   001674  25EB               	addwf	parse_usb_message@message& (0+255),w,b
  1098   001676  6ED9               	movwf	fsr2l,c
  1099   001678  0E00               	movlw	0
  1100   00167A  21EC               	addwfc	(parse_usb_message@message+1)& (0+255),w,b
  1101   00167C  6EDA               	movwf	fsr2h,c
  1102   00167E  50DF               	movf	indf2,w,c
  1103   001680  6FE6               	movwf	append_string@ch& (0+255),b
  1104   001682  EC69  F00C         	call	_append_string	;wreg free
  1105   001686                     l1762:
  1106                           
  1107                           ;MCP2221A.c: 115:         }
  1108   001686  0100               	movlb	0	; () banked
  1109   001688  2BF4               	incf	parse_usb_message@counter& (0+255),f,b
  1110   00168A                     l1764:
  1111                           
  1112                           ; BSR set to: 0
  1113   00168A  51F2               	movf	parse_usb_message@length& (0+255),w,b
  1114   00168C  5DF4               	subwf	parse_usb_message@counter& (0+255),w,b
  1115   00168E  A0D8               	btfss	status,0,c
  1116   001690  EF4C  F00B         	goto	u1131
  1117   001694  EF4E  F00B         	goto	u1130
  1118   001698                     u1131:
  1119   001698  EFBE  F00A         	goto	l1744
  1120   00169C                     u1130:
  1121   00169C                     l338:
  1122                           
  1123                           ; BSR set to: 0
  1124   00169C  0012               	return		;funcret
  1125   00169E                     __end_of_parse_usb_message:
  1126                           	callstack 0
  1127                           
  1128 ;; *************** function _init_uart2 *****************
  1129 ;; Defined at:
  1130 ;;		line 13 in file "MCP2221A.c"
  1131 ;; Parameters:    Size  Location     Type
  1132 ;;		None
  1133 ;; Auto vars:     Size  Location     Type
  1134 ;;		None
  1135 ;; Return value:  Size  Location     Type
  1136 ;;                  1    wreg      void 
  1137 ;; Registers used:
  1138 ;;		wreg, status,2
  1139 ;; Tracked objects:
  1140 ;;		On entry : 0/0
  1141 ;;		On exit  : 0/0
  1142 ;;		Unchanged: 0/0
  1143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1147 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1148 ;;Total ram usage:        0 bytes
  1149 ;; Hardware stack levels used: 1
  1150 ;; Hardware stack levels required when called: 3
  1151 ;; This function calls:
  1152 ;;		Nothing
  1153 ;; This function is called by:
  1154 ;;		_main
  1155 ;; This function uses a non-reentrant model
  1156 ;;
  1157                           
  1158                           	psect	text2
  1159   001BDC                     __ptext2:
  1160                           	callstack 0
  1161   001BDC                     _init_uart2:
  1162                           	callstack 27
  1163   001BDC                     
  1164                           ;MCP2221A.c: 15:     TXSTA2bits.BRGH = 1;
  1165   001BDC  8472               	bsf	114,2,c	;volatile
  1166   001BDE                     
  1167                           ;MCP2221A.c: 16:     SPBRG2 = 51;
  1168   001BDE  0E33               	movlw	51
  1169   001BE0  6E75               	movwf	117,c	;volatile
  1170   001BE2                     
  1171                           ;MCP2221A.c: 17:     TXSTA2bits.SYNC = 0;
  1172   001BE2  9872               	bcf	114,4,c	;volatile
  1173   001BE4                     
  1174                           ;MCP2221A.c: 18:     RCSTA2bits.SPEN = 1;
  1175   001BE4  8E71               	bsf	113,7,c	;volatile
  1176   001BE6                     
  1177                           ;MCP2221A.c: 19:     TRISDbits.TRISD7 = 1;
  1178   001BE6  8E95               	bsf	149,7,c	;volatile
  1179   001BE8                     
  1180                           ;MCP2221A.c: 20:     TXSTA2bits.TX9 = 0;
  1181   001BE8  9C72               	bcf	114,6,c	;volatile
  1182   001BEA                     
  1183                           ;MCP2221A.c: 21:     RCSTA2bits.RX9 = 0;
  1184   001BEA  9C71               	bcf	113,6,c	;volatile
  1185   001BEC                     
  1186                           ;MCP2221A.c: 22:     RCSTA2bits.CREN = 1;
  1187   001BEC  8871               	bsf	113,4,c	;volatile
  1188   001BEE                     
  1189                           ;MCP2221A.c: 23:     TXSTA2bits.TXEN = 1;
  1190   001BEE  8A72               	bsf	114,5,c	;volatile
  1191   001BF0  0012               	return		;funcret
  1192   001BF2                     __end_of_init_uart2:
  1193                           	callstack 0
  1194                           
  1195 ;; *************** function _init_pins *****************
  1196 ;; Defined at:
  1197 ;;		line 200 in file "BeeBot_Main.c"
  1198 ;; Parameters:    Size  Location     Type
  1199 ;;		None
  1200 ;; Auto vars:     Size  Location     Type
  1201 ;;		None
  1202 ;; Return value:  Size  Location     Type
  1203 ;;                  1    wreg      void 
  1204 ;; Registers used:
  1205 ;;		wreg, status,2
  1206 ;; Tracked objects:
  1207 ;;		On entry : 0/0
  1208 ;;		On exit  : 0/0
  1209 ;;		Unchanged: 0/0
  1210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1215 ;;Total ram usage:        0 bytes
  1216 ;; Hardware stack levels used: 1
  1217 ;; Hardware stack levels required when called: 3
  1218 ;; This function calls:
  1219 ;;		Nothing
  1220 ;; This function is called by:
  1221 ;;		_main
  1222 ;; This function uses a non-reentrant model
  1223 ;;
  1224                           
  1225                           	psect	text3
  1226   001B26                     __ptext3:
  1227                           	callstack 0
  1228   001B26                     _init_pins:
  1229                           	callstack 27
  1230   001B26                     
  1231                           ;BeeBot_Main.c: 202:     TRISDbits.RD6 = 1;
  1232   001B26  8C95               	bsf	149,6,c	;volatile
  1233                           
  1234                           ;BeeBot_Main.c: 203:     TRISDbits.RD6 = 1;
  1235   001B28  8C95               	bsf	149,6,c	;volatile
  1236                           
  1237                           ;BeeBot_Main.c: 204:     TRISDbits.RD7 = 1;
  1238   001B2A  8E95               	bsf	149,7,c	;volatile
  1239                           
  1240                           ;BeeBot_Main.c: 207:     TRISBbits.RB1 = 1;
  1241   001B2C  8293               	bsf	147,1,c	;volatile
  1242                           
  1243                           ;BeeBot_Main.c: 208:     TRISBbits.RB2 = 1;
  1244   001B2E  8493               	bsf	147,2,c	;volatile
  1245                           
  1246                           ;BeeBot_Main.c: 209:     TRISCbits.RC0 = 0;
  1247   001B30  9094               	bcf	148,0,c	;volatile
  1248                           
  1249                           ;BeeBot_Main.c: 210:     TRISCbits.RC1 = 0;
  1250   001B32  9294               	bcf	148,1,c	;volatile
  1251                           
  1252                           ;BeeBot_Main.c: 211:     TRISCbits.RC2 = 1;
  1253   001B34  8494               	bsf	148,2,c	;volatile
  1254                           
  1255                           ;BeeBot_Main.c: 212:     TRISCbits.RC3 = 0;
  1256   001B36  9694               	bcf	148,3,c	;volatile
  1257                           
  1258                           ;BeeBot_Main.c: 213:     TRISCbits.RC4 = 1;
  1259   001B38  8894               	bsf	148,4,c	;volatile
  1260                           
  1261                           ;BeeBot_Main.c: 214:     TRISCbits.RC5 = 1;
  1262   001B3A  8A94               	bsf	148,5,c	;volatile
  1263                           
  1264                           ;BeeBot_Main.c: 217:     LATCbits.LC0 = 1;
  1265   001B3C  808B               	bsf	139,0,c	;volatile
  1266                           
  1267                           ;BeeBot_Main.c: 218:     LATCbits.LC1 = 1;
  1268   001B3E  828B               	bsf	139,1,c	;volatile
  1269   001B40                     
  1270                           ;BeeBot_Main.c: 220:     ANSELA = 0;
  1271   001B40  0E00               	movlw	0
  1272   001B42  010F               	movlb	15	; () banked
  1273   001B44  6F38               	movwf	56,b	;volatile
  1274                           
  1275                           ;BeeBot_Main.c: 221:     ANSELB = 0;
  1276   001B46  0E00               	movlw	0
  1277   001B48  6F39               	movwf	57,b	;volatile
  1278                           
  1279                           ;BeeBot_Main.c: 222:     ANSELC = 0;
  1280   001B4A  0E00               	movlw	0
  1281   001B4C  6F3A               	movwf	58,b	;volatile
  1282                           
  1283                           ;BeeBot_Main.c: 223:     ANSELD = 0;
  1284   001B4E  0E00               	movlw	0
  1285   001B50  6F3B               	movwf	59,b	;volatile
  1286                           
  1287                           ;BeeBot_Main.c: 224:     ANSELE = 0;
  1288   001B52  0E00               	movlw	0
  1289   001B54  6F3C               	movwf	60,b	;volatile
  1290   001B56                     
  1291                           ; BSR set to: 15
  1292   001B56  0012               	return		;funcret
  1293   001B58                     __end_of_init_pins:
  1294                           	callstack 0
  1295                           
  1296 ;; *************** function _init_interrupts *****************
  1297 ;; Defined at:
  1298 ;;		line 231 in file "BeeBot_Main.c"
  1299 ;; Parameters:    Size  Location     Type
  1300 ;;		None
  1301 ;; Auto vars:     Size  Location     Type
  1302 ;;		None
  1303 ;; Return value:  Size  Location     Type
  1304 ;;                  1    wreg      void 
  1305 ;; Registers used:
  1306 ;;		wreg, status,2
  1307 ;; Tracked objects:
  1308 ;;		On entry : 0/0
  1309 ;;		On exit  : 0/0
  1310 ;;		Unchanged: 0/0
  1311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1316 ;;Total ram usage:        0 bytes
  1317 ;; Hardware stack levels used: 1
  1318 ;; Hardware stack levels required when called: 3
  1319 ;; This function calls:
  1320 ;;		Nothing
  1321 ;; This function is called by:
  1322 ;;		_main
  1323 ;; This function uses a non-reentrant model
  1324 ;;
  1325                           
  1326                           	psect	text4
  1327   001BA6                     __ptext4:
  1328                           	callstack 0
  1329   001BA6                     _init_interrupts:
  1330                           	callstack 27
  1331   001BA6                     
  1332                           ;BeeBot_Main.c: 233:     RCONbits.IPEN = 0;
  1333   001BA6  9ED0               	bcf	208,7,c	;volatile
  1334                           
  1335                           ;BeeBot_Main.c: 234:     INTCONbits.GIE = 0;
  1336   001BA8  9EF2               	bcf	242,7,c	;volatile
  1337                           
  1338                           ;BeeBot_Main.c: 240:     PIE3bits.RC2IE = 1;
  1339   001BAA  8AA3               	bsf	163,5,c	;volatile
  1340   001BAC                     
  1341                           ;BeeBot_Main.c: 245:     T0CON = 0x08;
  1342   001BAC  0E08               	movlw	8
  1343   001BAE  6ED5               	movwf	213,c	;volatile
  1344                           
  1345                           ;BeeBot_Main.c: 246:     TMR0H = 0xF8;
  1346   001BB0  0EF8               	movlw	248
  1347   001BB2  6ED7               	movwf	215,c	;volatile
  1348                           
  1349                           ;BeeBot_Main.c: 247:     TMR0L = 0x2F;
  1350   001BB4  0E2F               	movlw	47
  1351   001BB6  6ED6               	movwf	214,c	;volatile
  1352   001BB8                     
  1353                           ;BeeBot_Main.c: 248:     INTCONbits.TMR0IE = 1;
  1354   001BB8  8AF2               	bsf	242,5,c	;volatile
  1355   001BBA                     
  1356                           ;BeeBot_Main.c: 251:     INTCONbits.PEIE = 1;
  1357   001BBA  8CF2               	bsf	242,6,c	;volatile
  1358   001BBC                     
  1359                           ;BeeBot_Main.c: 252:     INTCONbits.GIE = 1;
  1360   001BBC  8EF2               	bsf	242,7,c	;volatile
  1361   001BBE                     
  1362                           ;BeeBot_Main.c: 253:     T0CONbits.TMR0ON = 1;
  1363   001BBE  8ED5               	bsf	213,7,c	;volatile
  1364   001BC0  0012               	return		;funcret
  1365   001BC2                     __end_of_init_interrupts:
  1366                           	callstack 0
  1367                           
  1368 ;; *************** function _MRF_parse_message *****************
  1369 ;; Defined at:
  1370 ;;		line 180 in file "MRF89XAM.c"
  1371 ;; Parameters:    Size  Location     Type
  1372 ;;  message         2   17[BANK0 ] PTR unsigned char 
  1373 ;;		 -> MRF_message(40), 
  1374 ;;  code            2   19[BANK0 ] PTR unsigned char 
  1375 ;;		 -> main@MRF_msg_code(4), 
  1376 ;; Auto vars:     Size  Location     Type
  1377 ;;  counter         1   28[BANK0 ] unsigned char 
  1378 ;;  valid           1    0        unsigned char 
  1379 ;;  param1_full     1   27[BANK0 ] unsigned char 
  1380 ;;  length          1   26[BANK0 ] unsigned char 
  1381 ;; Return value:  Size  Location     Type
  1382 ;;                  1    wreg      void 
  1383 ;; Registers used:
  1384 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1385 ;; Tracked objects:
  1386 ;;		On entry : 0/0
  1387 ;;		On exit  : 0/0
  1388 ;;		Unchanged: 0/0
  1389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1390 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1391 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1392 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1393 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1394 ;;Total ram usage:       12 bytes
  1395 ;; Hardware stack levels used: 1
  1396 ;; Hardware stack levels required when called: 5
  1397 ;; This function calls:
  1398 ;;		_append_string
  1399 ;;		_isdigit
  1400 ;;		_strcmp
  1401 ;;		_strcpy
  1402 ;;		_strlen
  1403 ;; This function is called by:
  1404 ;;		_main
  1405 ;; This function uses a non-reentrant model
  1406 ;;
  1407                           
  1408                           	psect	text5
  1409   00101C                     __ptext5:
  1410                           	callstack 0
  1411   00101C                     _MRF_parse_message:
  1412                           	callstack 25
  1413   00101C                     
  1414                           ;MRF89XAM.c: 183:     BYTE counter;;MRF89XAM.c: 184:     BYTE length = (BYTE) strlen(mes
      +                          sage);
  1415   00101C  C0EB  F0DA         	movff	MRF_parse_message@message,strlen@s
  1416   001020  C0EC  F0DB         	movff	MRF_parse_message@message+1,strlen@s+1
  1417   001024  EC5B  F00D         	call	_strlen	;wreg free
  1418   001028  0100               	movlb	0	; () banked
  1419   00102A  51DA               	movf	?_strlen& (0+255),w,b
  1420   00102C  6FF4               	movwf	MRF_parse_message@length& (0+255),b
  1421   00102E                     
  1422                           ; BSR set to: 0
  1423                           ;MRF89XAM.c: 185:     BYTE param1_full = 0;
  1424   00102E  0E00               	movlw	0
  1425   001030  6FF5               	movwf	MRF_parse_message@param1_full& (0+255),b
  1426   001032                     
  1427                           ; BSR set to: 0
  1428                           ;MRF89XAM.c: 187:     if(!strcmp(message, "R"))
  1429   001032  C0EB  F0DA         	movff	MRF_parse_message@message,strcmp@l
  1430   001036  C0EC  F0DB         	movff	MRF_parse_message@message+1,strcmp@l+1
  1431   00103A  0E16               	movlw	low STR_9
  1432   00103C  6FDC               	movwf	strcmp@r& (0+255),b
  1433   00103E  0E10               	movlw	high STR_9
  1434   001040  6FDD               	movwf	(strcmp@r+1)& (0+255),b
  1435   001042  EC30  F00C         	call	_strcmp	;wreg free
  1436   001046  0100               	movlb	0	; () banked
  1437   001048  51DA               	movf	?_strcmp& (0+255),w,b
  1438   00104A  11DB               	iorwf	(?_strcmp+1)& (0+255),w,b
  1439   00104C  A4D8               	btfss	status,2,c
  1440   00104E  EF2B  F008         	goto	u841
  1441   001052  EF2D  F008         	goto	u840
  1442   001056                     u841:
  1443   001056  EF39  F008         	goto	l1630
  1444   00105A                     u840:
  1445   00105A                     
  1446                           ; BSR set to: 0
  1447                           ;MRF89XAM.c: 190:         strcpy(code, message);
  1448   00105A  C0ED  F0DA         	movff	MRF_parse_message@code,strcpy@dest
  1449   00105E  C0EE  F0DB         	movff	MRF_parse_message@code+1,strcpy@dest+1
  1450   001062  C0EB  F0DC         	movff	MRF_parse_message@message,strcpy@src
  1451   001066  C0EC  F0DD         	movff	MRF_parse_message@message+1,strcpy@src+1
  1452   00106A  ECDA  F00C         	call	_strcpy	;wreg free
  1453                           
  1454                           ;MRF89XAM.c: 193:     }
  1455   00106E  EF4F  F00A         	goto	l254
  1456   001072                     l1630:
  1457                           
  1458                           ; BSR set to: 0
  1459   001072  C0EB  F0DA         	movff	MRF_parse_message@message,strcmp@l
  1460   001076  C0EC  F0DB         	movff	MRF_parse_message@message+1,strcmp@l+1
  1461   00107A  0E11               	movlw	low STR_11
  1462   00107C  6FDC               	movwf	strcmp@r& (0+255),b
  1463   00107E  0E10               	movlw	high STR_11
  1464   001080  6FDD               	movwf	(strcmp@r+1)& (0+255),b
  1465   001082  EC30  F00C         	call	_strcmp	;wreg free
  1466   001086  0100               	movlb	0	; () banked
  1467   001088  51DA               	movf	?_strcmp& (0+255),w,b
  1468   00108A  11DB               	iorwf	(?_strcmp+1)& (0+255),w,b
  1469   00108C  A4D8               	btfss	status,2,c
  1470   00108E  EF4B  F008         	goto	u851
  1471   001092  EF4D  F008         	goto	u850
  1472   001096                     u851:
  1473   001096  EF59  F008         	goto	l1636
  1474   00109A                     u850:
  1475   00109A                     
  1476                           ; BSR set to: 0
  1477                           ;MRF89XAM.c: 197:         strcpy(code, message);
  1478   00109A  C0ED  F0DA         	movff	MRF_parse_message@code,strcpy@dest
  1479   00109E  C0EE  F0DB         	movff	MRF_parse_message@code+1,strcpy@dest+1
  1480   0010A2  C0EB  F0DC         	movff	MRF_parse_message@message,strcpy@src
  1481   0010A6  C0EC  F0DD         	movff	MRF_parse_message@message+1,strcpy@src+1
  1482   0010AA  ECDA  F00C         	call	_strcpy	;wreg free
  1483                           
  1484                           ;MRF89XAM.c: 204:     }
  1485   0010AE  EF4F  F00A         	goto	l254
  1486   0010B2                     l1636:
  1487                           
  1488                           ; BSR set to: 0
  1489   0010B2  C0EB  F0DA         	movff	MRF_parse_message@message,strcmp@l
  1490   0010B6  C0EC  F0DB         	movff	MRF_parse_message@message+1,strcmp@l+1
  1491   0010BA  0E14               	movlw	low STR_13
  1492   0010BC  6FDC               	movwf	strcmp@r& (0+255),b
  1493   0010BE  0E10               	movlw	high STR_13
  1494   0010C0  6FDD               	movwf	(strcmp@r+1)& (0+255),b
  1495   0010C2  EC30  F00C         	call	_strcmp	;wreg free
  1496   0010C6  0100               	movlb	0	; () banked
  1497   0010C8  51DA               	movf	?_strcmp& (0+255),w,b
  1498   0010CA  11DB               	iorwf	(?_strcmp+1)& (0+255),w,b
  1499   0010CC  A4D8               	btfss	status,2,c
  1500   0010CE  EF6B  F008         	goto	u861
  1501   0010D2  EF6D  F008         	goto	u860
  1502   0010D6                     u861:
  1503   0010D6  EF79  F008         	goto	l1642
  1504   0010DA                     u860:
  1505   0010DA                     
  1506                           ; BSR set to: 0
  1507                           ;MRF89XAM.c: 208:         strcpy(code, message);
  1508   0010DA  C0ED  F0DA         	movff	MRF_parse_message@code,strcpy@dest
  1509   0010DE  C0EE  F0DB         	movff	MRF_parse_message@code+1,strcpy@dest+1
  1510   0010E2  C0EB  F0DC         	movff	MRF_parse_message@message,strcpy@src
  1511   0010E6  C0EC  F0DD         	movff	MRF_parse_message@message+1,strcpy@src+1
  1512   0010EA  ECDA  F00C         	call	_strcpy	;wreg free
  1513                           
  1514                           ;MRF89XAM.c: 212:     }
  1515   0010EE  EF4F  F00A         	goto	l254
  1516   0010F2                     l1642:
  1517                           
  1518                           ; BSR set to: 0
  1519   0010F2  C0EB  F0DA         	movff	MRF_parse_message@message,strcmp@l
  1520   0010F6  C0EC  F0DB         	movff	MRF_parse_message@message+1,strcmp@l+1
  1521   0010FA  0E05               	movlw	low STR_15
  1522   0010FC  6FDC               	movwf	strcmp@r& (0+255),b
  1523   0010FE  0E10               	movlw	high STR_15
  1524   001100  6FDD               	movwf	(strcmp@r+1)& (0+255),b
  1525   001102  EC30  F00C         	call	_strcmp	;wreg free
  1526   001106  0100               	movlb	0	; () banked
  1527   001108  51DA               	movf	?_strcmp& (0+255),w,b
  1528   00110A  11DB               	iorwf	(?_strcmp+1)& (0+255),w,b
  1529   00110C  A4D8               	btfss	status,2,c
  1530   00110E  EF8B  F008         	goto	u871
  1531   001112  EF8D  F008         	goto	u870
  1532   001116                     u871:
  1533   001116  EF99  F008         	goto	l1648
  1534   00111A                     u870:
  1535   00111A                     
  1536                           ; BSR set to: 0
  1537                           ;MRF89XAM.c: 216:         strcpy(code, message);
  1538   00111A  C0ED  F0DA         	movff	MRF_parse_message@code,strcpy@dest
  1539   00111E  C0EE  F0DB         	movff	MRF_parse_message@code+1,strcpy@dest+1
  1540   001122  C0EB  F0DC         	movff	MRF_parse_message@message,strcpy@src
  1541   001126  C0EC  F0DD         	movff	MRF_parse_message@message+1,strcpy@src+1
  1542   00112A  ECDA  F00C         	call	_strcpy	;wreg free
  1543                           
  1544                           ;MRF89XAM.c: 220:     }
  1545   00112E  EF4F  F00A         	goto	l254
  1546   001132                     l1648:
  1547                           
  1548                           ; BSR set to: 0
  1549   001132  C0EB  F0DA         	movff	MRF_parse_message@message,strcmp@l
  1550   001136  C0EC  F0DB         	movff	MRF_parse_message@message+1,strcmp@l+1
  1551   00113A  0E09               	movlw	low STR_17
  1552   00113C  6FDC               	movwf	strcmp@r& (0+255),b
  1553   00113E  0E10               	movlw	high STR_17
  1554   001140  6FDD               	movwf	(strcmp@r+1)& (0+255),b
  1555   001142  EC30  F00C         	call	_strcmp	;wreg free
  1556   001146  0100               	movlb	0	; () banked
  1557   001148  51DA               	movf	?_strcmp& (0+255),w,b
  1558   00114A  11DB               	iorwf	(?_strcmp+1)& (0+255),w,b
  1559   00114C  A4D8               	btfss	status,2,c
  1560   00114E  EFAB  F008         	goto	u881
  1561   001152  EFAD  F008         	goto	u880
  1562   001156                     u881:
  1563   001156  EFB9  F008         	goto	l1654
  1564   00115A                     u880:
  1565   00115A                     
  1566                           ; BSR set to: 0
  1567                           ;MRF89XAM.c: 224:         strcpy(code, message);
  1568   00115A  C0ED  F0DA         	movff	MRF_parse_message@code,strcpy@dest
  1569   00115E  C0EE  F0DB         	movff	MRF_parse_message@code+1,strcpy@dest+1
  1570   001162  C0EB  F0DC         	movff	MRF_parse_message@message,strcpy@src
  1571   001166  C0EC  F0DD         	movff	MRF_parse_message@message+1,strcpy@src+1
  1572   00116A  ECDA  F00C         	call	_strcpy	;wreg free
  1573                           
  1574                           ;MRF89XAM.c: 231:     }
  1575   00116E  EF4F  F00A         	goto	l254
  1576   001172                     l1654:
  1577                           
  1578                           ; BSR set to: 0
  1579   001172  C0EB  F0DA         	movff	MRF_parse_message@message,strcmp@l
  1580   001176  C0EC  F0DB         	movff	MRF_parse_message@message+1,strcmp@l+1
  1581   00117A  0E01               	movlw	low STR_19
  1582   00117C  6FDC               	movwf	strcmp@r& (0+255),b
  1583   00117E  0E10               	movlw	high STR_19
  1584   001180  6FDD               	movwf	(strcmp@r+1)& (0+255),b
  1585   001182  EC30  F00C         	call	_strcmp	;wreg free
  1586   001186  0100               	movlb	0	; () banked
  1587   001188  51DA               	movf	?_strcmp& (0+255),w,b
  1588   00118A  11DB               	iorwf	(?_strcmp+1)& (0+255),w,b
  1589   00118C  A4D8               	btfss	status,2,c
  1590   00118E  EFCB  F008         	goto	u891
  1591   001192  EFCD  F008         	goto	u890
  1592   001196                     u891:
  1593   001196  EFD9  F008         	goto	l1660
  1594   00119A                     u890:
  1595   00119A                     
  1596                           ; BSR set to: 0
  1597                           ;MRF89XAM.c: 235:         strcpy(code, message);
  1598   00119A  C0ED  F0DA         	movff	MRF_parse_message@code,strcpy@dest
  1599   00119E  C0EE  F0DB         	movff	MRF_parse_message@code+1,strcpy@dest+1
  1600   0011A2  C0EB  F0DC         	movff	MRF_parse_message@message,strcpy@src
  1601   0011A6  C0EC  F0DD         	movff	MRF_parse_message@message+1,strcpy@src+1
  1602   0011AA  ECDA  F00C         	call	_strcpy	;wreg free
  1603                           
  1604                           ;MRF89XAM.c: 245:     }
  1605   0011AE  EF4F  F00A         	goto	l254
  1606   0011B2                     l1660:
  1607                           
  1608                           ; BSR set to: 0
  1609   0011B2  C0EB  FFD9         	movff	MRF_parse_message@message,fsr2l
  1610   0011B6  C0EC  FFDA         	movff	MRF_parse_message@message+1,fsr2h
  1611   0011BA  0E41               	movlw	65
  1612   0011BC  18DE               	xorwf	postinc2,w,c
  1613   0011BE  B4D8               	btfsc	status,2,c
  1614   0011C0  EFE4  F008         	goto	u901
  1615   0011C4  EFE6  F008         	goto	u900
  1616   0011C8                     u901:
  1617   0011C8  EFF3  F008         	goto	l1664
  1618   0011CC                     u900:
  1619   0011CC                     
  1620                           ; BSR set to: 0
  1621   0011CC  C0EB  FFD9         	movff	MRF_parse_message@message,fsr2l
  1622   0011D0  C0EC  FFDA         	movff	MRF_parse_message@message+1,fsr2h
  1623   0011D4  0E4D               	movlw	77
  1624   0011D6  18DE               	xorwf	postinc2,w,c
  1625   0011D8  A4D8               	btfss	status,2,c
  1626   0011DA  EFF1  F008         	goto	u911
  1627   0011DE  EFF3  F008         	goto	u910
  1628   0011E2                     u911:
  1629   0011E2  EF08  F009         	goto	l1670
  1630   0011E6                     u910:
  1631   0011E6                     l1664:
  1632   0011E6                     l1666:
  1633                           
  1634                           ;MRF89XAM.c: 249:         code[0] = message[0];
  1635   0011E6  C0EB  FFD9         	movff	MRF_parse_message@message,fsr2l
  1636   0011EA  C0EC  FFDA         	movff	MRF_parse_message@message+1,fsr2h
  1637   0011EE  C0ED  FFE1         	movff	MRF_parse_message@code,fsr1l
  1638   0011F2  C0EE  FFE2         	movff	MRF_parse_message@code+1,fsr1h
  1639   0011F6  CFDF FFE7          	movff	indf2,indf1
  1640   0011FA                     
  1641                           ;MRF89XAM.c: 250:         code[1] = '\0';
  1642   0011FA  0100               	movlb	0	; () banked
  1643   0011FC  EE20 F001          	lfsr	2,1
  1644   001200  51ED               	movf	MRF_parse_message@code& (0+255),w,b
  1645   001202  26D9               	addwf	fsr2l,f,c
  1646   001204  51EE               	movf	(MRF_parse_message@code+1)& (0+255),w,b
  1647   001206  22DA               	addwfc	fsr2h,f,c
  1648   001208  0E00               	movlw	0
  1649   00120A  6EDF               	movwf	indf2,c
  1650                           
  1651                           ;MRF89XAM.c: 251:     }
  1652   00120C  EF4F  F00A         	goto	l254
  1653   001210                     l1670:
  1654                           
  1655                           ; BSR set to: 0
  1656   001210  C0EB  FFD9         	movff	MRF_parse_message@message,fsr2l
  1657   001214  C0EC  FFDA         	movff	MRF_parse_message@message+1,fsr2h
  1658   001218  0E4E               	movlw	78
  1659   00121A  18DE               	xorwf	postinc2,w,c
  1660   00121C  A4D8               	btfss	status,2,c
  1661   00121E  EF13  F009         	goto	u921
  1662   001222  EF15  F009         	goto	u920
  1663   001226                     u921:
  1664   001226  EF0D  F00A         	goto	l1712
  1665   00122A                     u920:
  1666   00122A                     
  1667                           ; BSR set to: 0
  1668   00122A  EE20 F001          	lfsr	2,1
  1669   00122E  51EB               	movf	MRF_parse_message@message& (0+255),w,b
  1670   001230  26D9               	addwf	fsr2l,f,c
  1671   001232  51EC               	movf	(MRF_parse_message@message+1)& (0+255),w,b
  1672   001234  22DA               	addwfc	fsr2h,f,c
  1673   001236  0E41               	movlw	65
  1674   001238  18DE               	xorwf	postinc2,w,c
  1675   00123A  A4D8               	btfss	status,2,c
  1676   00123C  EF22  F009         	goto	u931
  1677   001240  EF24  F009         	goto	u930
  1678   001244                     u931:
  1679   001244  EF0D  F00A         	goto	l1712
  1680   001248                     u930:
  1681   001248                     
  1682                           ; BSR set to: 0
  1683   001248  EE20 F002          	lfsr	2,2
  1684   00124C  51EB               	movf	MRF_parse_message@message& (0+255),w,b
  1685   00124E  26D9               	addwf	fsr2l,f,c
  1686   001250  51EC               	movf	(MRF_parse_message@message+1)& (0+255),w,b
  1687   001252  22DA               	addwfc	fsr2h,f,c
  1688   001254  0E56               	movlw	86
  1689   001256  18DE               	xorwf	postinc2,w,c
  1690   001258  A4D8               	btfss	status,2,c
  1691   00125A  EF31  F009         	goto	u941
  1692   00125E  EF33  F009         	goto	u940
  1693   001262                     u941:
  1694   001262  EF0D  F00A         	goto	l1712
  1695   001266                     u940:
  1696   001266                     
  1697                           ; BSR set to: 0
  1698                           ;MRF89XAM.c: 253:     {;MRF89XAM.c: 254:         strcpy(MRF_param1, "");
  1699   001266  0ED0               	movlw	low _MRF_param1
  1700   001268  6FDA               	movwf	strcpy@dest& (0+255),b
  1701   00126A  0E00               	movlw	high _MRF_param1
  1702   00126C  6FDB               	movwf	(strcpy@dest+1)& (0+255),b
  1703   00126E  0E13               	movlw	low (STR_11+2)
  1704   001270  6FDC               	movwf	strcpy@src& (0+255),b
  1705   001272  0E10               	movlw	high (STR_11+2)
  1706   001274  6FDD               	movwf	(strcpy@src+1)& (0+255),b
  1707   001276  ECDA  F00C         	call	_strcpy	;wreg free
  1708                           
  1709                           ;MRF89XAM.c: 255:         strcpy(MRF_param2, "");
  1710   00127A  0EC6               	movlw	low _MRF_param2
  1711   00127C  0100               	movlb	0	; () banked
  1712   00127E  6FDA               	movwf	strcpy@dest& (0+255),b
  1713   001280  0E00               	movlw	high _MRF_param2
  1714   001282  6FDB               	movwf	(strcpy@dest+1)& (0+255),b
  1715   001284  0E13               	movlw	low (STR_11+2)
  1716   001286  6FDC               	movwf	strcpy@src& (0+255),b
  1717   001288  0E10               	movlw	high (STR_11+2)
  1718   00128A  6FDD               	movwf	(strcpy@src+1)& (0+255),b
  1719   00128C  ECDA  F00C         	call	_strcpy	;wreg free
  1720   001290                     
  1721                           ;MRF89XAM.c: 256:         code[0] = message[0];
  1722   001290  C0EB  FFD9         	movff	MRF_parse_message@message,fsr2l
  1723   001294  C0EC  FFDA         	movff	MRF_parse_message@message+1,fsr2h
  1724   001298  C0ED  FFE1         	movff	MRF_parse_message@code,fsr1l
  1725   00129C  C0EE  FFE2         	movff	MRF_parse_message@code+1,fsr1h
  1726   0012A0  CFDF FFE7          	movff	indf2,indf1
  1727   0012A4                     
  1728                           ;MRF89XAM.c: 257:         code[1] = message[1];
  1729   0012A4  0100               	movlb	0	; () banked
  1730   0012A6  EE20 F001          	lfsr	2,1
  1731   0012AA  51EB               	movf	MRF_parse_message@message& (0+255),w,b
  1732   0012AC  26D9               	addwf	fsr2l,f,c
  1733   0012AE  51EC               	movf	(MRF_parse_message@message+1)& (0+255),w,b
  1734   0012B0  22DA               	addwfc	fsr2h,f,c
  1735   0012B2  EE10 F001          	lfsr	1,1
  1736   0012B6  51ED               	movf	MRF_parse_message@code& (0+255),w,b
  1737   0012B8  26E1               	addwf	fsr1l,f,c
  1738   0012BA  51EE               	movf	(MRF_parse_message@code+1)& (0+255),w,b
  1739   0012BC  22E2               	addwfc	fsr1h,f,c
  1740   0012BE  CFDF FFE7          	movff	indf2,indf1
  1741   0012C2                     
  1742                           ; BSR set to: 0
  1743                           ;MRF89XAM.c: 258:         code[2] = message[2];
  1744   0012C2  EE20 F002          	lfsr	2,2
  1745   0012C6  51EB               	movf	MRF_parse_message@message& (0+255),w,b
  1746   0012C8  26D9               	addwf	fsr2l,f,c
  1747   0012CA  51EC               	movf	(MRF_parse_message@message+1)& (0+255),w,b
  1748   0012CC  22DA               	addwfc	fsr2h,f,c
  1749   0012CE  EE10 F002          	lfsr	1,2
  1750   0012D2  51ED               	movf	MRF_parse_message@code& (0+255),w,b
  1751   0012D4  26E1               	addwf	fsr1l,f,c
  1752   0012D6  51EE               	movf	(MRF_parse_message@code+1)& (0+255),w,b
  1753   0012D8  22E2               	addwfc	fsr1h,f,c
  1754   0012DA  CFDF FFE7          	movff	indf2,indf1
  1755   0012DE                     
  1756                           ; BSR set to: 0
  1757                           ;MRF89XAM.c: 259:         code[3] = '\0';
  1758   0012DE  EE20 F003          	lfsr	2,3
  1759   0012E2  51ED               	movf	MRF_parse_message@code& (0+255),w,b
  1760   0012E4  26D9               	addwf	fsr2l,f,c
  1761   0012E6  51EE               	movf	(MRF_parse_message@code+1)& (0+255),w,b
  1762   0012E8  22DA               	addwfc	fsr2h,f,c
  1763   0012EA  0E00               	movlw	0
  1764   0012EC  6EDF               	movwf	indf2,c
  1765   0012EE                     
  1766                           ; BSR set to: 0
  1767                           ;MRF89XAM.c: 262:         for(counter = 0; counter < length; counter++)
  1768   0012EE  0E00               	movlw	0
  1769   0012F0  6FF6               	movwf	MRF_parse_message@counter& (0+255),b
  1770   0012F2  EF02  F00A         	goto	l1710
  1771   0012F6                     l1690:
  1772                           
  1773                           ; BSR set to: 0
  1774   0012F6  51F6               	movf	MRF_parse_message@counter& (0+255),w,b
  1775   0012F8  25EB               	addwf	MRF_parse_message@message& (0+255),w,b
  1776   0012FA  6ED9               	movwf	fsr2l,c
  1777   0012FC  0E00               	movlw	0
  1778   0012FE  21EC               	addwfc	(MRF_parse_message@message+1)& (0+255),w,b
  1779   001300  6EDA               	movwf	fsr2h,c
  1780   001302  50DF               	movf	indf2,w,c
  1781   001304  6FEF               	movwf	??_MRF_parse_message& (0+255),b
  1782   001306  0ED0               	movlw	208
  1783   001308  25EF               	addwf	??_MRF_parse_message& (0+255),w,b
  1784   00130A  6FF0               	movwf	(??_MRF_parse_message+1)& (0+255),b
  1785   00130C  6BF1               	clrf	(??_MRF_parse_message+2)& (0+255),b
  1786   00130E  0EFF               	movlw	255
  1787   001310  23F1               	addwfc	(??_MRF_parse_message+2)& (0+255),f,b
  1788   001312  51F1               	movf	(??_MRF_parse_message+2)& (0+255),w,b
  1789   001314  E109               	bnz	u950
  1790   001316  0E0A               	movlw	10
  1791   001318  5DF0               	subwf	(??_MRF_parse_message+1)& (0+255),w,b
  1792   00131A  A0D8               	btfss	status,0,c
  1793   00131C  EF92  F009         	goto	u951
  1794   001320  EF94  F009         	goto	u950
  1795   001324                     u951:
  1796   001324  EFA3  F009         	goto	l1694
  1797   001328                     u950:
  1798   001328                     
  1799                           ; BSR set to: 0
  1800   001328  51F6               	movf	MRF_parse_message@counter& (0+255),w,b
  1801   00132A  25EB               	addwf	MRF_parse_message@message& (0+255),w,b
  1802   00132C  6ED9               	movwf	fsr2l,c
  1803   00132E  0E00               	movlw	0
  1804   001330  21EC               	addwfc	(MRF_parse_message@message+1)& (0+255),w,b
  1805   001332  6EDA               	movwf	fsr2h,c
  1806   001334  0E2E               	movlw	46
  1807   001336  18DE               	xorwf	postinc2,w,c
  1808   001338  A4D8               	btfss	status,2,c
  1809   00133A  EFA1  F009         	goto	u961
  1810   00133E  EFA3  F009         	goto	u960
  1811   001342                     u961:
  1812   001342  EF00  F00A         	goto	l1708
  1813   001346                     u960:
  1814   001346                     l1694:
  1815                           
  1816                           ; BSR set to: 0
  1817                           ;MRF89XAM.c: 265:             {;MRF89XAM.c: 266:                 if(!param1_full)
  1818   001346  51F5               	movf	MRF_parse_message@param1_full& (0+255),w,b
  1819   001348  A4D8               	btfss	status,2,c
  1820   00134A  EFA9  F009         	goto	u971
  1821   00134E  EFAB  F009         	goto	u970
  1822   001352                     u971:
  1823   001352  EFF2  F009         	goto	l1706
  1824   001356                     u970:
  1825   001356                     
  1826                           ; BSR set to: 0
  1827                           ;MRF89XAM.c: 267:                 {;MRF89XAM.c: 268:                     append_string(M
      +                          RF_param1, message[counter]);
  1828   001356  0ED0               	movlw	low _MRF_param1
  1829   001358  6FE4               	movwf	append_string@str& (0+255),b
  1830   00135A  0E00               	movlw	high _MRF_param1
  1831   00135C  6FE5               	movwf	(append_string@str+1)& (0+255),b
  1832   00135E  51F6               	movf	MRF_parse_message@counter& (0+255),w,b
  1833   001360  25EB               	addwf	MRF_parse_message@message& (0+255),w,b
  1834   001362  6ED9               	movwf	fsr2l,c
  1835   001364  0E00               	movlw	0
  1836   001366  21EC               	addwfc	(MRF_parse_message@message+1)& (0+255),w,b
  1837   001368  6EDA               	movwf	fsr2h,c
  1838   00136A  50DF               	movf	indf2,w,c
  1839   00136C  6FE6               	movwf	append_string@ch& (0+255),b
  1840   00136E  EC69  F00C         	call	_append_string	;wreg free
  1841   001372  0100               	movlb	0	; () banked
  1842   001374  51F6               	movf	MRF_parse_message@counter& (0+255),w,b
  1843   001376  25EB               	addwf	MRF_parse_message@message& (0+255),w,b
  1844   001378  6FEF               	movwf	??_MRF_parse_message& (0+255),b
  1845   00137A  0E00               	movlw	0
  1846   00137C  21EC               	addwfc	(MRF_parse_message@message+1)& (0+255),w,b
  1847   00137E  6FF0               	movwf	(??_MRF_parse_message+1)& (0+255),b
  1848   001380  0E01               	movlw	1
  1849   001382  25EF               	addwf	??_MRF_parse_message& (0+255),w,b
  1850   001384  6ED9               	movwf	fsr2l,c
  1851   001386  0E00               	movlw	0
  1852   001388  21F0               	addwfc	(??_MRF_parse_message+1)& (0+255),w,b
  1853   00138A  6EDA               	movwf	fsr2h,c
  1854   00138C  50DF               	movf	indf2,w,c
  1855   00138E  6FF1               	movwf	(??_MRF_parse_message+2)& (0+255),b
  1856   001390  0ED0               	movlw	208
  1857   001392  25F1               	addwf	(??_MRF_parse_message+2)& (0+255),w,b
  1858   001394  6FF2               	movwf	(??_MRF_parse_message+3)& (0+255),b
  1859   001396  6BF3               	clrf	(??_MRF_parse_message+4)& (0+255),b
  1860   001398  0EFF               	movlw	255
  1861   00139A  23F3               	addwfc	(??_MRF_parse_message+4)& (0+255),f,b
  1862   00139C  51F3               	movf	(??_MRF_parse_message+4)& (0+255),w,b
  1863   00139E  E109               	bnz	u980
  1864   0013A0  0E0A               	movlw	10
  1865   0013A2  5DF2               	subwf	(??_MRF_parse_message+3)& (0+255),w,b
  1866   0013A4  A0D8               	btfss	status,0,c
  1867   0013A6  EFD7  F009         	goto	u981
  1868   0013AA  EFD9  F009         	goto	u980
  1869   0013AE                     u981:
  1870   0013AE  EF00  F00A         	goto	l1708
  1871   0013B2                     u980:
  1872   0013B2                     
  1873                           ; BSR set to: 0
  1874   0013B2  51F6               	movf	MRF_parse_message@counter& (0+255),w,b
  1875   0013B4  25EB               	addwf	MRF_parse_message@message& (0+255),w,b
  1876   0013B6  6FEF               	movwf	??_MRF_parse_message& (0+255),b
  1877   0013B8  0E00               	movlw	0
  1878   0013BA  21EC               	addwfc	(MRF_parse_message@message+1)& (0+255),w,b
  1879   0013BC  6FF0               	movwf	(??_MRF_parse_message+1)& (0+255),b
  1880   0013BE  0E01               	movlw	1
  1881   0013C0  25EF               	addwf	??_MRF_parse_message& (0+255),w,b
  1882   0013C2  6ED9               	movwf	fsr2l,c
  1883   0013C4  0E00               	movlw	0
  1884   0013C6  21F0               	addwfc	(??_MRF_parse_message+1)& (0+255),w,b
  1885   0013C8  6EDA               	movwf	fsr2h,c
  1886   0013CA  0E2E               	movlw	46
  1887   0013CC  18DE               	xorwf	postinc2,w,c
  1888   0013CE  B4D8               	btfsc	status,2,c
  1889   0013D0  EFEC  F009         	goto	u991
  1890   0013D4  EFEE  F009         	goto	u990
  1891   0013D8                     u991:
  1892   0013D8  EF00  F00A         	goto	l1708
  1893   0013DC                     u990:
  1894   0013DC                     
  1895                           ; BSR set to: 0
  1896                           ;MRF89XAM.c: 270:                         param1_full = 1;
  1897   0013DC  0E01               	movlw	1
  1898   0013DE  6FF5               	movwf	MRF_parse_message@param1_full& (0+255),b
  1899   0013E0  EF00  F00A         	goto	l1708
  1900   0013E4                     l1706:
  1901                           
  1902                           ; BSR set to: 0
  1903                           ;MRF89XAM.c: 273:                     append_string(MRF_param2, message[counter]);
  1904   0013E4  0EC6               	movlw	low _MRF_param2
  1905   0013E6  6FE4               	movwf	append_string@str& (0+255),b
  1906   0013E8  0E00               	movlw	high _MRF_param2
  1907   0013EA  6FE5               	movwf	(append_string@str+1)& (0+255),b
  1908   0013EC  51F6               	movf	MRF_parse_message@counter& (0+255),w,b
  1909   0013EE  25EB               	addwf	MRF_parse_message@message& (0+255),w,b
  1910   0013F0  6ED9               	movwf	fsr2l,c
  1911   0013F2  0E00               	movlw	0
  1912   0013F4  21EC               	addwfc	(MRF_parse_message@message+1)& (0+255),w,b
  1913   0013F6  6EDA               	movwf	fsr2h,c
  1914   0013F8  50DF               	movf	indf2,w,c
  1915   0013FA  6FE6               	movwf	append_string@ch& (0+255),b
  1916   0013FC  EC69  F00C         	call	_append_string	;wreg free
  1917   001400                     l1708:
  1918                           
  1919                           ;MRF89XAM.c: 275:         }
  1920   001400  0100               	movlb	0	; () banked
  1921   001402  2BF6               	incf	MRF_parse_message@counter& (0+255),f,b
  1922   001404                     l1710:
  1923                           
  1924                           ; BSR set to: 0
  1925   001404  51F4               	movf	MRF_parse_message@length& (0+255),w,b
  1926   001406  5DF6               	subwf	MRF_parse_message@counter& (0+255),w,b
  1927   001408  A0D8               	btfss	status,0,c
  1928   00140A  EF09  F00A         	goto	u1001
  1929   00140E  EF0B  F00A         	goto	u1000
  1930   001412                     u1001:
  1931   001412  EF7B  F009         	goto	l1690
  1932   001416                     u1000:
  1933   001416  EF4F  F00A         	goto	l254
  1934   00141A                     l1712:
  1935                           
  1936                           ; BSR set to: 0
  1937   00141A  C0EB  FFD9         	movff	MRF_parse_message@message,fsr2l
  1938   00141E  C0EC  FFDA         	movff	MRF_parse_message@message+1,fsr2h
  1939   001422  0E4A               	movlw	74
  1940   001424  18DE               	xorwf	postinc2,w,c
  1941   001426  A4D8               	btfss	status,2,c
  1942   001428  EF18  F00A         	goto	u1011
  1943   00142C  EF1A  F00A         	goto	u1010
  1944   001430                     u1011:
  1945   001430  EF4F  F00A         	goto	l233
  1946   001434                     u1010:
  1947   001434                     
  1948                           ; BSR set to: 0
  1949                           ;MRF89XAM.c: 278:     {;MRF89XAM.c: 279:         strcpy(MRF_param1, "");
  1950   001434  0ED0               	movlw	low _MRF_param1
  1951   001436  6FDA               	movwf	strcpy@dest& (0+255),b
  1952   001438  0E00               	movlw	high _MRF_param1
  1953   00143A  6FDB               	movwf	(strcpy@dest+1)& (0+255),b
  1954   00143C  0E13               	movlw	low (STR_11+2)
  1955   00143E  6FDC               	movwf	strcpy@src& (0+255),b
  1956   001440  0E10               	movlw	high (STR_11+2)
  1957   001442  6FDD               	movwf	(strcpy@src+1)& (0+255),b
  1958   001444  ECDA  F00C         	call	_strcpy	;wreg free
  1959                           
  1960                           ;MRF89XAM.c: 280:         strcpy(MRF_param2, "");
  1961   001448  0EC6               	movlw	low _MRF_param2
  1962   00144A  0100               	movlb	0	; () banked
  1963   00144C  6FDA               	movwf	strcpy@dest& (0+255),b
  1964   00144E  0E00               	movlw	high _MRF_param2
  1965   001450  6FDB               	movwf	(strcpy@dest+1)& (0+255),b
  1966   001452  0E13               	movlw	low (STR_11+2)
  1967   001454  6FDC               	movwf	strcpy@src& (0+255),b
  1968   001456  0E10               	movlw	high (STR_11+2)
  1969   001458  6FDD               	movwf	(strcpy@src+1)& (0+255),b
  1970   00145A  ECDA  F00C         	call	_strcpy	;wreg free
  1971                           
  1972                           ;MRF89XAM.c: 283:         append_string(MRF_param1, message[1]);
  1973   00145E  0ED0               	movlw	low _MRF_param1
  1974   001460  0100               	movlb	0	; () banked
  1975   001462  6FE4               	movwf	append_string@str& (0+255),b
  1976   001464  0E00               	movlw	high _MRF_param1
  1977   001466  6FE5               	movwf	(append_string@str+1)& (0+255),b
  1978   001468  EE20 F001          	lfsr	2,1
  1979   00146C  51EB               	movf	MRF_parse_message@message& (0+255),w,b
  1980   00146E  26D9               	addwf	fsr2l,f,c
  1981   001470  51EC               	movf	(MRF_parse_message@message+1)& (0+255),w,b
  1982   001472  22DA               	addwfc	fsr2h,f,c
  1983   001474  50DF               	movf	indf2,w,c
  1984   001476  6FE6               	movwf	append_string@ch& (0+255),b
  1985   001478  EC69  F00C         	call	_append_string	;wreg free
  1986                           
  1987                           ;MRF89XAM.c: 284:         append_string(MRF_param2, message[2]);
  1988   00147C  0EC6               	movlw	low _MRF_param2
  1989   00147E  0100               	movlb	0	; () banked
  1990   001480  6FE4               	movwf	append_string@str& (0+255),b
  1991   001482  0E00               	movlw	high _MRF_param2
  1992   001484  6FE5               	movwf	(append_string@str+1)& (0+255),b
  1993   001486  EE20 F002          	lfsr	2,2
  1994   00148A  51EB               	movf	MRF_parse_message@message& (0+255),w,b
  1995   00148C  26D9               	addwf	fsr2l,f,c
  1996   00148E  51EC               	movf	(MRF_parse_message@message+1)& (0+255),w,b
  1997   001490  22DA               	addwfc	fsr2h,f,c
  1998   001492  50DF               	movf	indf2,w,c
  1999   001494  6FE6               	movwf	append_string@ch& (0+255),b
  2000   001496  EC69  F00C         	call	_append_string	;wreg free
  2001   00149A  EFF3  F008         	goto	l1666
  2002   00149E                     l233:
  2003   00149E                     l254:
  2004   00149E  0012               	return		;funcret
  2005   0014A0                     __end_of_MRF_parse_message:
  2006                           	callstack 0
  2007                           
  2008 ;; *************** function _strcmp *****************
  2009 ;; Defined at:
  2010 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strcmp.c"
  2011 ;; Parameters:    Size  Location     Type
  2012 ;;  l               2    0[BANK0 ] PTR const unsigned char 
  2013 ;;		 -> usb_message(40), main@MRF_msg_code(4), MRF_message(40), 
  2014 ;;  r               2    2[BANK0 ] PTR const unsigned char 
  2015 ;;		 -> STR_31(4), STR_29(3), STR_27(2), STR_20(4), 
  2016 ;;		 -> STR_18(4), STR_16(4), STR_14(2), STR_12(3), 
  2017 ;;		 -> STR_10(2), STR_6(1), STR_4(2), STR_2(4), 
  2018 ;; Auto vars:     Size  Location     Type
  2019 ;;		None
  2020 ;; Return value:  Size  Location     Type
  2021 ;;                  2    0[BANK0 ] int 
  2022 ;; Registers used:
  2023 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2024 ;; Tracked objects:
  2025 ;;		On entry : 0/0
  2026 ;;		On exit  : 0/0
  2027 ;;		Unchanged: 0/0
  2028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2029 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2031 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2032 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2033 ;;Total ram usage:        5 bytes
  2034 ;; Hardware stack levels used: 1
  2035 ;; Hardware stack levels required when called: 3
  2036 ;; This function calls:
  2037 ;;		Nothing
  2038 ;; This function is called by:
  2039 ;;		_main
  2040 ;;		_MRF_parse_message
  2041 ;;		_parse_usb_message
  2042 ;; This function uses a non-reentrant model
  2043 ;;
  2044                           
  2045                           	psect	text6
  2046   001860                     __ptext6:
  2047                           	callstack 0
  2048   001860                     _strcmp:
  2049                           	callstack 27
  2050   001860  EF36  F00C         	goto	l1532
  2051   001864                     l1530:
  2052                           
  2053                           ; BSR set to: 0
  2054   001864  4BDA               	infsnz	strcmp@l& (0+255),f,b
  2055   001866  2BDB               	incf	(strcmp@l+1)& (0+255),f,b
  2056   001868  4BDC               	infsnz	strcmp@r& (0+255),f,b
  2057   00186A  2BDD               	incf	(strcmp@r+1)& (0+255),f,b
  2058   00186C                     l1532:
  2059   00186C  C0DA  FFD9         	movff	strcmp@l,fsr2l
  2060   001870  C0DB  FFDA         	movff	strcmp@l+1,fsr2h
  2061   001874  50DF               	movf	indf2,w,c
  2062   001876  0100               	movlb	0	; () banked
  2063   001878  6FDE               	movwf	??_strcmp& (0+255),b
  2064   00187A  C0DC  FFF6         	movff	strcmp@r,tblptrl
  2065   00187E  C0DD  FFF7         	movff	strcmp@r+1,tblptrh
  2066   001882                     	if	0	;tblptru may be non-zero
  2067   001882                     	endif
  2068   001882                     	if	0	;tblptru may be non-zero
  2069   001882                     	endif
  2070   001882  0008               	tblrd		*
  2071   001884  50F5               	movf	tablat,w,c
  2072   001886  19DE               	xorwf	??_strcmp& (0+255),w,b
  2073   001888  A4D8               	btfss	status,2,c
  2074   00188A  EF49  F00C         	goto	u751
  2075   00188E  EF4B  F00C         	goto	u750
  2076   001892                     u751:
  2077   001892  EF57  F00C         	goto	l1536
  2078   001896                     u750:
  2079   001896                     
  2080                           ; BSR set to: 0
  2081   001896  C0DA  FFD9         	movff	strcmp@l,fsr2l
  2082   00189A  C0DB  FFDA         	movff	strcmp@l+1,fsr2h
  2083   00189E  50DF               	movf	indf2,w,c
  2084   0018A0  A4D8               	btfss	status,2,c
  2085   0018A2  EF55  F00C         	goto	u761
  2086   0018A6  EF57  F00C         	goto	u760
  2087   0018AA                     u761:
  2088   0018AA  EF32  F00C         	goto	l1530
  2089   0018AE                     u760:
  2090   0018AE                     l1536:
  2091                           
  2092                           ; BSR set to: 0
  2093   0018AE  C0DA  FFD9         	movff	strcmp@l,fsr2l
  2094   0018B2  C0DB  FFDA         	movff	strcmp@l+1,fsr2h
  2095   0018B6  50DF               	movf	indf2,w,c
  2096   0018B8  6FDE               	movwf	??_strcmp& (0+255),b
  2097   0018BA  C0DC  FFF6         	movff	strcmp@r,tblptrl
  2098   0018BE  C0DD  FFF7         	movff	strcmp@r+1,tblptrh
  2099   0018C2                     	if	0	;tblptru may be non-zero
  2100   0018C2                     	endif
  2101   0018C2                     	if	0	;tblptru may be non-zero
  2102   0018C2                     	endif
  2103   0018C2  0008               	tblrd		*
  2104   0018C4  50F5               	movf	tablat,w,c
  2105   0018C6  5DDE               	subwf	??_strcmp& (0+255),w,b
  2106   0018C8  6FDA               	movwf	?_strcmp& (0+255),b
  2107   0018CA  6BDB               	clrf	(?_strcmp+1)& (0+255),b
  2108   0018CC  A0D8               	btfss	status,0,c
  2109   0018CE  07DB               	decf	(?_strcmp+1)& (0+255),f,b
  2110   0018D0                     
  2111                           ; BSR set to: 0
  2112   0018D0  0012               	return		;funcret
  2113   0018D2                     __end_of_strcmp:
  2114                           	callstack 0
  2115                           
  2116 ;; *************** function _isdigit *****************
  2117 ;; Defined at:
  2118 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isdigit.c"
  2119 ;; Parameters:    Size  Location     Type
  2120 ;;  c               2    0[BANK0 ] int 
  2121 ;; Auto vars:     Size  Location     Type
  2122 ;;		None
  2123 ;; Return value:  Size  Location     Type
  2124 ;;                  2    0[BANK0 ] int 
  2125 ;; Registers used:
  2126 ;;		wreg, status,2, status,0
  2127 ;; Tracked objects:
  2128 ;;		On entry : 0/0
  2129 ;;		On exit  : 0/0
  2130 ;;		Unchanged: 0/0
  2131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2132 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2134 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2135 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2136 ;;Total ram usage:        4 bytes
  2137 ;; Hardware stack levels used: 1
  2138 ;; Hardware stack levels required when called: 3
  2139 ;; This function calls:
  2140 ;;		Nothing
  2141 ;; This function is called by:
  2142 ;;		_MRF_parse_message
  2143 ;;		_parse_usb_message
  2144 ;; This function uses a non-reentrant model
  2145 ;;
  2146                           
  2147                           	psect	text7
  2148   001B58                     __ptext7:
  2149                           	callstack 0
  2150   001B58                     _isdigit:
  2151                           	callstack 26
  2152   001B58  0ED0               	movlw	208
  2153   001B5A  0100               	movlb	0	; () banked
  2154   001B5C  25DA               	addwf	isdigit@c& (0+255),w,b
  2155   001B5E  6FDC               	movwf	??_isdigit& (0+255),b
  2156   001B60  0EFF               	movlw	255
  2157   001B62  21DB               	addwfc	(isdigit@c+1)& (0+255),w,b
  2158   001B64  6FDD               	movwf	(??_isdigit+1)& (0+255),b
  2159   001B66  51DD               	movf	(??_isdigit+1)& (0+255),w,b
  2160   001B68  E10A               	bnz	u790
  2161   001B6A  0E0A               	movlw	10
  2162   001B6C  5DDC               	subwf	??_isdigit& (0+255),w,b
  2163   001B6E  A0D8               	btfss	status,0,c
  2164   001B70  EFBC  F00D         	goto	u791
  2165   001B74  EFBF  F00D         	goto	u790
  2166   001B78                     u791:
  2167   001B78  0E01               	movlw	1
  2168   001B7A  EFC0  F00D         	goto	u800
  2169   001B7E                     u790:
  2170   001B7E  0E00               	movlw	0
  2171   001B80                     u800:
  2172   001B80  6FDA               	movwf	?_isdigit& (0+255),b
  2173   001B82  6BDB               	clrf	(?_isdigit+1)& (0+255),b
  2174   001B84                     
  2175                           ; BSR set to: 0
  2176   001B84  0012               	return		;funcret
  2177   001B86                     __end_of_isdigit:
  2178                           	callstack 0
  2179                           
  2180 ;; *************** function _append_string *****************
  2181 ;; Defined at:
  2182 ;;		line 14 in file "BeeBot_Globals.c"
  2183 ;; Parameters:    Size  Location     Type
  2184 ;;  str             2   10[BANK0 ] PTR unsigned char 
  2185 ;;		 -> USB_param2(10), USB_param1(10), MRF_param2(10), MRF_param1(10), 
  2186 ;;		 -> ISR@temp_receive_string(40), usb_message(40), 
  2187 ;;  ch              1   12[BANK0 ] unsigned char 
  2188 ;; Auto vars:     Size  Location     Type
  2189 ;;  length          2   15[BANK0 ] unsigned int 
  2190 ;; Return value:  Size  Location     Type
  2191 ;;                  1    wreg      void 
  2192 ;; Registers used:
  2193 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2194 ;; Tracked objects:
  2195 ;;		On entry : 0/0
  2196 ;;		On exit  : 0/0
  2197 ;;		Unchanged: 0/0
  2198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2199 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2200 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2201 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2202 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2203 ;;Total ram usage:        7 bytes
  2204 ;; Hardware stack levels used: 1
  2205 ;; Hardware stack levels required when called: 4
  2206 ;; This function calls:
  2207 ;;		_strcpy
  2208 ;;		_strlen
  2209 ;; This function is called by:
  2210 ;;		_MRF_parse_message
  2211 ;;		_parse_usb_message
  2212 ;; This function uses a non-reentrant model
  2213 ;;
  2214                           
  2215                           	psect	text8
  2216   0018D2                     __ptext8:
  2217                           	callstack 0
  2218   0018D2                     _append_string:
  2219                           	callstack 25
  2220   0018D2                     
  2221                           ;BeeBot_Globals.c: 14: void append_string(char *str, char ch);BeeBot_Globals.c: 15: {;Be
      +                          eBot_Globals.c: 16:     unsigned int length = strlen(str);
  2222   0018D2  C0E4  F0DA         	movff	append_string@str,strlen@s
  2223   0018D6  C0E5  F0DB         	movff	append_string@str+1,strlen@s+1
  2224   0018DA  EC5B  F00D         	call	_strlen	;wreg free
  2225   0018DE  C0DA  F0E9         	movff	?_strlen,append_string@length
  2226   0018E2  C0DB  F0EA         	movff	?_strlen+1,append_string@length+1
  2227   0018E6                     
  2228                           ;BeeBot_Globals.c: 17:     if(length < 40 - 1)
  2229   0018E6  0100               	movlb	0	; () banked
  2230   0018E8  51EA               	movf	(append_string@length+1)& (0+255),w,b
  2231   0018EA  E107               	bnz	u771
  2232   0018EC  0E27               	movlw	39
  2233   0018EE  5DE9               	subwf	append_string@length& (0+255),w,b
  2234   0018F0  B0D8               	btfsc	status,0,c
  2235   0018F2  EF7D  F00C         	goto	u771
  2236   0018F6  EF7F  F00C         	goto	u770
  2237   0018FA                     u771:
  2238   0018FA  EF97  F00C         	goto	l1546
  2239   0018FE                     u770:
  2240   0018FE                     
  2241                           ; BSR set to: 0
  2242                           ;BeeBot_Globals.c: 18:     {;BeeBot_Globals.c: 19:         str[length] = ch;
  2243   0018FE  51E9               	movf	append_string@length& (0+255),w,b
  2244   001900  25E4               	addwf	append_string@str& (0+255),w,b
  2245   001902  6ED9               	movwf	fsr2l,c
  2246   001904  51EA               	movf	(append_string@length+1)& (0+255),w,b
  2247   001906  21E5               	addwfc	(append_string@str+1)& (0+255),w,b
  2248   001908  6EDA               	movwf	fsr2h,c
  2249   00190A  C0E6  FFDF         	movff	append_string@ch,indf2
  2250                           
  2251                           ;BeeBot_Globals.c: 20:         str[length + 1] = '\0';
  2252   00190E  51E9               	movf	append_string@length& (0+255),w,b
  2253   001910  25E4               	addwf	append_string@str& (0+255),w,b
  2254   001912  6FE7               	movwf	??_append_string& (0+255),b
  2255   001914  51EA               	movf	(append_string@length+1)& (0+255),w,b
  2256   001916  21E5               	addwfc	(append_string@str+1)& (0+255),w,b
  2257   001918  6FE8               	movwf	(??_append_string+1)& (0+255),b
  2258   00191A  0E01               	movlw	1
  2259   00191C  25E7               	addwf	??_append_string& (0+255),w,b
  2260   00191E  6ED9               	movwf	fsr2l,c
  2261   001920  0E00               	movlw	0
  2262   001922  21E8               	addwfc	(??_append_string+1)& (0+255),w,b
  2263   001924  6EDA               	movwf	fsr2h,c
  2264   001926  0E00               	movlw	0
  2265   001928  6EDF               	movwf	indf2,c
  2266                           
  2267                           ;BeeBot_Globals.c: 21:     }
  2268   00192A  EFA1  F00C         	goto	l263
  2269   00192E                     l1546:
  2270                           
  2271                           ; BSR set to: 0
  2272                           ;BeeBot_Globals.c: 23:         strcpy(str, "");
  2273   00192E  C0E4  F0DA         	movff	append_string@str,strcpy@dest
  2274   001932  C0E5  F0DB         	movff	append_string@str+1,strcpy@dest+1
  2275   001936  0E13               	movlw	low (STR_11+2)
  2276   001938  6FDC               	movwf	strcpy@src& (0+255),b
  2277   00193A  0E10               	movlw	high (STR_11+2)
  2278   00193C  6FDD               	movwf	(strcpy@src+1)& (0+255),b
  2279   00193E  ECDA  F00C         	call	_strcpy	;wreg free
  2280   001942                     l263:
  2281   001942  0012               	return		;funcret
  2282   001944                     __end_of_append_string:
  2283                           	callstack 0
  2284                           
  2285 ;; *************** function _strlen *****************
  2286 ;; Defined at:
  2287 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strlen.c"
  2288 ;; Parameters:    Size  Location     Type
  2289 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  2290 ;;		 -> USB_param2(10), USB_param1(10), MRF_param2(10), MRF_param1(10), 
  2291 ;;		 -> ISR@temp_receive_string(40), usb_message(40), MRF_message(40), 
  2292 ;; Auto vars:     Size  Location     Type
  2293 ;;  a               2    2[BANK0 ] PTR const unsigned char 
  2294 ;;		 -> USB_param2(10), USB_param1(10), MRF_param2(10), MRF_param1(10), 
  2295 ;;		 -> ISR@temp_receive_string(40), usb_message(40), MRF_message(40), 
  2296 ;; Return value:  Size  Location     Type
  2297 ;;                  2    0[BANK0 ] unsigned int 
  2298 ;; Registers used:
  2299 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2300 ;; Tracked objects:
  2301 ;;		On entry : 0/0
  2302 ;;		On exit  : 0/0
  2303 ;;		Unchanged: 0/0
  2304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2305 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2306 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2308 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2309 ;;Total ram usage:        4 bytes
  2310 ;; Hardware stack levels used: 1
  2311 ;; Hardware stack levels required when called: 3
  2312 ;; This function calls:
  2313 ;;		Nothing
  2314 ;; This function is called by:
  2315 ;;		_MRF_parse_message
  2316 ;;		_append_string
  2317 ;;		_transmit_string_MRF89XAM
  2318 ;;		_transmit_string_usb
  2319 ;; This function uses a non-reentrant model
  2320 ;;
  2321                           
  2322                           	psect	text9
  2323   001AB6                     __ptext9:
  2324                           	callstack 0
  2325   001AB6                     _strlen:
  2326                           	callstack 25
  2327   001AB6  C0DA  F0DC         	movff	strlen@s,strlen@a
  2328   001ABA  C0DB  F0DD         	movff	strlen@s+1,strlen@a+1
  2329   001ABE  EF64  F00D         	goto	l1522
  2330   001AC2                     l1520:
  2331   001AC2  0100               	movlb	0	; () banked
  2332   001AC4  4BDA               	infsnz	strlen@s& (0+255),f,b
  2333   001AC6  2BDB               	incf	(strlen@s+1)& (0+255),f,b
  2334   001AC8                     l1522:
  2335   001AC8  C0DA  FFD9         	movff	strlen@s,fsr2l
  2336   001ACC  C0DB  FFDA         	movff	strlen@s+1,fsr2h
  2337   001AD0  50DF               	movf	indf2,w,c
  2338   001AD2  A4D8               	btfss	status,2,c
  2339   001AD4  EF6E  F00D         	goto	u741
  2340   001AD8  EF70  F00D         	goto	u740
  2341   001ADC                     u741:
  2342   001ADC  EF61  F00D         	goto	l1520
  2343   001AE0                     u740:
  2344   001AE0  0100               	movlb	0	; () banked
  2345   001AE2  51DC               	movf	strlen@a& (0+255),w,b
  2346   001AE4  5DDA               	subwf	strlen@s& (0+255),w,b
  2347   001AE6  6FDA               	movwf	?_strlen& (0+255),b
  2348   001AE8  51DD               	movf	(strlen@a+1)& (0+255),w,b
  2349   001AEA  59DB               	subwfb	(strlen@s+1)& (0+255),w,b
  2350   001AEC  6FDB               	movwf	(?_strlen+1)& (0+255),b
  2351   001AEE                     
  2352                           ; BSR set to: 0
  2353   001AEE  0012               	return		;funcret
  2354   001AF0                     __end_of_strlen:
  2355                           	callstack 0
  2356                           
  2357 ;; *************** function _strcpy *****************
  2358 ;; Defined at:
  2359 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strcpy.c"
  2360 ;; Parameters:    Size  Location     Type
  2361 ;;  dest            2    0[BANK0 ] PTR unsigned char 
  2362 ;;		 -> USB_param2(10), USB_param1(10), MRF_param2(10), MRF_param1(10), 
  2363 ;;		 -> ISR@temp_receive_string(40), usb_message(40), main@MRF_msg_code(4), MRF_message(40), 
  2364 ;;  src             2    2[BANK0 ] PTR const unsigned char 
  2365 ;;		 -> STR_25(1), STR_24(1), STR_23(1), STR_22(1), 
  2366 ;;		 -> STR_21(1), ISR@temp_receive_string(40), STR_8(1), STR_7(1), 
  2367 ;;		 -> MRF_message(40), 
  2368 ;; Auto vars:     Size  Location     Type
  2369 ;;  d               2    8[BANK0 ] PTR unsigned char 
  2370 ;;		 -> USB_param2(10), USB_param1(10), MRF_param2(10), MRF_param1(10), 
  2371 ;;		 -> ISR@temp_receive_string(40), usb_message(40), main@MRF_msg_code(4), MRF_message(40), 
  2372 ;;  s               2    6[BANK0 ] PTR const unsigned char 
  2373 ;;		 -> STR_25(1), STR_24(1), STR_23(1), STR_22(1), 
  2374 ;;		 -> STR_21(1), ISR@temp_receive_string(40), STR_8(1), STR_7(1), 
  2375 ;;		 -> MRF_message(40), 
  2376 ;; Return value:  Size  Location     Type
  2377 ;;                  2    0[BANK0 ] PTR unsigned char 
  2378 ;; Registers used:
  2379 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2380 ;; Tracked objects:
  2381 ;;		On entry : 0/0
  2382 ;;		On exit  : 0/0
  2383 ;;		Unchanged: 0/0
  2384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2385 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2386 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2387 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2388 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2389 ;;Total ram usage:       10 bytes
  2390 ;; Hardware stack levels used: 1
  2391 ;; Hardware stack levels required when called: 3
  2392 ;; This function calls:
  2393 ;;		Nothing
  2394 ;; This function is called by:
  2395 ;;		_main
  2396 ;;		_MRF_parse_message
  2397 ;;		_append_string
  2398 ;; This function uses a non-reentrant model
  2399 ;;
  2400                           
  2401                           	psect	text10
  2402   0019B4                     __ptext10:
  2403                           	callstack 0
  2404   0019B4                     _strcpy:
  2405                           	callstack 27
  2406   0019B4  C0DC  F0E0         	movff	strcpy@src,strcpy@s
  2407   0019B8  C0DD  F0E1         	movff	strcpy@src+1,strcpy@s+1
  2408   0019BC  C0DA  F0E2         	movff	strcpy@dest,strcpy@d
  2409   0019C0  C0DB  F0E3         	movff	strcpy@dest+1,strcpy@d+1
  2410   0019C4                     l1516:
  2411   0019C4  0100               	movlb	0	; () banked
  2412   0019C6  51E0               	movf	strcpy@s& (0+255),w,b
  2413   0019C8  6FDE               	movwf	??_strcpy& (0+255),b
  2414   0019CA  51E1               	movf	(strcpy@s+1)& (0+255),w,b
  2415   0019CC  6FDF               	movwf	(??_strcpy+1)& (0+255),b
  2416   0019CE  4BE0               	infsnz	strcpy@s& (0+255),f,b
  2417   0019D0  2BE1               	incf	(strcpy@s+1)& (0+255),f,b
  2418   0019D2  C0DE  FFF6         	movff	??_strcpy,tblptrl
  2419   0019D6  C0DF  FFF7         	movff	??_strcpy+1,tblptrh
  2420   0019DA  0E00               	movlw	low (__smallconst shr (0+16))
  2421   0019DC  6EF8               	movwf	tblptru,c
  2422   0019DE  C0E2  FFD9         	movff	strcpy@d,fsr2l
  2423   0019E2  C0E3  FFDA         	movff	strcpy@d+1,fsr2h
  2424   0019E6  4BE2               	infsnz	strcpy@d& (0+255),f,b
  2425   0019E8  2BE3               	incf	(strcpy@d+1)& (0+255),f,b
  2426   0019EA  0E0F               	movlw	(high __ramtop+-1)
  2427   0019EC  64F7               	cpfsgt	tblptrh,c
  2428   0019EE  D003               	bra	u727
  2429   0019F0  0008               	tblrd		*
  2430   0019F2  50F5               	movf	tablat,w,c
  2431   0019F4  D005               	bra	u720
  2432   0019F6                     u727:
  2433   0019F6  CFF6 FFE9          	movff	tblptrl,fsr0l
  2434   0019FA  CFF7 FFEA          	movff	tblptrh,fsr0h
  2435   0019FE  50EF               	movf	indf0,w,c
  2436   001A00                     u720:
  2437   001A00  6EDF               	movwf	indf2,c
  2438   001A02  50DF               	movf	indf2,w,c
  2439   001A04  A4D8               	btfss	status,2,c
  2440   001A06  EF07  F00D         	goto	u731
  2441   001A0A  EF09  F00D         	goto	u730
  2442   001A0E                     u731:
  2443   001A0E  EFE2  F00C         	goto	l1516
  2444   001A12                     u730:
  2445   001A12  0012               	return		;funcret
  2446   001A14                     __end_of_strcpy:
  2447                           	callstack 0
  2448                           
  2449 ;; *************** function _ISR *****************
  2450 ;; Defined at:
  2451 ;;		line 260 in file "BeeBot_Main.c"
  2452 ;; Parameters:    Size  Location     Type
  2453 ;;		None
  2454 ;; Auto vars:     Size  Location     Type
  2455 ;;  temp_receive   40   27[COMRAM] unsigned char [40]
  2456 ;;  MRF_input       1   68[COMRAM] unsigned char 
  2457 ;;  usb_input       1   67[COMRAM] unsigned char 
  2458 ;; Return value:  Size  Location     Type
  2459 ;;                  1    wreg      void 
  2460 ;; Registers used:
  2461 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2462 ;; Tracked objects:
  2463 ;;		On entry : 0/0
  2464 ;;		On exit  : 0/0
  2465 ;;		Unchanged: 0/0
  2466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2468 ;;      Locals:        42       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2469 ;;      Temps:         10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2470 ;;      Totals:        52       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2471 ;;Total ram usage:       52 bytes
  2472 ;; Hardware stack levels used: 1
  2473 ;; Hardware stack levels required when called: 2
  2474 ;; This function calls:
  2475 ;;		_read_byte_usb
  2476 ;;		_receive_MRF89XAM
  2477 ;;		i2_append_string
  2478 ;;		i2_strcpy
  2479 ;; This function is called by:
  2480 ;;		Interrupt level 2
  2481 ;; This function uses a non-reentrant model
  2482 ;;
  2483                           
  2484                           	psect	intcode
  2485   000008                     __pintcode:
  2486                           	callstack 0
  2487   000008                     _ISR:
  2488                           	callstack 25
  2489                           
  2490                           ;incstack = 0
  2491   000008  824B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2492   00000A  CFE9 F012          	movff	fsr0l,??_ISR
  2493   00000E  CFEA F013          	movff	fsr0h,??_ISR+1
  2494   000012  CFE1 F014          	movff	fsr1l,??_ISR+2
  2495   000016  CFE2 F015          	movff	fsr1h,??_ISR+3
  2496   00001A  CFD9 F016          	movff	fsr2l,??_ISR+4
  2497   00001E  CFDA F017          	movff	fsr2h,??_ISR+5
  2498   000022  CFF6 F018          	movff	tblptrl,??_ISR+6
  2499   000026  CFF7 F019          	movff	tblptrh,??_ISR+7
  2500   00002A  CFF8 F01A          	movff	tblptru,??_ISR+8
  2501   00002E  CFF5 F01B          	movff	tablat,??_ISR+9
  2502   000032                     
  2503                           ;BeeBot_Main.c: 263:     char temp_receive_string[40] = "";
  2504   000032  EE21  F000         	lfsr	2,ISR@F6726
  2505   000036  EE10  F01C         	lfsr	1,ISR@temp_receive_string
  2506   00003A  0E27               	movlw	39
  2507   00003C                     i2u124_41:
  2508   00003C  CFDB FFE3          	movff	plusw2,plusw1
  2509   000040  06E8               	decf	wreg,f,c
  2510   000042  E2FC               	bc	i2u124_41
  2511   000044                     
  2512                           ;BeeBot_Main.c: 268:     if(PIR1bits.RC1IF && PIE1bits.RC1IE)
  2513   000044  AA9E               	btfss	158,5,c	;volatile
  2514   000046  EF27  F000         	goto	i2u125_41
  2515   00004A  EF29  F000         	goto	i2u125_40
  2516   00004E                     i2u125_41:
  2517   00004E  EF3B  F000         	goto	i2l1852
  2518   000052                     i2u125_40:
  2519   000052  AA9D               	btfss	157,5,c	;volatile
  2520   000054  EF2E  F000         	goto	i2u126_41
  2521   000058  EF30  F000         	goto	i2u126_40
  2522   00005C                     i2u126_41:
  2523   00005C  EF3B  F000         	goto	i2l1852
  2524   000060                     i2u126_40:
  2525   000060                     
  2526                           ;BeeBot_Main.c: 269:     {;BeeBot_Main.c: 270:         usb_input = read_byte_usb();
  2527   000060  ECE1  F00D         	call	_read_byte_usb	;wreg free
  2528   000064  6E44               	movwf	ISR@usb_input^0,c
  2529   000066                     
  2530                           ;BeeBot_Main.c: 271:         append_string(usb_message, usb_input);
  2531   000066  0E62               	movlw	low _usb_message
  2532   000068  6E0B               	movwf	i2append_string@str^0,c
  2533   00006A  0E00               	movlw	high _usb_message
  2534   00006C  6E0C               	movwf	(i2append_string@str+1)^0,c
  2535   00006E  C044  F00D         	movff	ISR@usb_input,i2append_string@ch
  2536   000072  ECA2  F00C         	call	i2_append_string	;wreg free
  2537   000076                     i2l1852:
  2538                           
  2539                           ;BeeBot_Main.c: 275:     if(TMR0IE && TMR0IF)
  2540   000076  AAF2               	btfss	4082,5,c	;volatile
  2541   000078  EF40  F000         	goto	i2u127_41
  2542   00007C  EF42  F000         	goto	i2u127_40
  2543   000080                     i2u127_41:
  2544   000080  EF50  F000         	goto	i2l1864
  2545   000084                     i2u127_40:
  2546   000084  A4F2               	btfss	4082,2,c	;volatile
  2547   000086  EF47  F000         	goto	i2u128_41
  2548   00008A  EF49  F000         	goto	i2u128_40
  2549   00008E                     i2u128_41:
  2550   00008E  EF50  F000         	goto	i2l1864
  2551   000092                     i2u128_40:
  2552   000092                     
  2553                           ;BeeBot_Main.c: 276:     {;BeeBot_Main.c: 277:         TMR0IF = 0;
  2554   000092  94F2               	bcf	4082,2,c	;volatile
  2555   000094                     
  2556                           ;BeeBot_Main.c: 278:         timer_tick++;
  2557   000094  4A46               	infsnz	_timer_tick^0,f,c
  2558   000096  2A47               	incf	(_timer_tick+1)^0,f,c
  2559   000098                     
  2560                           ;BeeBot_Main.c: 279:         TMR0H = 0xF8;
  2561   000098  0EF8               	movlw	248
  2562   00009A  6ED7               	movwf	215,c	;volatile
  2563   00009C                     
  2564                           ;BeeBot_Main.c: 280:         TMR0L = 0x2F;
  2565   00009C  0E2F               	movlw	47
  2566   00009E  6ED6               	movwf	214,c	;volatile
  2567   0000A0                     i2l1864:
  2568                           
  2569                           ;BeeBot_Main.c: 284:     if(INTCON3bits.INT1F && !MRF_transmitting)
  2570   0000A0  A0F0               	btfss	240,0,c	;volatile
  2571   0000A2  EF55  F000         	goto	i2u129_41
  2572   0000A6  EF57  F000         	goto	i2u129_40
  2573   0000AA                     i2u129_41:
  2574   0000AA  EF83  F000         	goto	i2l137
  2575   0000AE                     i2u129_40:
  2576   0000AE  504A               	movf	_MRF_transmitting^0,w,c
  2577   0000B0  A4D8               	btfss	status,2,c
  2578   0000B2  EF5D  F000         	goto	i2u130_41
  2579   0000B6  EF5F  F000         	goto	i2u130_40
  2580   0000BA                     i2u130_41:
  2581   0000BA  EF83  F000         	goto	i2l137
  2582   0000BE                     i2u130_40:
  2583   0000BE                     
  2584                           ;BeeBot_Main.c: 285:     {;BeeBot_Main.c: 286:         INTCON3bits.INT1F = 0;
  2585   0000BE  90F0               	bcf	240,0,c	;volatile
  2586   0000C0                     
  2587                           ;BeeBot_Main.c: 287:         MRF_input = (char) receive_MRF89XAM();
  2588   0000C0  ECF9  F00D         	call	_receive_MRF89XAM	;wreg free
  2589   0000C4  6E45               	movwf	ISR@MRF_input^0,c
  2590   0000C6                     
  2591                           ;BeeBot_Main.c: 288:         if(MRF_input == '\n')
  2592   0000C6  0E0A               	movlw	10
  2593   0000C8  1845               	xorwf	ISR@MRF_input^0,w,c
  2594   0000CA  A4D8               	btfss	status,2,c
  2595   0000CC  EF6A  F000         	goto	i2u131_41
  2596   0000D0  EF6C  F000         	goto	i2u131_40
  2597   0000D4                     i2u131_41:
  2598   0000D4  EF7B  F000         	goto	i2l1878
  2599   0000D8                     i2u131_40:
  2600   0000D8                     
  2601                           ;BeeBot_Main.c: 289:         {;BeeBot_Main.c: 290:             MRF_message_received = 1;
  2602   0000D8  0E01               	movlw	1
  2603   0000DA  0100               	movlb	0	; () banked
  2604   0000DC  6F61               	movwf	_MRF_message_received& (0+255),b
  2605   0000DE                     
  2606                           ; BSR set to: 0
  2607                           ;BeeBot_Main.c: 291:             strcpy(MRF_message, temp_receive_string);
  2608   0000DE  0E8A               	movlw	low _MRF_message
  2609   0000E0  6E01               	movwf	i2strcpy@dest^0,c
  2610   0000E2  0E00               	movlw	high _MRF_message
  2611   0000E4  6E02               	movwf	(i2strcpy@dest+1)^0,c
  2612   0000E6  0E1C               	movlw	low ISR@temp_receive_string
  2613   0000E8  6E03               	movwf	i2strcpy@src^0,c
  2614   0000EA  0E00               	movlw	high ISR@temp_receive_string
  2615   0000EC  6E04               	movwf	(i2strcpy@src+1)^0,c
  2616   0000EE  EC0A  F00D         	call	i2_strcpy	;wreg free
  2617                           
  2618                           ;BeeBot_Main.c: 292:         }
  2619   0000F2  EF83  F000         	goto	i2l137
  2620   0000F6                     i2l1878:
  2621                           
  2622                           ;BeeBot_Main.c: 294:             append_string(temp_receive_string, MRF_input);
  2623   0000F6  0E1C               	movlw	low ISR@temp_receive_string
  2624   0000F8  6E0B               	movwf	i2append_string@str^0,c
  2625   0000FA  0E00               	movlw	high ISR@temp_receive_string
  2626   0000FC  6E0C               	movwf	(i2append_string@str+1)^0,c
  2627   0000FE  C045  F00D         	movff	ISR@MRF_input,i2append_string@ch
  2628   000102  ECA2  F00C         	call	i2_append_string	;wreg free
  2629   000106                     i2l137:
  2630   000106  C01B  FFF5         	movff	??_ISR+9,tablat
  2631   00010A  C01A  FFF8         	movff	??_ISR+8,tblptru
  2632   00010E  C019  FFF7         	movff	??_ISR+7,tblptrh
  2633   000112  C018  FFF6         	movff	??_ISR+6,tblptrl
  2634   000116  C017  FFDA         	movff	??_ISR+5,fsr2h
  2635   00011A  C016  FFD9         	movff	??_ISR+4,fsr2l
  2636   00011E  C015  FFE2         	movff	??_ISR+3,fsr1h
  2637   000122  C014  FFE1         	movff	??_ISR+2,fsr1l
  2638   000126  C013  FFEA         	movff	??_ISR+1,fsr0h
  2639   00012A  C012  FFE9         	movff	??_ISR,fsr0l
  2640   00012E  924B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2641   000130  0011               	retfie		f
  2642   000132                     __end_of_ISR:
  2643                           	callstack 0
  2644                           
  2645 ;; *************** function i2_append_string *****************
  2646 ;; Defined at:
  2647 ;;		line 14 in file "BeeBot_Globals.c"
  2648 ;; Parameters:    Size  Location     Type
  2649 ;;  str             2   10[COMRAM] PTR unsigned char 
  2650 ;;		 -> USB_param2(10), USB_param1(10), MRF_param2(10), MRF_param1(10), 
  2651 ;;		 -> ISR@temp_receive_string(40), usb_message(40), 
  2652 ;;  ch              1   12[COMRAM] unsigned char 
  2653 ;; Auto vars:     Size  Location     Type
  2654 ;;  length          2   15[COMRAM] unsigned int 
  2655 ;; Return value:  Size  Location     Type
  2656 ;;                  1    wreg      void 
  2657 ;; Registers used:
  2658 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2659 ;; Tracked objects:
  2660 ;;		On entry : 0/0
  2661 ;;		On exit  : 0/0
  2662 ;;		Unchanged: 0/0
  2663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2664 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2665 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2666 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2667 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2668 ;;Total ram usage:        7 bytes
  2669 ;; Hardware stack levels used: 1
  2670 ;; Hardware stack levels required when called: 1
  2671 ;; This function calls:
  2672 ;;		i2_strcpy
  2673 ;;		i2_strlen
  2674 ;; This function is called by:
  2675 ;;		_ISR
  2676 ;; This function uses a non-reentrant model
  2677 ;;
  2678                           
  2679                           	psect	text12
  2680   001944                     __ptext12:
  2681                           	callstack 0
  2682   001944                     i2_append_string:
  2683                           	callstack 25
  2684   001944                     
  2685                           ;BeeBot_Globals.c: 14: void append_string(char *str, char ch);BeeBot_Globals.c: 15: {;Be
      +                          eBot_Globals.c: 16:     unsigned int length = strlen(str);
  2686   001944  C00B  F001         	movff	i2append_string@str,i2strlen@s
  2687   001948  C00C  F002         	movff	i2append_string@str+1,i2strlen@s+1
  2688   00194C  EC78  F00D         	call	i2_strlen	;wreg free
  2689   001950  C001  F010         	movff	?i2_strlen,i2append_string@length
  2690   001954  C002  F011         	movff	?i2_strlen+1,i2append_string@length+1
  2691   001958                     
  2692                           ;BeeBot_Globals.c: 17:     if(length < 40 - 1)
  2693   001958  5011               	movf	(i2append_string@length+1)^0,w,c
  2694   00195A  E107               	bnz	i2u116_41
  2695   00195C  0E27               	movlw	39
  2696   00195E  5C10               	subwf	i2append_string@length^0,w,c
  2697   001960  B0D8               	btfsc	status,0,c
  2698   001962  EFB5  F00C         	goto	i2u116_41
  2699   001966  EFB7  F00C         	goto	i2u116_40
  2700   00196A                     i2u116_41:
  2701   00196A  EFCF  F00C         	goto	i2l1786
  2702   00196E                     i2u116_40:
  2703   00196E                     
  2704                           ;BeeBot_Globals.c: 18:     {;BeeBot_Globals.c: 19:         str[length] = ch;
  2705   00196E  5010               	movf	i2append_string@length^0,w,c
  2706   001970  240B               	addwf	i2append_string@str^0,w,c
  2707   001972  6ED9               	movwf	fsr2l,c
  2708   001974  5011               	movf	(i2append_string@length+1)^0,w,c
  2709   001976  200C               	addwfc	(i2append_string@str+1)^0,w,c
  2710   001978  6EDA               	movwf	fsr2h,c
  2711   00197A  C00D  FFDF         	movff	i2append_string@ch,indf2
  2712                           
  2713                           ;BeeBot_Globals.c: 20:         str[length + 1] = '\0';
  2714   00197E  5010               	movf	i2append_string@length^0,w,c
  2715   001980  240B               	addwf	i2append_string@str^0,w,c
  2716   001982  6E0E               	movwf	??i2_append_string^0,c
  2717   001984  5011               	movf	(i2append_string@length+1)^0,w,c
  2718   001986  200C               	addwfc	(i2append_string@str+1)^0,w,c
  2719   001988  6E0F               	movwf	(??i2_append_string+1)^0,c
  2720   00198A  0E01               	movlw	1
  2721   00198C  240E               	addwf	??i2_append_string^0,w,c
  2722   00198E  6ED9               	movwf	fsr2l,c
  2723   001990  0E00               	movlw	0
  2724   001992  200F               	addwfc	(??i2_append_string+1)^0,w,c
  2725   001994  6EDA               	movwf	fsr2h,c
  2726   001996  0E00               	movlw	0
  2727   001998  6EDF               	movwf	indf2,c
  2728                           
  2729                           ;BeeBot_Globals.c: 21:     }
  2730   00199A  EFD9  F00C         	goto	i2l263
  2731   00199E                     i2l1786:
  2732                           
  2733                           ;BeeBot_Globals.c: 23:         strcpy(str, "");
  2734   00199E  C00B  F001         	movff	i2append_string@str,i2strcpy@dest
  2735   0019A2  C00C  F002         	movff	i2append_string@str+1,i2strcpy@dest+1
  2736   0019A6  0E13               	movlw	low (STR_11+2)
  2737   0019A8  6E03               	movwf	i2strcpy@src^0,c
  2738   0019AA  0E10               	movlw	high (STR_11+2)
  2739   0019AC  6E04               	movwf	(i2strcpy@src+1)^0,c
  2740   0019AE  EC0A  F00D         	call	i2_strcpy	;wreg free
  2741   0019B2                     i2l263:
  2742   0019B2  0012               	return		;funcret
  2743   0019B4                     __end_ofi2_append_string:
  2744                           	callstack 0
  2745                           
  2746 ;; *************** function i2_strlen *****************
  2747 ;; Defined at:
  2748 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strlen.c"
  2749 ;; Parameters:    Size  Location     Type
  2750 ;;  s               2    0[COMRAM] PTR const unsigned char 
  2751 ;;		 -> USB_param2(10), USB_param1(10), MRF_param2(10), MRF_param1(10), 
  2752 ;;		 -> ISR@temp_receive_string(40), usb_message(40), MRF_message(40), 
  2753 ;; Auto vars:     Size  Location     Type
  2754 ;;  a               2    2[COMRAM] PTR const unsigned char 
  2755 ;;		 -> USB_param2(10), USB_param1(10), MRF_param2(10), MRF_param1(10), 
  2756 ;;		 -> ISR@temp_receive_string(40), usb_message(40), MRF_message(40), 
  2757 ;; Return value:  Size  Location     Type
  2758 ;;                  2    0[COMRAM] unsigned int 
  2759 ;; Registers used:
  2760 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2761 ;; Tracked objects:
  2762 ;;		On entry : 0/0
  2763 ;;		On exit  : 0/0
  2764 ;;		Unchanged: 0/0
  2765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2766 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2767 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2769 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2770 ;;Total ram usage:        4 bytes
  2771 ;; Hardware stack levels used: 1
  2772 ;; This function calls:
  2773 ;;		Nothing
  2774 ;; This function is called by:
  2775 ;;		i2_append_string
  2776 ;; This function uses a non-reentrant model
  2777 ;;
  2778                           
  2779                           	psect	text13
  2780   001AF0                     __ptext13:
  2781                           	callstack 0
  2782   001AF0                     i2_strlen:
  2783                           	callstack 25
  2784   001AF0  C001  F003         	movff	i2strlen@s,i2strlen@a
  2785   001AF4  C002  F004         	movff	i2strlen@s+1,i2strlen@a+1
  2786   001AF8  EF80  F00D         	goto	i2l1572
  2787   001AFC                     i2l1570:
  2788   001AFC  4A01               	infsnz	i2strlen@s^0,f,c
  2789   001AFE  2A02               	incf	(i2strlen@s+1)^0,f,c
  2790   001B00                     i2l1572:
  2791   001B00  C001  FFD9         	movff	i2strlen@s,fsr2l
  2792   001B04  C002  FFDA         	movff	i2strlen@s+1,fsr2h
  2793   001B08  50DF               	movf	indf2,w,c
  2794   001B0A  A4D8               	btfss	status,2,c
  2795   001B0C  EF8A  F00D         	goto	i2u83_41
  2796   001B10  EF8C  F00D         	goto	i2u83_40
  2797   001B14                     i2u83_41:
  2798   001B14  EF7E  F00D         	goto	i2l1570
  2799   001B18                     i2u83_40:
  2800   001B18  5003               	movf	i2strlen@a^0,w,c
  2801   001B1A  5C01               	subwf	i2strlen@s^0,w,c
  2802   001B1C  6E01               	movwf	?i2_strlen^0,c
  2803   001B1E  5004               	movf	(i2strlen@a+1)^0,w,c
  2804   001B20  5802               	subwfb	(i2strlen@s+1)^0,w,c
  2805   001B22  6E02               	movwf	(?i2_strlen+1)^0,c
  2806   001B24  0012               	return		;funcret
  2807   001B26                     __end_ofi2_strlen:
  2808                           	callstack 0
  2809                           
  2810 ;; *************** function i2_strcpy *****************
  2811 ;; Defined at:
  2812 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strcpy.c"
  2813 ;; Parameters:    Size  Location     Type
  2814 ;;  dest            2    0[COMRAM] PTR unsigned char 
  2815 ;;		 -> USB_param2(10), USB_param1(10), MRF_param2(10), MRF_param1(10), 
  2816 ;;		 -> ISR@temp_receive_string(40), usb_message(40), main@MRF_msg_code(4), MRF_message(40), 
  2817 ;;  src             2    2[COMRAM] PTR const unsigned char 
  2818 ;;		 -> STR_25(1), STR_24(1), STR_23(1), STR_22(1), 
  2819 ;;		 -> STR_21(1), ISR@temp_receive_string(40), STR_8(1), STR_7(1), 
  2820 ;;		 -> MRF_message(40), 
  2821 ;; Auto vars:     Size  Location     Type
  2822 ;;  d               2    8[COMRAM] PTR unsigned char 
  2823 ;;		 -> USB_param2(10), USB_param1(10), MRF_param2(10), MRF_param1(10), 
  2824 ;;		 -> ISR@temp_receive_string(40), usb_message(40), main@MRF_msg_code(4), MRF_message(40), 
  2825 ;;  s               2    6[COMRAM] PTR const unsigned char 
  2826 ;;		 -> STR_25(1), STR_24(1), STR_23(1), STR_22(1), 
  2827 ;;		 -> STR_21(1), ISR@temp_receive_string(40), STR_8(1), STR_7(1), 
  2828 ;;		 -> MRF_message(40), 
  2829 ;; Return value:  Size  Location     Type
  2830 ;;                  2    0[COMRAM] PTR unsigned char 
  2831 ;; Registers used:
  2832 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2833 ;; Tracked objects:
  2834 ;;		On entry : 0/0
  2835 ;;		On exit  : 0/0
  2836 ;;		Unchanged: 0/0
  2837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2838 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2839 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2840 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2841 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2842 ;;Total ram usage:       10 bytes
  2843 ;; Hardware stack levels used: 1
  2844 ;; This function calls:
  2845 ;;		Nothing
  2846 ;; This function is called by:
  2847 ;;		_ISR
  2848 ;;		i2_append_string
  2849 ;; This function uses a non-reentrant model
  2850 ;;
  2851                           
  2852                           	psect	text14
  2853   001A14                     __ptext14:
  2854                           	callstack 0
  2855   001A14                     i2_strcpy:
  2856                           	callstack 26
  2857   001A14  C003  F007         	movff	i2strcpy@src,i2strcpy@s
  2858   001A18  C004  F008         	movff	i2strcpy@src+1,i2strcpy@s+1
  2859   001A1C  C001  F009         	movff	i2strcpy@dest,i2strcpy@d
  2860   001A20  C002  F00A         	movff	i2strcpy@dest+1,i2strcpy@d+1
  2861   001A24                     i2l1566:
  2862   001A24  5007               	movf	i2strcpy@s^0,w,c
  2863   001A26  6E05               	movwf	??i2_strcpy^0,c
  2864   001A28  5008               	movf	(i2strcpy@s+1)^0,w,c
  2865   001A2A  6E06               	movwf	(??i2_strcpy+1)^0,c
  2866   001A2C  4A07               	infsnz	i2strcpy@s^0,f,c
  2867   001A2E  2A08               	incf	(i2strcpy@s+1)^0,f,c
  2868   001A30  C005  FFF6         	movff	??i2_strcpy,tblptrl
  2869   001A34  C006  FFF7         	movff	??i2_strcpy+1,tblptrh
  2870   001A38  0E00               	movlw	low (__smallconst shr (0+16))
  2871   001A3A  6EF8               	movwf	tblptru,c
  2872   001A3C  C009  FFD9         	movff	i2strcpy@d,fsr2l
  2873   001A40  C00A  FFDA         	movff	i2strcpy@d+1,fsr2h
  2874   001A44  4A09               	infsnz	i2strcpy@d^0,f,c
  2875   001A46  2A0A               	incf	(i2strcpy@d+1)^0,f,c
  2876   001A48  0E0F               	movlw	(high __ramtop+-1)
  2877   001A4A  64F7               	cpfsgt	tblptrh,c
  2878   001A4C  D003               	bra	i2u81_47
  2879   001A4E  0008               	tblrd		*
  2880   001A50  50F5               	movf	tablat,w,c
  2881   001A52  D005               	bra	i2u81_40
  2882   001A54                     i2u81_47:
  2883   001A54  CFF6 FFE9          	movff	tblptrl,fsr0l
  2884   001A58  CFF7 FFEA          	movff	tblptrh,fsr0h
  2885   001A5C  50EF               	movf	indf0,w,c
  2886   001A5E                     i2u81_40:
  2887   001A5E  6EDF               	movwf	indf2,c
  2888   001A60  50DF               	movf	indf2,w,c
  2889   001A62  A4D8               	btfss	status,2,c
  2890   001A64  EF36  F00D         	goto	i2u82_41
  2891   001A68  EF38  F00D         	goto	i2u82_40
  2892   001A6C                     i2u82_41:
  2893   001A6C  EF12  F00D         	goto	i2l1566
  2894   001A70                     i2u82_40:
  2895   001A70  0012               	return		;funcret
  2896   001A72                     __end_ofi2_strcpy:
  2897                           	callstack 0
  2898                           
  2899 ;; *************** function _receive_MRF89XAM *****************
  2900 ;; Defined at:
  2901 ;;		line 171 in file "MRF89XAM.c"
  2902 ;; Parameters:    Size  Location     Type
  2903 ;;		None
  2904 ;; Auto vars:     Size  Location     Type
  2905 ;;		None
  2906 ;; Return value:  Size  Location     Type
  2907 ;;                  1    wreg      unsigned char 
  2908 ;; Registers used:
  2909 ;;		wreg, status,2, cstack
  2910 ;; Tracked objects:
  2911 ;;		On entry : 0/0
  2912 ;;		On exit  : 0/0
  2913 ;;		Unchanged: 0/0
  2914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2918 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2919 ;;Total ram usage:        0 bytes
  2920 ;; Hardware stack levels used: 1
  2921 ;; Hardware stack levels required when called: 1
  2922 ;; This function calls:
  2923 ;;		_read_spi_data
  2924 ;; This function is called by:
  2925 ;;		_ISR
  2926 ;; This function uses a non-reentrant model
  2927 ;;
  2928                           
  2929                           	psect	text15
  2930   001BF2                     __ptext15:
  2931                           	callstack 0
  2932   001BF2                     _receive_MRF89XAM:
  2933                           	callstack 25
  2934   001BF2                     i2l216:
  2935   001BF2  BA81               	btfsc	129,5,c	;volatile
  2936   001BF4  EFFE  F00D         	goto	i2u115_41
  2937   001BF8  EF00  F00E         	goto	i2u115_40
  2938   001BFC                     i2u115_41:
  2939   001BFC  EFF9  F00D         	goto	i2l216
  2940   001C00                     i2u115_40:
  2941   001C00                     
  2942                           ;MRF89XAM.c: 174:     return read_spi_data();
  2943   001C00  ECC3  F00D         	call	_read_spi_data	;wreg free
  2944   001C04  0012               	return		;funcret
  2945   001C06                     __end_of_receive_MRF89XAM:
  2946                           	callstack 0
  2947                           
  2948 ;; *************** function _read_spi_data *****************
  2949 ;; Defined at:
  2950 ;;		line 98 in file "MRF89XAM.c"
  2951 ;; Parameters:    Size  Location     Type
  2952 ;;		None
  2953 ;; Auto vars:     Size  Location     Type
  2954 ;;  data            1    0[COMRAM] unsigned char 
  2955 ;;  dummy           1    0        unsigned char 
  2956 ;; Return value:  Size  Location     Type
  2957 ;;                  1    wreg      unsigned char 
  2958 ;; Registers used:
  2959 ;;		wreg, status,2
  2960 ;; Tracked objects:
  2961 ;;		On entry : 0/0
  2962 ;;		On exit  : 0/0
  2963 ;;		Unchanged: 0/0
  2964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2966 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2968 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2969 ;;Total ram usage:        1 bytes
  2970 ;; Hardware stack levels used: 1
  2971 ;; This function calls:
  2972 ;;		Nothing
  2973 ;; This function is called by:
  2974 ;;		_receive_MRF89XAM
  2975 ;; This function uses a non-reentrant model
  2976 ;;
  2977                           
  2978                           	psect	text16
  2979   001B86                     __ptext16:
  2980                           	callstack 0
  2981   001B86                     _read_spi_data:
  2982                           	callstack 25
  2983   001B86                     
  2984                           ;MRF89XAM.c: 104:     LATCbits.LC1 = 0;
  2985   001B86  928B               	bcf	139,1,c	;volatile
  2986   001B88  506F               	movf	111,w,c	;volatile
  2987                           
  2988                           ;MRF89XAM.c: 108:     SSP2BUF = 0x00;
  2989   001B8A  0E00               	movlw	0
  2990   001B8C  6E6F               	movwf	111,c	;volatile
  2991   001B8E                     i2l192:
  2992   001B8E  A06D               	btfss	109,0,c	;volatile
  2993   001B90  EFCC  F00D         	goto	i2u78_41
  2994   001B94  EFCE  F00D         	goto	i2u78_40
  2995   001B98                     i2u78_41:
  2996   001B98  EFC7  F00D         	goto	i2l192
  2997   001B9C                     i2u78_40:
  2998   001B9C                     
  2999                           ;MRF89XAM.c: 110:     data = SSP2BUF;
  3000   001B9C  CF6F F001          	movff	3951,read_spi_data@data	;volatile
  3001                           
  3002                           ;MRF89XAM.c: 113:     LATCbits.LC1 = 1;
  3003   001BA0  828B               	bsf	139,1,c	;volatile
  3004   001BA2                     
  3005                           ;MRF89XAM.c: 115:     return data;
  3006   001BA2  5001               	movf	read_spi_data@data^0,w,c
  3007   001BA4  0012               	return		;funcret
  3008   001BA6                     __end_of_read_spi_data:
  3009                           	callstack 0
  3010                           
  3011 ;; *************** function _read_byte_usb *****************
  3012 ;; Defined at:
  3013 ;;		line 30 in file "MCP2221A.c"
  3014 ;; Parameters:    Size  Location     Type
  3015 ;;		None
  3016 ;; Auto vars:     Size  Location     Type
  3017 ;;  content         1    0[COMRAM] unsigned char 
  3018 ;; Return value:  Size  Location     Type
  3019 ;;                  1    wreg      unsigned char 
  3020 ;; Registers used:
  3021 ;;		wreg, status,2
  3022 ;; Tracked objects:
  3023 ;;		On entry : 0/0
  3024 ;;		On exit  : 0/0
  3025 ;;		Unchanged: 0/0
  3026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3028 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3030 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3031 ;;Total ram usage:        1 bytes
  3032 ;; Hardware stack levels used: 1
  3033 ;; This function calls:
  3034 ;;		Nothing
  3035 ;; This function is called by:
  3036 ;;		_ISR
  3037 ;; This function uses a non-reentrant model
  3038 ;;
  3039                           
  3040                           	psect	text17
  3041   001BC2                     __ptext17:
  3042                           	callstack 0
  3043   001BC2                     _read_byte_usb:
  3044                           	callstack 26
  3045   001BC2                     
  3046                           ;MCP2221A.c: 32:     BYTE content = RCREG1;
  3047   001BC2  CFAE F001          	movff	4014,read_byte_usb@content	;volatile
  3048                           
  3049                           ;MCP2221A.c: 35:     if(RCSTA2bits.OERR)
  3050   001BC6  A271               	btfss	113,1,c	;volatile
  3051   001BC8  EFE8  F00D         	goto	i2u114_41
  3052   001BCC  EFEA  F00D         	goto	i2u114_40
  3053   001BD0                     i2u114_41:
  3054   001BD0  EFEC  F00D         	goto	i2l1770
  3055   001BD4                     i2u114_40:
  3056   001BD4                     
  3057                           ;MCP2221A.c: 36:     {;MCP2221A.c: 37:         RCSTA2bits.CREN = 0;
  3058   001BD4  9871               	bcf	113,4,c	;volatile
  3059                           
  3060                           ;MCP2221A.c: 38:         RCSTA2bits.CREN = 1;
  3061   001BD6  8871               	bsf	113,4,c	;volatile
  3062   001BD8                     i2l1770:
  3063                           
  3064                           ;MCP2221A.c: 40:     return content;
  3065   001BD8  5001               	movf	read_byte_usb@content^0,w,c
  3066   001BDA  0012               	return		;funcret
  3067   001BDC                     __end_of_read_byte_usb:
  3068                           	callstack 0
  3069                           
  3070                           	psect	rparam
  3071   000000                     
  3072                           	psect	temp
  3073   00004B                     btemp:
  3074                           	callstack 0
  3075   00004B                     	ds	1
  3076   000000                     int$flags	set	btemp
  3077   000000                     wtemp8	set	btemp+1
  3078   000000                     ttemp5	set	btemp+1
  3079   000000                     ttemp6	set	btemp+4
  3080   000000                     ttemp7	set	btemp+8
  3081                           
  3082                           	psect	idloc
  3083                           
  3084                           ;Config register IDLOC0 @ 0x200000
  3085                           ;	unspecified, using default values
  3086   200000                     	org	2097152
  3087   200000  FF                 	db	255
  3088                           
  3089                           ;Config register IDLOC1 @ 0x200001
  3090                           ;	unspecified, using default values
  3091   200001                     	org	2097153
  3092   200001  FF                 	db	255
  3093                           
  3094                           ;Config register IDLOC2 @ 0x200002
  3095                           ;	unspecified, using default values
  3096   200002                     	org	2097154
  3097   200002  FF                 	db	255
  3098                           
  3099                           ;Config register IDLOC3 @ 0x200003
  3100                           ;	unspecified, using default values
  3101   200003                     	org	2097155
  3102   200003  FF                 	db	255
  3103                           
  3104                           ;Config register IDLOC4 @ 0x200004
  3105                           ;	unspecified, using default values
  3106   200004                     	org	2097156
  3107   200004  FF                 	db	255
  3108                           
  3109                           ;Config register IDLOC5 @ 0x200005
  3110                           ;	unspecified, using default values
  3111   200005                     	org	2097157
  3112   200005  FF                 	db	255
  3113                           
  3114                           ;Config register IDLOC6 @ 0x200006
  3115                           ;	unspecified, using default values
  3116   200006                     	org	2097158
  3117   200006  FF                 	db	255
  3118                           
  3119                           ;Config register IDLOC7 @ 0x200007
  3120                           ;	unspecified, using default values
  3121   200007                     	org	2097159
  3122   200007  FF                 	db	255
  3123                           
  3124                           	psect	config
  3125                           
  3126                           ; Padding undefined space
  3127   300000                     	org	3145728
  3128   300000  FF                 	db	255
  3129                           
  3130                           ;Config register CONFIG1H @ 0x300001
  3131                           ;	Oscillator Selection bits
  3132                           ;	FOSC = INTIO67, Internal oscillator block
  3133                           ;	4X PLL Enable
  3134                           ;	PLLCFG = OFF, Oscillator used directly
  3135                           ;	Primary clock enable bit
  3136                           ;	PRICLKEN = ON, Primary clock is always enabled
  3137                           ;	Fail-Safe Clock Monitor Enable bit
  3138                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3139                           ;	Internal/External Oscillator Switchover bit
  3140                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3141   300001                     	org	3145729
  3142   300001  28                 	db	40
  3143                           
  3144                           ;Config register CONFIG2L @ 0x300002
  3145                           ;	Power-up Timer Enable bit
  3146                           ;	PWRTEN = OFF, Power up timer disabled
  3147                           ;	Brown-out Reset Enable bits
  3148                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  3149                           ;	Brown Out Reset Voltage bits
  3150                           ;	BORV = 190, VBOR set to 1.90 V nominal
  3151   300002                     	org	3145730
  3152   300002  1F                 	db	31
  3153                           
  3154                           ;Config register CONFIG2H @ 0x300003
  3155                           ;	Watchdog Timer Enable bits
  3156                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  3157                           ;	Watchdog Timer Postscale Select bits
  3158                           ;	WDTPS = 32768, 1:32768
  3159   300003                     	org	3145731
  3160   300003  3C                 	db	60
  3161                           
  3162                           ; Padding undefined space
  3163   300004                     	org	3145732
  3164   300004  FF                 	db	255
  3165                           
  3166                           ;Config register CONFIG3H @ 0x300005
  3167                           ;	CCP2 MUX bit
  3168                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  3169                           ;	PORTB A/D Enable bit
  3170                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  3171                           ;	P3A/CCP3 Mux bit
  3172                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  3173                           ;	HFINTOSC Fast Start-up
  3174                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  3175                           ;	Timer3 Clock input mux bit
  3176                           ;	T3CMX = PORTC0, T3CKI is on RC0
  3177                           ;	ECCP2 B output mux bit
  3178                           ;	P2BMX = PORTD2, P2B is on RD2
  3179                           ;	MCLR Pin Enable bit
  3180                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  3181   300005                     	org	3145733
  3182   300005  BF                 	db	191
  3183                           
  3184                           ;Config register CONFIG4L @ 0x300006
  3185                           ;	Stack Full/Underflow Reset Enable bit
  3186                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3187                           ;	Single-Supply ICSP Enable bit
  3188                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  3189                           ;	Extended Instruction Set Enable bit
  3190                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3191                           ;	Background Debug
  3192                           ;	DEBUG = 0x1, unprogrammed default
  3193   300006                     	org	3145734
  3194   300006  85                 	db	133
  3195                           
  3196                           ; Padding undefined space
  3197   300007                     	org	3145735
  3198   300007  FF                 	db	255
  3199                           
  3200                           ;Config register CONFIG5L @ 0x300008
  3201                           ;	Code Protection Block 0
  3202                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  3203                           ;	Code Protection Block 1
  3204                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  3205                           ;	Code Protection Block 2
  3206                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  3207                           ;	Code Protection Block 3
  3208                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  3209   300008                     	org	3145736
  3210   300008  0F                 	db	15
  3211                           
  3212                           ;Config register CONFIG5H @ 0x300009
  3213                           ;	Boot Block Code Protection bit
  3214                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  3215                           ;	Data EEPROM Code Protection bit
  3216                           ;	CPD = OFF, Data EEPROM not code-protected
  3217   300009                     	org	3145737
  3218   300009  C0                 	db	192
  3219                           
  3220                           ;Config register CONFIG6L @ 0x30000A
  3221                           ;	Write Protection Block 0
  3222                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  3223                           ;	Write Protection Block 1
  3224                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  3225                           ;	Write Protection Block 2
  3226                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  3227                           ;	Write Protection Block 3
  3228                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  3229   30000A                     	org	3145738
  3230   30000A  0F                 	db	15
  3231                           
  3232                           ;Config register CONFIG6H @ 0x30000B
  3233                           ;	Configuration Register Write Protection bit
  3234                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  3235                           ;	Boot Block Write Protection bit
  3236                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  3237                           ;	Data EEPROM Write Protection bit
  3238                           ;	WRTD = OFF, Data EEPROM not write-protected
  3239   30000B                     	org	3145739
  3240   30000B  E0                 	db	224
  3241                           
  3242                           ;Config register CONFIG7L @ 0x30000C
  3243                           ;	Table Read Protection Block 0
  3244                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  3245                           ;	Table Read Protection Block 1
  3246                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  3247                           ;	Table Read Protection Block 2
  3248                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  3249                           ;	Table Read Protection Block 3
  3250                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  3251   30000C                     	org	3145740
  3252   30000C  0F                 	db	15
  3253                           
  3254                           ;Config register CONFIG7H @ 0x30000D
  3255                           ;	Boot Block Table Read Protection bit
  3256                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  3257   30000D                     	org	3145741
  3258   30000D  40                 	db	64
  3259                           tosu	equ	0xFFF
  3260                           tosh	equ	0xFFE
  3261                           tosl	equ	0xFFD
  3262                           stkptr	equ	0xFFC
  3263                           pclatu	equ	0xFFB
  3264                           pclath	equ	0xFFA
  3265                           pcl	equ	0xFF9
  3266                           tblptru	equ	0xFF8
  3267                           tblptrh	equ	0xFF7
  3268                           tblptrl	equ	0xFF6
  3269                           tablat	equ	0xFF5
  3270                           prodh	equ	0xFF4
  3271                           prodl	equ	0xFF3
  3272                           indf0	equ	0xFEF
  3273                           postinc0	equ	0xFEE
  3274                           postdec0	equ	0xFED
  3275                           preinc0	equ	0xFEC
  3276                           plusw0	equ	0xFEB
  3277                           fsr0h	equ	0xFEA
  3278                           fsr0l	equ	0xFE9
  3279                           wreg	equ	0xFE8
  3280                           indf1	equ	0xFE7
  3281                           postinc1	equ	0xFE6
  3282                           postdec1	equ	0xFE5
  3283                           preinc1	equ	0xFE4
  3284                           plusw1	equ	0xFE3
  3285                           fsr1h	equ	0xFE2
  3286                           fsr1l	equ	0xFE1
  3287                           bsr	equ	0xFE0
  3288                           indf2	equ	0xFDF
  3289                           postinc2	equ	0xFDE
  3290                           postdec2	equ	0xFDD
  3291                           preinc2	equ	0xFDC
  3292                           plusw2	equ	0xFDB
  3293                           fsr2h	equ	0xFDA
  3294                           fsr2l	equ	0xFD9
  3295                           status	equ	0xFD8

Data Sizes:
    Strings     25
    Constant    0
    Data        0
    BSS         1167
=======
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    21                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    22                           	psect	text0,global,reloc=2,class=CODE,delta=1
    23                           	psect	text1,global,reloc=2,class=CODE,delta=1
    24                           	psect	text2,global,reloc=2,class=CODE,delta=1
    25                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text4,global,reloc=2,class=CODE,delta=1
    27                           	psect	text5,global,reloc=2,class=CODE,delta=1
    28                           	psect	text6,global,reloc=2,class=CODE,delta=1
    29                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text10,global,reloc=2,class=CODE,delta=1
    33                           	psect	text11,global,reloc=2,class=CODE,delta=1
    34                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text14,global,reloc=2,class=CODE,delta=1
    37                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text29,global,reloc=2,class=CODE,delta=1
    52                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    53                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    54                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=3
    59                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=3
    60                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=3
    61                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=3
    62                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text47,global,reloc=2,class=CODE,delta=1
    70                           	psect	text48,global,reloc=2,class=CODE,delta=1
    71                           	psect	text49,global,reloc=2,class=CODE,delta=1
    72                           	psect	text50,global,reloc=2,class=CODE,delta=1
    73                           	psect	text51,global,reloc=2,class=CODE,delta=1
    74                           	psect	text52,global,reloc=2,class=CODE,delta=1
    75                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    76                           	psect	text54,global,reloc=2,class=CODE,delta=1
    77                           	psect	text55,global,reloc=2,class=CODE,delta=1
    78                           	psect	text56,global,reloc=2,class=CODE,delta=1
    79                           	psect	text57,global,reloc=2,class=CODE,delta=1
    80                           	psect	text58,global,reloc=2,class=CODE,delta=1
    81                           	psect	text59,global,reloc=2,class=CODE,delta=1
    82                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    83                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    84                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    85                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    86                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    87   000000                     
    88                           ; Generated 12/10/2023 GMT
    89                           ; 
    90                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    91                           ; All rights reserved.
    92                           ; 
    93                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    94                           ; 
    95                           ; Redistribution and use in source and binary forms, with or without modification, are
    96                           ; permitted provided that the following conditions are met:
    97                           ; 
    98                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    99                           ;        conditions and the following disclaimer.
   100                           ; 
   101                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   102                           ;        of conditions and the following disclaimer in the documentation and/or other
   103                           ;        materials provided with the distribution. Publication is not required when
   104                           ;        this file is used in an embedded application.
   105                           ; 
   106                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   107                           ;        software without specific prior written permission.
   108                           ; 
   109                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   110                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   111                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   112                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   113                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   114                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   115                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   116                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   117                           ; 
   118                           ; 
   119                           ; Code-generator required, PIC18F46K22 Definitions
   120                           ; 
   121                           ; SFR Addresses
   122   000000                     
   123                           	psect	idataCOMRAM
   124   00416A                     __pidataCOMRAM:
   125                           	callstack 0
   126                           
   127                           ;initializer for _mode
   128   00416A  01                 	db	1
   129                           
   130                           	psect	idataBANK0
   131   00416B                     __pidataBANK0:
   132                           	callstack 0
   133                           
   134                           ;initializer for _state
   135   00416B  02                 	db	2
   136                           
   137                           	psect	idataBANK1
   138   004164                     __pidataBANK1:
   139                           	callstack 0
   140                           
   141                           ;initializer for _humidity
   142   004164  0014               	dw	20
   143                           
   144                           ;initializer for _temperature
   145   004166  0046               	dw	70
   146   000000                     _TXREG2	set	3955
   147   000000                     _RCREG2	set	3956
   148   000000                     _SPBRG2	set	3957
   149   000000                     _INTCON2bits	set	4081
   150   000000                     _TRISCbits	set	3988
   151   000000                     _SSP1CON1bits	set	4038
   152   000000                     _RCSTA2bits	set	3953
   153   000000                     _TXSTA2bits	set	3954
   154   000000                     _PORTBbits	set	3969
   155   000000                     _ANSELE	set	3900
   156   000000                     _ANSELD	set	3899
   157   000000                     _ANSELC	set	3898
   158   000000                     _ANSELB	set	3897
   159   000000                     _ANSELA	set	3896
   160   000000                     _PORTDbits	set	3971
   161   000000                     _LATAbits	set	3977
   162   000000                     _OSCCON	set	4051
   163   000000                     _T0CONbits	set	4053
   164   000000                     _INTCON3bits	set	4080
   165   000000                     _INTCONbits	set	4082
   166   000000                     _LATCbits	set	3979
   167   000000                     _TRISBbits	set	3987
   168   000000                     _TRISDbits	set	3989
   169   000000                     _PIE3bits	set	4003
   170   000000                     _RCONbits	set	4048
   171   000000                     _TRISAbits	set	3986
   172   000000                     _SSP1CON1	set	4038
   173   000000                     _PIR3bits	set	4004
   174   000000                     _SSP1BUF	set	4041
   175   000000                     _SSP1STATbits	set	4039
   176                           
   177                           	psect	mediumconst
   178   00FEE4                     __pmediumconst:
   179                           	callstack 0
   180   00FEE4  00                 	db	0
   181   00FEE5                     STR_46:
   182   00FEE5  2C                 	db	44
   183   00FEE6  20                 	db	32
   184   00FEE7  43                 	db	67	;'C'
   185   00FEE8  75                 	db	117	;'u'
   186   00FEE9  72                 	db	114	;'r'
   187   00FEEA  72                 	db	114	;'r'
   188   00FEEB  65                 	db	101	;'e'
   189   00FEEC  6E                 	db	110	;'n'
   190   00FEED  74                 	db	116	;'t'
   191   00FEEE  20                 	db	32
   192   00FEEF  4C                 	db	76	;'L'
   193   00FEF0  6F                 	db	111	;'o'
   194   00FEF1  63                 	db	99	;'c'
   195   00FEF2  61                 	db	97	;'a'
   196   00FEF3  74                 	db	116	;'t'
   197   00FEF4  69                 	db	105	;'i'
   198   00FEF5  6F                 	db	111	;'o'
   199   00FEF6  6E                 	db	110	;'n'
   200   00FEF7  20                 	db	32
   201   00FEF8  3D                 	db	61	;'='
   202   00FEF9  20                 	db	32
   203   00FEFA  28                 	db	40
   204   00FEFB  00                 	db	0
   205   00FEFC                     STR_44:
   206   00FEFC  54                 	db	84	;'T'
   207   00FEFD  65                 	db	101	;'e'
   208   00FEFE  6D                 	db	109	;'m'
   209   00FEFF  70                 	db	112	;'p'
   210   00FF00  65                 	db	101	;'e'
   211   00FF01  72                 	db	114	;'r'
   212   00FF02  61                 	db	97	;'a'
   213   00FF03  74                 	db	116	;'t'
   214   00FF04  75                 	db	117	;'u'
   215   00FF05  72                 	db	114	;'r'
   216   00FF06  65                 	db	101	;'e'
   217   00FF07  20                 	db	32
   218   00FF08  3D                 	db	61	;'='
   219   00FF09  20                 	db	32
   220   00FF0A  00                 	db	0
   221   00FF0B                     STR_45:
   222   00FF0B  2C                 	db	44
   223   00FF0C  20                 	db	32
   224   00FF0D  48                 	db	72	;'H'
   225   00FF0E  75                 	db	117	;'u'
   226   00FF0F  6D                 	db	109	;'m'
   227   00FF10  69                 	db	105	;'i'
   228   00FF11  64                 	db	100	;'d'
   229   00FF12  69                 	db	105	;'i'
   230   00FF13  74                 	db	116	;'t'
   231   00FF14  79                 	db	121	;'y'
   232   00FF15  20                 	db	32
   233   00FF16  3D                 	db	61	;'='
   234   00FF17  20                 	db	32
   235   00FF18  00                 	db	0
   236   00FF19                     STR_61:
   237   00FF19  44                 	db	68	;'D'
   238   00FF1A  45                 	db	69	;'E'
   239   00FF1B  53                 	db	83	;'S'
   240   00FF1C  54                 	db	84	;'T'
   241   00FF1D  49                 	db	73	;'I'
   242   00FF1E  4E                 	db	78	;'N'
   243   00FF1F  41                 	db	65	;'A'
   244   00FF20  54                 	db	84	;'T'
   245   00FF21  49                 	db	73	;'I'
   246   00FF22  4F                 	db	79	;'O'
   247   00FF23  4E                 	db	78	;'N'
   248   00FF24  00                 	db	0
   249   00FF25                     STR_49:
   250   00FF25  52                 	db	82	;'R'
   251   00FF26  45                 	db	69	;'E'
   252   00FF27  50                 	db	80	;'P'
   253   00FF28  4F                 	db	79	;'O'
   254   00FF29  52                 	db	82	;'R'
   255   00FF2A  54                 	db	84	;'T'
   256   00FF2B  5F                 	db	95	;'_'
   257   00FF2C  41                 	db	65	;'A'
   258   00FF2D  4C                 	db	76	;'L'
   259   00FF2E  4C                 	db	76	;'L'
   260   00FF2F  00                 	db	0
   261   00FF30                     STR_55:
   262   00FF30  57                 	db	87	;'W'
   263   00FF31  41                 	db	65	;'A'
   264   00FF32  59                 	db	89	;'Y'
   265   00FF33  50                 	db	80	;'P'
   266   00FF34  4F                 	db	79	;'O'
   267   00FF35  49                 	db	73	;'I'
   268   00FF36  4E                 	db	78	;'N'
   269   00FF37  54                 	db	84	;'T'
   270   00FF38  31                 	db	49	;'1'
   271   00FF39  00                 	db	0
   272   00FF3A                     STR_57:
   273   00FF3A  57                 	db	87	;'W'
   274   00FF3B  41                 	db	65	;'A'
   275   00FF3C  59                 	db	89	;'Y'
   276   00FF3D  50                 	db	80	;'P'
   277   00FF3E  4F                 	db	79	;'O'
   278   00FF3F  49                 	db	73	;'I'
   279   00FF40  4E                 	db	78	;'N'
   280   00FF41  54                 	db	84	;'T'
   281   00FF42  32                 	db	50	;'2'
   282   00FF43  00                 	db	0
   283   00FF44                     STR_59:
   284   00FF44  57                 	db	87	;'W'
   285   00FF45  41                 	db	65	;'A'
   286   00FF46  59                 	db	89	;'Y'
   287   00FF47  50                 	db	80	;'P'
   288   00FF48  4F                 	db	79	;'O'
   289   00FF49  49                 	db	73	;'I'
   290   00FF4A  4E                 	db	78	;'N'
   291   00FF4B  54                 	db	84	;'T'
   292   00FF4C  33                 	db	51	;'3'
   293   00FF4D  00                 	db	0
   294   00FF4E                     STR_72:
   295   00FF4E  49                 	db	73	;'I'
   296   00FF4F  4E                 	db	78	;'N'
   297   00FF50  46                 	db	70	;'F'
   298   00FF51  49                 	db	73	;'I'
   299   00FF52  4E                 	db	78	;'N'
   300   00FF53  49                 	db	73	;'I'
   301   00FF54  54                 	db	84	;'T'
   302   00FF55  59                 	db	89	;'Y'
   303   00FF56  00                 	db	0
   304   00FF57                     STR_71:
   305   00FF57  69                 	db	105	;'i'
   306   00FF58  6E                 	db	110	;'n'
   307   00FF59  66                 	db	102	;'f'
   308   00FF5A  69                 	db	105	;'i'
   309   00FF5B  6E                 	db	110	;'n'
   310   00FF5C  69                 	db	105	;'i'
   311   00FF5D  74                 	db	116	;'t'
   312   00FF5E  79                 	db	121	;'y'
   313   00FF5F  00                 	db	0
   314   00FF60                     STR_51:
   315   00FF60  53                 	db	83	;'S'
   316   00FF61  45                 	db	69	;'E'
   317   00FF62  54                 	db	84	;'T'
   318   00FF63  5F                 	db	95	;'_'
   319   00FF64  48                 	db	72	;'H'
   320   00FF65  4F                 	db	79	;'O'
   321   00FF66  4D                 	db	77	;'M'
   322   00FF67  45                 	db	69	;'E'
   323   00FF68  00                 	db	0
   324   00FF69                     STR_13:
   325   00FF69  0A                 	db	10
   326   00FF6A  0A                 	db	10
   327   00FF6B  0A                 	db	10
   328   00FF6C  0A                 	db	10
   329   00FF6D  0A                 	db	10
   330   00FF6E  0A                 	db	10
   331   00FF6F  0A                 	db	10
   332   00FF70  0A                 	db	10
   333   00FF71  00                 	db	0
   334   00FF72                     STR_1:
   335   00FF72  68                 	db	104	;'h'
   336   00FF73  65                 	db	101	;'e'
   337   00FF74  6C                 	db	108	;'l'
   338   00FF75  6C                 	db	108	;'l'
   339   00FF76  6F                 	db	111	;'o'
   340   00FF77  0A                 	db	10
   341   00FF78  0A                 	db	10
   342   00FF79  0A                 	db	10
   343   00FF7A  00                 	db	0
   344   00FF7B  44                 	db	68	;'D'
   345   00FF7C  65                 	db	101	;'e'
   346   00FF7D  73                 	db	115	;'s'
   347   00FF7E  74                 	db	116	;'t'
   348   00FF7F  20                 	db	32
   349   00FF80  53                 	db	83	;'S'
   350   00FF81  65                 	db	101	;'e'
   351   00FF82  74                 	db	116	;'t'
   352   00FF83  00                 	db	0
   353   00FF84                     STR_43:
   354   00FF84  52                 	db	82	;'R'
   355   00FF85  65                 	db	101	;'e'
   356   00FF86  70                 	db	112	;'p'
   357   00FF87  6F                 	db	111	;'o'
   358   00FF88  72                 	db	114	;'r'
   359   00FF89  74                 	db	116	;'t'
   360   00FF8A  3A                 	db	58	;':'
   361   00FF8B  00                 	db	0
   362   00FF8C  55                 	db	85	;'U'
   363   00FF8D  4E                 	db	78	;'N'
   364   00FF8E  4B                 	db	75	;'K'
   365   00FF8F  4E                 	db	78	;'N'
   366   00FF90  4F                 	db	79	;'O'
   367   00FF91  57                 	db	87	;'W'
   368   00FF92  4E                 	db	78	;'N'
   369   00FF93  00                 	db	0
   370   00FF94                     STR_69:
   371   00FF94  4D                 	db	77	;'M'
   372   00FF95  41                 	db	65	;'A'
   373   00FF96  4E                 	db	78	;'N'
   374   00FF97  55                 	db	85	;'U'
   375   00FF98  41                 	db	65	;'A'
   376   00FF99  4C                 	db	76	;'L'
   377   00FF9A  00                 	db	0
   378   00FF9B                     STR_53:
   379   00FF9B  52                 	db	82	;'R'
   380   00FF9C  45                 	db	69	;'E'
   381   00FF9D  43                 	db	67	;'C'
   382   00FF9E  41                 	db	65	;'A'
   383   00FF9F  4C                 	db	76	;'L'
   384   00FFA0  4C                 	db	76	;'L'
   385   00FFA1  00                 	db	0
   386   00FFA2                     STR_41:
   387   00FFA2  52                 	db	82	;'R'
   388   00FFA3  45                 	db	69	;'E'
   389   00FFA4  50                 	db	80	;'P'
   390   00FFA5  4F                 	db	79	;'O'
   391   00FFA6  52                 	db	82	;'R'
   392   00FFA7  54                 	db	84	;'T'
   393   00FFA8  00                 	db	0
   394   00FFA9  57                 	db	87	;'W'
   395   00FFAA  31                 	db	49	;'1'
   396   00FFAB  20                 	db	32
   397   00FFAC  53                 	db	83	;'S'
   398   00FFAD  65                 	db	101	;'e'
   399   00FFAE  74                 	db	116	;'t'
   400   00FFAF  00                 	db	0
   401   00FFB0  57                 	db	87	;'W'
   402   00FFB1  32                 	db	50	;'2'
   403   00FFB2  20                 	db	32
   404   00FFB3  53                 	db	83	;'S'
   405   00FFB4  65                 	db	101	;'e'
   406   00FFB5  74                 	db	116	;'t'
   407   00FFB6  00                 	db	0
   408   00FFB7  57                 	db	87	;'W'
   409   00FFB8  33                 	db	51	;'3'
   410   00FFB9  20                 	db	32
   411   00FFBA  53                 	db	83	;'S'
   412   00FFBB  65                 	db	101	;'e'
   413   00FFBC  74                 	db	116	;'t'
   414   00FFBD  00                 	db	0
   415   00FFBE                     STR_63:
   416   00FFBE  53                 	db	83	;'S'
   417   00FFBF  54                 	db	84	;'T'
   418   00FFC0  41                 	db	65	;'A'
   419   00FFC1  52                 	db	82	;'R'
   420   00FFC2  54                 	db	84	;'T'
   421   00FFC3  00                 	db	0
   422   00FFC4                     STR_67:
   423   00FFC4  41                 	db	65	;'A'
   424   00FFC5  55                 	db	85	;'U'
   425   00FFC6  54                 	db	84	;'T'
   426   00FFC7  4F                 	db	79	;'O'
   427   00FFC8  00                 	db	0
   428   00FFC9                     STR_65:
   429   00FFC9  53                 	db	83	;'S'
   430   00FFCA  54                 	db	84	;'T'
   431   00FFCB  4F                 	db	79	;'O'
   432   00FFCC  50                 	db	80	;'P'
   433   00FFCD  00                 	db	0
   434   00FFCE                     STR_77:
   435   00FFCE  4E                 	db	78	;'N'
   436   00FFCF  41                 	db	65	;'A'
   437   00FFD0  4E                 	db	78	;'N'
   438   00FFD1  00                 	db	0
   439   00FFD2                     STR_73:
   440   00FFD2  69                 	db	105	;'i'
   441   00FFD3  6E                 	db	110	;'n'
   442   00FFD4  66                 	db	102	;'f'
   443   00FFD5  00                 	db	0
   444   00FFD6                     STR_76:
   445   00FFD6  6E                 	db	110	;'n'
   446   00FFD7  61                 	db	97	;'a'
   447   00FFD8  6E                 	db	110	;'n'
   448   00FFD9  00                 	db	0
   449   00FFDA                     STR_40:
   450   00FFDA  25                 	db	37
   451   00FFDB  64                 	db	100	;'d'
   452   00FFDC  2E                 	db	46
   453   00FFDD  00                 	db	0
   454   00FFDE                     STR_33:
   455   00FFDE  52                 	db	82	;'R'
   456   00FFDF  45                 	db	69	;'E'
   457   00FFE0  43                 	db	67	;'C'
   458   00FFE1  00                 	db	0
   459   00FFE2                     STR_29:
   460   00FFE2  53                 	db	83	;'S'
   461   00FFE3  54                 	db	84	;'T'
   462   00FFE4  50                 	db	80	;'P'
   463   00FFE5  00                 	db	0
   464   00FFE6                     STR_31:
   465   00FFE6  52                 	db	82	;'R'
   466   00FFE7  45                 	db	69	;'E'
   467   00FFE8  53                 	db	83	;'S'
   468   00FFE9  00                 	db	0
   469   00FFEA                     STR_6:
   470   00FFEA  4E                 	db	78	;'N'
   471   00FFEB  41                 	db	65	;'A'
   472   00FFEC  56                 	db	86	;'V'
   473   00FFED  00                 	db	0
   474   00FFEE                     STR_47:
   475   00FFEE  2C                 	db	44
   476   00FFEF  20                 	db	32
   477   00FFF0  00                 	db	0
   478   00FFF1                     STR_25:
   479   00FFF1  52                 	db	82	;'R'
   480   00FFF2  41                 	db	65	;'A'
   481   00FFF3  00                 	db	0
   482   00FFF4                     STR_3:
   483   00FFF4  48                 	db	72	;'H'
   484   00FFF5  49                 	db	73	;'I'
   485   00FFF6  00                 	db	0
   486   00FFF7                     STR_48:
   487   00FFF7  29                 	db	41
   488   00FFF8  00                 	db	0
   489   00FFF9                     STR_23:
   490   00FFF9  52                 	db	82	;'R'
   491   00FFFA  00                 	db	0
   492   00FFFB                     STR_20:
   493   00FFFB  48                 	db	72	;'H'
   494   00FFFC  00                 	db	0
   495   00FFFD                     STR_8:
   496   00FFFD  4D                 	db	77	;'M'
   497   00FFFE  00                 	db	0
   498   00FFFF  00                 	db	0	; dummy byte at the end
   499   000000                     
   500                           ; #config settings
   501                           
   502                           	psect	cinit
   503   00379A                     __pcinit:
   504                           	callstack 0
   505   00379A                     start_initialization:
   506                           	callstack 0
   507   00379A                     __initialization:
   508                           	callstack 0
   509                           
   510                           ; Initialize objects allocated to BANK1 (4 bytes)
   511                           ; load TBLPTR registers with __pidataBANK1
   512   00379A  0E64               	movlw	low __pidataBANK1
   513   00379C  6EF6               	movwf	tblptrl,c
   514   00379E  0E41               	movlw	high __pidataBANK1
   515   0037A0  6EF7               	movwf	tblptrh,c
   516   0037A2  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   517   0037A4  6EF8               	movwf	tblptru,c
   518   0037A6  EE01  F0F8         	lfsr	0,__pdataBANK1
   519   0037AA  EE10 F004          	lfsr	1,4
   520   0037AE                     copy_data0:
   521   0037AE  0009               	tblrd		*+
   522   0037B0  CFF5 FFEE          	movff	tablat,postinc0
   523   0037B4  50E5               	movf	postdec1,w,c
   524   0037B6  50E1               	movf	fsr1l,w,c
   525   0037B8  E1FA               	bnz	copy_data0
   526                           
   527                           ; Initialize objects allocated to BANK0 (1 bytes)
   528                           ; load TBLPTR registers with __pidataBANK0
   529   0037BA  0E6B               	movlw	low __pidataBANK0
   530   0037BC  6EF6               	movwf	tblptrl,c
   531   0037BE  0E41               	movlw	high __pidataBANK0
   532   0037C0  6EF7               	movwf	tblptrh,c
   533   0037C2  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   534   0037C4  6EF8               	movwf	tblptru,c
   535   0037C6  0009               	tblrd		*+	;fetch initializer
   536   0037C8  CFF5 F0FE          	movff	tablat,__pdataBANK0
   537                           
   538                           ; Initialize objects allocated to COMRAM (1 bytes)
   539                           ; load TBLPTR registers with __pidataCOMRAM
   540   0037CC  0E6A               	movlw	low __pidataCOMRAM
   541   0037CE  6EF6               	movwf	tblptrl,c
   542   0037D0  0E41               	movlw	high __pidataCOMRAM
   543   0037D2  6EF7               	movwf	tblptrh,c
   544   0037D4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   545   0037D6  6EF8               	movwf	tblptru,c
   546   0037D8  0009               	tblrd		*+	;fetch initializer
   547   0037DA  CFF5 F057          	movff	tablat,__pdataCOMRAM
   548                           
   549                           ; Clear objects allocated to BIGRAM (960 bytes)
   550   0037DE  EE03  F08C         	lfsr	0,__pbssBIGRAM
   551   0037E2  EE13 F0C0          	lfsr	1,960
   552   0037E6                     clear_0:
   553   0037E6  6AEE               	clrf	postinc0,c
   554   0037E8  50E5               	movf	postdec1,w,c
   555   0037EA  50E1               	movf	fsr1l,w,c
   556   0037EC  E1FC               	bnz	clear_0
   557   0037EE  50E2               	movf	fsr1h,w,c
   558   0037F0  E1FA               	bnz	clear_0
   559                           
   560                           ; Clear objects allocated to BANK3 (140 bytes)
   561   0037F2  EE03  F000         	lfsr	0,__pbssBANK3
   562   0037F6  0E8C               	movlw	140
   563   0037F8                     clear_1:
   564   0037F8  6AEE               	clrf	postinc0,c
   565   0037FA  06E8               	decf	wreg,f,c
   566   0037FC  E1FD               	bnz	clear_1
   567                           
   568                           ; Clear objects allocated to BANK2 (238 bytes)
   569   0037FE  EE02  F000         	lfsr	0,__pbssBANK2
   570   003802  0EEE               	movlw	238
   571   003804                     clear_2:
   572   003804  6AEE               	clrf	postinc0,c
   573   003806  06E8               	decf	wreg,f,c
   574   003808  E1FD               	bnz	clear_2
   575                           
   576                           ; Clear objects allocated to BANK1 (138 bytes)
   577   00380A  EE01  F000         	lfsr	0,__pbssBANK1
   578   00380E  0E8A               	movlw	138
   579   003810                     clear_3:
   580   003810  6AEE               	clrf	postinc0,c
   581   003812  06E8               	decf	wreg,f,c
   582   003814  E1FD               	bnz	clear_3
   583                           
   584                           ; Clear objects allocated to BANK0 (6 bytes)
   585   003816  0100               	movlb	0
   586   003818  6BFD               	clrf	(__pbssBANK0+5)& (0+255),b
   587   00381A  6BFC               	clrf	(__pbssBANK0+4)& (0+255),b
   588   00381C  6BFB               	clrf	(__pbssBANK0+3)& (0+255),b
   589   00381E  6BFA               	clrf	(__pbssBANK0+2)& (0+255),b
   590   003820  6BF9               	clrf	(__pbssBANK0+1)& (0+255),b
   591   003822  6BF8               	clrf	__pbssBANK0& (0+255),b
   592                           
   593                           ; Clear objects allocated to COMRAM (17 bytes)
   594   003824  EE00  F046         	lfsr	0,__pbssCOMRAM
   595   003828  0E11               	movlw	17
   596   00382A                     clear_4:
   597   00382A  6AEE               	clrf	postinc0,c
   598   00382C  06E8               	decf	wreg,f,c
   599   00382E  E1FD               	bnz	clear_4
   600   003830                     end_of_initialization:
   601                           	callstack 0
   602   003830                     __end_of__initialization:
   603                           	callstack 0
   604   003830  9058               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   605   003832  9258               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   606   003834  0E00               	movlw	low (__Lmediumconst shr (0+16))
   607   003836  6EF8               	movwf	tblptru,c
   608   003838  0100               	movlb	0
   609   00383A  EF38  F014         	goto	_main	;jump to C main() function
   610                           
   611                           	psect	bssCOMRAM
   612   000046                     __pbssCOMRAM:
   613                           	callstack 0
   614   000046                     _waypoint1:
   615                           	callstack 0
   616   000046                     	ds	8
   617   00004E                     _width:
   618                           	callstack 0
   619   00004E                     	ds	2
   620   000050                     _timer_tick:
   621                           	callstack 0
   622   000050                     	ds	2
   623   000052                     _right_joystick:
   624                           	callstack 0
   625   000052                     	ds	1
   626   000053                     _left_joystick:
   627                           	callstack 0
   628   000053                     	ds	1
   629   000054                     _last_message_id:
   630                           	callstack 0
   631   000054                     	ds	1
   632   000055                     _usb_received:
   633                           	callstack 0
   634   000055                     	ds	1
   635   000056                     _start:
   636                           	callstack 0
   637   000056                     	ds	1
   638                           
   639                           	psect	dataCOMRAM
   640   000057                     __pdataCOMRAM:
   641                           	callstack 0
   642   000057                     _mode:
   643                           	callstack 0
   644   000057                     	ds	1
   645                           
   646                           	psect	bssBANK0
   647   0000F8                     __pbssBANK0:
   648                           	callstack 0
   649   0000F8                     _prec:
   650                           	callstack 0
   651   0000F8                     	ds	2
   652   0000FA                     _flags:
   653                           	callstack 0
   654   0000FA                     	ds	1
   655   0000FB                     _usb_message_received:
   656                           	callstack 0
   657   0000FB                     	ds	1
   658   0000FC                     _MRF_message_received:
   659                           	callstack 0
   660   0000FC                     	ds	1
   661   0000FD                     _MRF_transmitting:
   662                           	callstack 0
   663   0000FD                     	ds	1
   664                           
   665                           	psect	dataBANK0
   666   0000FE                     __pdataBANK0:
   667                           	callstack 0
   668   0000FE                     _state:
   669                           	callstack 0
   670   0000FE                     	ds	1
   671                           
   672                           	psect	bssBANK1
   673   000100                     __pbssBANK1:
   674                           	callstack 0
   675   000100                     _USB_param2:
   676                           	callstack 0
   677   000100                     	ds	10
   678   00010A                     _USB_param1:
   679                           	callstack 0
   680   00010A                     	ds	10
   681   000114                     	ds	9
   682   00011D                     	ds	9
   683   000126                     _current_coords:
   684                           	callstack 0
   685   000126                     	ds	8
   686   00012E                     _destination:
   687                           	callstack 0
   688   00012E                     	ds	8
   689   000136                     _waypoint3:
   690                           	callstack 0
   691   000136                     	ds	8
   692   00013E                     _waypoint2:
   693                           	callstack 0
   694   00013E                     	ds	8
   695   000146                     _home:
   696                           	callstack 0
   697   000146                     	ds	8
   698   00014E                     _MRF_message:
   699                           	callstack 0
   700   00014E                     	ds	40
   701   000176                     _MRF_param2:
   702                           	callstack 0
   703   000176                     	ds	10
   704   000180                     _MRF_param1:
   705                           	callstack 0
   706   000180                     	ds	10
   707                           
   708                           	psect	dataBANK1
   709   0001F8                     __pdataBANK1:
   710                           	callstack 0
   711   0001F8                     _humidity:
   712                           	callstack 0
   713   0001F8                     	ds	2
   714   0001FA                     _temperature:
   715                           	callstack 0
   716   0001FA                     	ds	2
   717                           
   718                           	psect	bssBANK2
   719   000200                     __pbssBANK2:
   720                           	callstack 0
   721   000200                     ISR@F7073:
   722                           	callstack 0
   723   000200                     	ds	40
   724   000228                     	ds	20
   725   00023C                     	ds	20
   726   000250                     	ds	16
   727   000260                     	ds	10
   728   00026A                     _usb_message:
   729                           	callstack 0
   730   00026A                     	ds	100
   731   0002CE                     _dbuf:
   732                           	callstack 0
   733   0002CE                     	ds	32
   734                           
   735                           	psect	bssBANK3
   736   000300                     __pbssBANK3:
   737                           	callstack 0
   738   000300                     	ds	100
   739   000364                     _current_report:
   740                           	callstack 0
   741   000364                     	ds	40
   742                           
   743                           	psect	bssBIGRAM
   744   00038C                     __pbssBIGRAM:
   745                           	callstack 0
   746   00038C                     _all_reports:
   747                           	callstack 0
   748   00038C                     	ds	960
   749                           
   750                           	psect	cstackBANK1
   751   00018A                     __pcstackBANK1:
   752                           	callstack 0
   753   00018A                     parse_usb_message@response:
   754                           	callstack 0
   755                           
   756                           ; 100 bytes @ 0x0
   757   00018A                     	ds	100
   758   0001EE                     parse_usb_message@temp_string:
   759                           	callstack 0
   760                           
   761                           ; 10 bytes @ 0x64
   762   0001EE                     	ds	10
   763                           
   764                           	psect	cstackBANK0
   765   000060                     __pcstackBANK0:
   766                           	callstack 0
   767   000060                     ?_strcmp:
   768                           	callstack 0
   769   000060                     ?_strlen:
   770                           	callstack 0
   771   000060                     ?_isdigit:
   772                           	callstack 0
   773   000060                     ?_strncmp:
   774                           	callstack 0
   775   000060                     ?_isspace:
   776                           	callstack 0
   777   000060                     ?_islower:
   778                           	callstack 0
   779   000060                     ?___wmul:
   780                           	callstack 0
   781   000060                     ?___awdiv:
   782                           	callstack 0
   783   000060                     ?___awmod:
   784                           	callstack 0
   785   000060                     ?___fladd:
   786                           	callstack 0
   787   000060                     ?___fldiv:
   788                           	callstack 0
   789   000060                     ?___flmul:
   790                           	callstack 0
   791   000060                     ?_nanf:
   792                           	callstack 0
   793   000060                     ?___lmul:
   794                           	callstack 0
   795   000060                     ?___flneg:
   796                           	callstack 0
   797   000060                     ?___fltol:
   798                           	callstack 0
   799   000060                     ?___xxtofl:
   800                           	callstack 0
   801   000060                     ?___aodiv:
   802                           	callstack 0
   803   000060                     ?___aomod:
   804                           	callstack 0
   805   000060                     write_spi_reg@data:
   806                           	callstack 0
   807   000060                     write_spi_data@data:
   808                           	callstack 0
   809   000060                     transmit_byte_usb@message:
   810                           	callstack 0
   811   000060                     ___wmul@multiplier:
   812                           	callstack 0
   813   000060                     ___awdiv@dividend:
   814                           	callstack 0
   815   000060                     ___awmod@dividend:
   816                           	callstack 0
   817   000060                     isdigit@c:
   818                           	callstack 0
   819   000060                     isspace@c:
   820                           	callstack 0
   821   000060                     fputc@c:
   822                           	callstack 0
   823   000060                     strcmp@l:
   824                           	callstack 0
   825   000060                     strlen@s:
   826                           	callstack 0
   827   000060                     strncmp@_l:
   828                           	callstack 0
   829   000060                     nanf@s:
   830                           	callstack 0
   831   000060                     islower@c:
   832                           	callstack 0
   833   000060                     ___lmul@multiplier:
   834                           	callstack 0
   835   000060                     ___fleq@ff1:
   836                           	callstack 0
   837   000060                     ___flge@ff1:
   838                           	callstack 0
   839   000060                     ___flneg@f1:
   840                           	callstack 0
   841   000060                     ___fltol@f1:
   842                           	callstack 0
   843   000060                     ___fladd@b:
   844                           	callstack 0
   845   000060                     ___fldiv@b:
   846                           	callstack 0
   847   000060                     ___flmul@b:
   848                           	callstack 0
   849   000060                     ___xxtofl@val:
   850                           	callstack 0
   851   000060                     ___aodiv@dividend:
   852                           	callstack 0
   853   000060                     ___aomod@dividend:
   854                           	callstack 0
   855                           
   856                           ; 8 bytes @ 0x0
   857   000060                     	ds	1
   858   000061                     write_spi_reg@reg_address:
   859                           	callstack 0
   860                           
   861                           ; 1 bytes @ 0x1
   862   000061                     	ds	1
   863   000062                     ??_isdigit:
   864   000062                     ??_isspace:
   865   000062                     ??_islower:
   866   000062                     write_spi_reg@address_byte:
   867                           	callstack 0
   868   000062                     ___wmul@multiplicand:
   869                           	callstack 0
   870   000062                     ___awdiv@divisor:
   871                           	callstack 0
   872   000062                     ___awmod@divisor:
   873                           	callstack 0
   874   000062                     fputc@fp:
   875                           	callstack 0
   876   000062                     strcmp@r:
   877                           	callstack 0
   878   000062                     strlen@a:
   879                           	callstack 0
   880   000062                     strncmp@_r:
   881                           	callstack 0
   882                           
   883                           ; 2 bytes @ 0x2
   884   000062                     	ds	1
   885   000063                     
   886                           ; 1 bytes @ 0x3
   887   000063                     	ds	1
   888   000064                     ??_strcmp:
   889   000064                     ??_fputc:
   890   000064                     ??___fltol:
   891   000064                     ??___xxtofl:
   892   000064                     ?_isxdigit:
   893                           	callstack 0
   894   000064                     ?_toupper:
   895                           	callstack 0
   896   000064                     ___awdiv@counter:
   897                           	callstack 0
   898   000064                     ___awmod@counter:
   899                           	callstack 0
   900   000064                     _isspace$2268:
   901                           	callstack 0
   902   000064                     transmit_string_MRF89XAM@tx_str:
   903                           	callstack 0
   904   000064                     reverse_string@s:
   905                           	callstack 0
   906   000064                     transmit_string_usb@message:
   907                           	callstack 0
   908   000064                     ___wmul@product:
   909                           	callstack 0
   910   000064                     strcpy@dest:
   911                           	callstack 0
   912   000064                     strncmp@n:
   913                           	callstack 0
   914   000064                     isxdigit@c:
   915                           	callstack 0
   916   000064                     toupper@c:
   917                           	callstack 0
   918   000064                     ___lmul@multiplicand:
   919                           	callstack 0
   920   000064                     ___fleq@ff2:
   921                           	callstack 0
   922   000064                     ___flge@ff2:
   923                           	callstack 0
   924   000064                     ___fladd@a:
   925                           	callstack 0
   926   000064                     ___fldiv@a:
   927                           	callstack 0
   928   000064                     ___flmul@a:
   929                           	callstack 0
   930   000064                     nanf@u:
   931                           	callstack 0
   932                           
   933                           ; 4 bytes @ 0x4
   934   000064                     	ds	1
   935   000065                     ___awdiv@sign:
   936                           	callstack 0
   937   000065                     ___awmod@sign:
   938                           	callstack 0
   939                           
   940                           ; 1 bytes @ 0x5
   941   000065                     	ds	1
   942   000066                     ??_transmit_string_MRF89XAM:
   943   000066                     ??_strncmp:
   944   000066                     ??_isxdigit:
   945   000066                     ??_toupper:
   946   000066                     ??_reverse_string:
   947   000066                     transmit_string_usb@counter:
   948                           	callstack 0
   949   000066                     ___awdiv@quotient:
   950                           	callstack 0
   951   000066                     strcpy@src:
   952                           	callstack 0
   953                           
   954                           ; 2 bytes @ 0x6
   955   000066                     	ds	1
   956   000067                     reverse_string@c:
   957                           	callstack 0
   958   000067                     strncmp@l:
   959                           	callstack 0
   960                           
   961                           ; 2 bytes @ 0x7
   962   000067                     	ds	1
   963   000068                     ??_strcpy:
   964   000068                     ??___fladd:
   965   000068                     ??___fldiv:
   966   000068                     ??___flmul:
   967   000068                     ??___fleq:
   968   000068                     ??___flge:
   969   000068                     ___fltol@sign1:
   970                           	callstack 0
   971   000068                     ___xxtofl@sign:
   972                           	callstack 0
   973   000068                     reverse_string@i:
   974                           	callstack 0
   975   000068                     ___lmul@product:
   976                           	callstack 0
   977   000068                     ___aodiv@divisor:
   978                           	callstack 0
   979   000068                     ___aomod@divisor:
   980                           	callstack 0
   981                           
   982                           ; 8 bytes @ 0x8
   983   000068                     	ds	1
   984   000069                     ___fltol@exp1:
   985                           	callstack 0
   986   000069                     ___xxtofl@exp:
   987                           	callstack 0
   988   000069                     transmit_string_MRF89XAM@length:
   989                           	callstack 0
   990   000069                     fputs@s:
   991                           	callstack 0
   992   000069                     strncmp@r:
   993                           	callstack 0
   994                           
   995                           ; 2 bytes @ 0x9
   996   000069                     	ds	1
   997   00006A                     _isxdigit$2508:
   998                           	callstack 0
   999   00006A                     reverse_string@j:
  1000                           	callstack 0
  1001   00006A                     strcpy@s:
  1002                           	callstack 0
  1003   00006A                     ___xxtofl@arg:
  1004                           	callstack 0
  1005                           
  1006                           ; 4 bytes @ 0xA
  1007   00006A                     	ds	1
  1008   00006B                     transmit_string_MRF89XAM@counter:
  1009                           	callstack 0
  1010   00006B                     fputs@fp:
  1011                           	callstack 0
  1012                           
  1013                           ; 2 bytes @ 0xB
  1014   00006B                     	ds	1
  1015   00006C                     ___fladd@signs:
  1016                           	callstack 0
  1017   00006C                     ___flmul@sign:
  1018                           	callstack 0
  1019   00006C                     itoa@n:
  1020                           	callstack 0
  1021   00006C                     strcpy@d:
  1022                           	callstack 0
  1023   00006C                     ___fldiv@rem:
  1024                           	callstack 0
  1025                           
  1026                           ; 4 bytes @ 0xC
  1027   00006C                     	ds	1
  1028   00006D                     ___fladd@aexp:
  1029                           	callstack 0
  1030   00006D                     fputs@c:
  1031                           	callstack 0
  1032   00006D                     ___flmul@grs:
  1033                           	callstack 0
  1034                           
  1035                           ; 4 bytes @ 0xD
  1036   00006D                     	ds	1
  1037   00006E                     ___fladd@bexp:
  1038                           	callstack 0
  1039   00006E                     itoa@s:
  1040                           	callstack 0
  1041   00006E                     fputs@i:
  1042                           	callstack 0
  1043   00006E                     strcat@dest:
  1044                           	callstack 0
  1045                           
  1046                           ; 2 bytes @ 0xE
  1047   00006E                     	ds	1
  1048   00006F                     ___fladd@grs:
  1049                           	callstack 0
  1050                           
  1051                           ; 1 bytes @ 0xF
  1052   00006F                     	ds	1
  1053   000070                     ?___flsub:
  1054                           	callstack 0
  1055   000070                     ___aodiv@counter:
  1056                           	callstack 0
  1057   000070                     ___aomod@counter:
  1058                           	callstack 0
  1059   000070                     ___fldiv@sign:
  1060                           	callstack 0
  1061   000070                     itoa@sign:
  1062                           	callstack 0
  1063   000070                     pad@fp:
  1064                           	callstack 0
  1065   000070                     strcat@src:
  1066                           	callstack 0
  1067   000070                     ___flsub@b:
  1068                           	callstack 0
  1069                           
  1070                           ; 4 bytes @ 0x10
  1071   000070                     	ds	1
  1072   000071                     ___aodiv@sign:
  1073                           	callstack 0
  1074   000071                     ___aomod@sign:
  1075                           	callstack 0
  1076   000071                     ___flmul@aexp:
  1077                           	callstack 0
  1078   000071                     ___fldiv@new_exp:
  1079                           	callstack 0
  1080                           
  1081                           ; 2 bytes @ 0x11
  1082   000071                     	ds	1
  1083   000072                     ?_abs:
  1084                           	callstack 0
  1085   000072                     ___flmul@bexp:
  1086                           	callstack 0
  1087   000072                     itoa@i:
  1088                           	callstack 0
  1089   000072                     pad@buf:
  1090                           	callstack 0
  1091   000072                     abs@a:
  1092                           	callstack 0
  1093   000072                     ___aodiv@quotient:
  1094                           	callstack 0
  1095                           
  1096                           ; 8 bytes @ 0x12
  1097   000072                     	ds	1
  1098   000073                     ___fldiv@grs:
  1099                           	callstack 0
  1100   000073                     ___flmul@prod:
  1101                           	callstack 0
  1102                           
  1103                           ; 4 bytes @ 0x13
  1104   000073                     	ds	1
  1105   000074                     ??_abs:
  1106   000074                     pad@p:
  1107                           	callstack 0
  1108   000074                     ___flsub@a:
  1109                           	callstack 0
  1110                           
  1111                           ; 4 bytes @ 0x14
  1112   000074                     	ds	2
  1113   000076                     ??_pad:
  1114                           
  1115                           ; 1 bytes @ 0x16
  1116   000076                     	ds	1
  1117   000077                     ___fldiv@bexp:
  1118                           	callstack 0
  1119   000077                     ___flmul@temp:
  1120                           	callstack 0
  1121   000077                     pad@i:
  1122                           	callstack 0
  1123                           
  1124                           ; 2 bytes @ 0x17
  1125   000077                     	ds	1
  1126   000078                     ___fldiv@aexp:
  1127                           	callstack 0
  1128                           
  1129                           ; 1 bytes @ 0x18
  1130   000078                     	ds	1
  1131   000079                     ?_strtof:
  1132                           	callstack 0
  1133   000079                     pad@w:
  1134                           	callstack 0
  1135   000079                     strtof@s:
  1136                           	callstack 0
  1137                           
  1138                           ; 2 bytes @ 0x19
  1139   000079                     	ds	2
  1140   00007B                     dtoa@fp:
  1141                           	callstack 0
  1142   00007B                     strtof@res:
  1143                           	callstack 0
  1144                           
  1145                           ; 2 bytes @ 0x1B
  1146   00007B                     	ds	2
  1147   00007D                     ??_strtof:
  1148   00007D                     dtoa@d:
  1149                           	callstack 0
  1150                           
  1151                           ; 8 bytes @ 0x1D
  1152   00007D                     	ds	6
  1153   000083                     strtof@digit:
  1154                           	callstack 0
  1155                           
  1156                           ; 1 bytes @ 0x23
  1157   000083                     	ds	1
  1158   000084                     strtof@flags:
  1159                           	callstack 0
  1160                           
  1161                           ; 1 bytes @ 0x24
  1162   000084                     	ds	1
  1163   000085                     ??_dtoa:
  1164   000085                     strtof@expon:
  1165                           	callstack 0
  1166                           
  1167                           ; 2 bytes @ 0x25
  1168   000085                     	ds	2
  1169   000087                     strtof@eexp:
  1170                           	callstack 0
  1171                           
  1172                           ; 2 bytes @ 0x27
  1173   000087                     	ds	2
  1174   000089                     strtof@_u:
  1175                           	callstack 0
  1176                           
  1177                           ; 4 bytes @ 0x29
  1178   000089                     	ds	4
  1179   00008D                     strtof@i:
  1180                           	callstack 0
  1181   00008D                     _dtoa$2353:
  1182                           	callstack 0
  1183                           
  1184                           ; 2 bytes @ 0x2D
  1185   00008D                     	ds	1
  1186   00008E                     ?_atof:
  1187                           	callstack 0
  1188   00008E                     atof@s:
  1189                           	callstack 0
  1190                           
  1191                           ; 2 bytes @ 0x2E
  1192   00008E                     	ds	1
  1193   00008F                     dtoa@p:
  1194                           	callstack 0
  1195                           
  1196                           ; 2 bytes @ 0x2F
  1197   00008F                     	ds	2
  1198   000091                     dtoa@w:
  1199                           	callstack 0
  1200                           
  1201                           ; 2 bytes @ 0x31
  1202   000091                     	ds	1
  1203   000092                     ?_get_coords_usb:
  1204                           	callstack 0
  1205                           
  1206                           ; 8 bytes @ 0x32
  1207   000092                     	ds	1
  1208   000093                     dtoa@n:
  1209                           	callstack 0
  1210                           
  1211                           ; 8 bytes @ 0x33
  1212   000093                     	ds	7
  1213   00009A                     ??_get_coords_usb:
  1214                           
  1215                           ; 1 bytes @ 0x3A
  1216   00009A                     	ds	1
  1217   00009B                     dtoa@i:
  1218                           	callstack 0
  1219                           
  1220                           ; 2 bytes @ 0x3B
  1221   00009B                     	ds	2
  1222   00009D                     dtoa@s:
  1223                           	callstack 0
  1224   00009D                     get_coords_usb@latitude:
  1225                           	callstack 0
  1226                           
  1227                           ; 20 bytes @ 0x3D
  1228   00009D                     	ds	1
  1229   00009E                     vfpfcnvrt@fp:
  1230                           	callstack 0
  1231                           
  1232                           ; 2 bytes @ 0x3E
  1233   00009E                     	ds	2
  1234   0000A0                     vfpfcnvrt@fmt:
  1235                           	callstack 0
  1236                           
  1237                           ; 2 bytes @ 0x40
  1238   0000A0                     	ds	2
  1239   0000A2                     vfpfcnvrt@ap:
  1240                           	callstack 0
  1241                           
  1242                           ; 2 bytes @ 0x42
  1243   0000A2                     	ds	2
  1244   0000A4                     ??_vfpfcnvrt:
  1245                           
  1246                           ; 1 bytes @ 0x44
  1247   0000A4                     	ds	2
  1248   0000A6                     vfpfcnvrt@convarg:
  1249                           	callstack 0
  1250                           
  1251                           ; 8 bytes @ 0x46
  1252   0000A6                     	ds	8
  1253   0000AE                     vfpfcnvrt@cp:
  1254                           	callstack 0
  1255                           
  1256                           ; 2 bytes @ 0x4E
  1257   0000AE                     	ds	2
  1258   0000B0                     ?_vfprintf:
  1259                           	callstack 0
  1260   0000B0                     vfprintf@fp:
  1261                           	callstack 0
  1262                           
  1263                           ; 2 bytes @ 0x50
  1264   0000B0                     	ds	1
  1265   0000B1                     get_coords_usb@longitude:
  1266                           	callstack 0
  1267                           
  1268                           ; 20 bytes @ 0x51
  1269   0000B1                     	ds	1
  1270   0000B2                     vfprintf@fmt:
  1271                           	callstack 0
  1272                           
  1273                           ; 2 bytes @ 0x52
  1274   0000B2                     	ds	2
  1275   0000B4                     vfprintf@ap:
  1276                           	callstack 0
  1277                           
  1278                           ; 2 bytes @ 0x54
  1279   0000B4                     	ds	2
  1280   0000B6                     vfprintf@cfmt:
  1281                           	callstack 0
  1282                           
  1283                           ; 2 bytes @ 0x56
  1284   0000B6                     	ds	2
  1285   0000B8                     ?_sprintf:
  1286                           	callstack 0
  1287   0000B8                     sprintf@s:
  1288                           	callstack 0
  1289                           
  1290                           ; 2 bytes @ 0x58
  1291   0000B8                     	ds	2
  1292   0000BA                     sprintf@fmt:
  1293                           	callstack 0
  1294                           
  1295                           ; 2 bytes @ 0x5A
  1296   0000BA                     	ds	4
  1297   0000BE                     sprintf@ap:
  1298                           	callstack 0
  1299                           
  1300                           ; 2 bytes @ 0x5E
  1301   0000BE                     	ds	2
  1302   0000C0                     sprintf@f:
  1303                           	callstack 0
  1304                           
  1305                           ; 11 bytes @ 0x60
  1306   0000C0                     	ds	5
  1307   0000C5                     get_coords_usb@msg_coords:
  1308                           	callstack 0
  1309                           
  1310                           ; 8 bytes @ 0x65
  1311   0000C5                     	ds	6
  1312   0000CB                     ftoa@num:
  1313                           	callstack 0
  1314                           
  1315                           ; 4 bytes @ 0x6B
  1316   0000CB                     	ds	2
  1317   0000CD                     get_coords_usb@long_counter:
  1318                           	callstack 0
  1319                           
  1320                           ; 1 bytes @ 0x6D
  1321   0000CD                     	ds	1
  1322   0000CE                     get_coords_usb@counter:
  1323                           	callstack 0
  1324                           
  1325                           ; 1 bytes @ 0x6E
  1326   0000CE                     	ds	1
  1327   0000CF                     ftoa@str:
  1328                           	callstack 0
  1329                           
  1330                           ; 2 bytes @ 0x6F
  1331   0000CF                     	ds	2
  1332   0000D1                     ftoa@decimalPlaces:
  1333                           	callstack 0
  1334                           
  1335                           ; 2 bytes @ 0x71
  1336   0000D1                     	ds	2
  1337   0000D3                     ??_ftoa:
  1338                           
  1339                           ; 1 bytes @ 0x73
  1340   0000D3                     	ds	2
  1341   0000D5                     ftoa@wholePart:
  1342                           	callstack 0
  1343                           
  1344                           ; 2 bytes @ 0x75
  1345   0000D5                     	ds	2
  1346   0000D7                     ftoa@digit:
  1347                           	callstack 0
  1348                           
  1349                           ; 2 bytes @ 0x77
  1350   0000D7                     	ds	2
  1351   0000D9                     ftoa@i:
  1352                           	callstack 0
  1353                           
  1354                           ; 2 bytes @ 0x79
  1355   0000D9                     	ds	2
  1356   0000DB                     ftoa@decimalPart:
  1357                           	callstack 0
  1358                           
  1359                           ; 4 bytes @ 0x7B
  1360   0000DB                     	ds	4
  1361   0000DF                     parse_usb_message@message:
  1362                           	callstack 0
  1363                           
  1364                           ; 2 bytes @ 0x7F
  1365   0000DF                     	ds	2
  1366   0000E1                     ??_main:
  1367                           
  1368                           ; 1 bytes @ 0x81
  1369   0000E1                     	ds	2
  1370   0000E3                     main@test_string:
  1371                           	callstack 0
  1372                           
  1373                           ; 16 bytes @ 0x83
  1374   0000E3                     	ds	16
  1375   0000F3                     main@MRF_msg_code:
  1376                           	callstack 0
  1377                           
  1378                           ; 4 bytes @ 0x93
  1379   0000F3                     	ds	4
  1380   0000F7                     main@previous_state:
  1381                           	callstack 0
  1382                           
  1383                           ; 1 bytes @ 0x97
  1384   0000F7                     	ds	1
  1385                           
  1386                           	psect	cstackCOMRAM
  1387   000001                     __pcstackCOMRAM:
  1388                           	callstack 0
  1389   000001                     ?i2_strlen:
  1390                           	callstack 0
  1391   000001                     read_spi_data@data:
  1392                           	callstack 0
  1393   000001                     read_byte_usb@content:
  1394                           	callstack 0
  1395   000001                     i2strcpy@dest:
  1396                           	callstack 0
  1397   000001                     i2strlen@s:
  1398                           	callstack 0
  1399                           
  1400                           ; 2 bytes @ 0x0
  1401   000001                     	ds	1
  1402   000002                     
  1403                           ; 1 bytes @ 0x1
  1404   000002                     	ds	1
  1405   000003                     i2strcpy@src:
  1406                           	callstack 0
  1407   000003                     i2strlen@a:
  1408                           	callstack 0
  1409                           
  1410                           ; 2 bytes @ 0x2
  1411   000003                     	ds	2
  1412   000005                     ??i2_strcpy:
  1413                           
  1414                           ; 1 bytes @ 0x4
  1415   000005                     	ds	2
  1416   000007                     i2strcpy@s:
  1417                           	callstack 0
  1418                           
  1419                           ; 2 bytes @ 0x6
  1420   000007                     	ds	2
  1421   000009                     i2strcpy@d:
  1422                           	callstack 0
  1423                           
  1424                           ; 2 bytes @ 0x8
  1425   000009                     	ds	2
  1426   00000B                     append_string@str:
  1427                           	callstack 0
  1428                           
  1429                           ; 2 bytes @ 0xA
  1430   00000B                     	ds	2
  1431   00000D                     append_string@ch:
  1432                           	callstack 0
  1433                           
  1434                           ; 1 bytes @ 0xC
  1435   00000D                     	ds	1
  1436   00000E                     ??_append_string:
  1437                           
  1438                           ; 1 bytes @ 0xD
  1439   00000E                     	ds	2
  1440   000010                     append_string@length:
  1441                           	callstack 0
  1442                           
  1443                           ; 2 bytes @ 0xF
  1444   000010                     	ds	2
  1445   000012                     ??_ISR:
  1446                           
  1447                           ; 1 bytes @ 0x11
  1448   000012                     	ds	10
  1449   00001C                     ISR@temp_receive_string:
  1450                           	callstack 0
  1451                           
  1452                           ; 40 bytes @ 0x1B
  1453   00001C                     	ds	40
  1454   000044                     ISR@MRF_input:
  1455                           	callstack 0
  1456                           
  1457                           ; 1 bytes @ 0x43
  1458   000044                     	ds	1
  1459   000045                     ISR@usb_input:
  1460                           	callstack 0
  1461                           
  1462                           ; 1 bytes @ 0x44
  1463   000045                     	ds	1
  1464                           
  1465 ;;
  1466 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1467 ;;
  1468 ;; *************** function _main *****************
  1469 ;; Defined at:
  1470 ;;		line 113 in file "BeeBot_Main.c"
  1471 ;; Parameters:    Size  Location     Type
  1472 ;;		None
  1473 ;; Auto vars:     Size  Location     Type
  1474 ;;  test_string    16  131[BANK0 ] unsigned char [16]
  1475 ;;  MRF_msg_code    4  147[BANK0 ] unsigned char [4]
  1476 ;;  previous_sta    1  151[BANK0 ] unsigned char 
  1477 ;; Return value:  Size  Location     Type
  1478 ;;                  1    wreg      void 
  1479 ;; Registers used:
  1480 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1481 ;; Tracked objects:
  1482 ;;		On entry : 0/0
  1483 ;;		On exit  : 0/0
  1484 ;;		Unchanged: 0/0
  1485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1487 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1488 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1489 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1490 ;;Total ram usage:       23 bytes
  1491 ;; Hardware stack levels required when called: 13
  1492 ;; This function calls:
  1493 ;;		_init_MRF89XAM
  1494 ;;		_init_interrupts
  1495 ;;		_init_pins
  1496 ;;		_init_spi
  1497 ;;		_init_uart2
  1498 ;;		_parse_usb_message
  1499 ;;		_strcmp
  1500 ;;		_strcpy
  1501 ;;		_transmit_string_MRF89XAM
  1502 ;;		_transmit_string_usb
  1503 ;; This function is called by:
  1504 ;;		Startup code after reset
  1505 ;; This function uses a non-reentrant model
  1506 ;;
  1507                           
  1508                           	psect	text0
  1509   002870                     __ptext0:
  1510                           	callstack 0
  1511   002870                     _main:
  1512                           	callstack 18
  1513   002870                     
  1514                           ;BeeBot_Main.c: 115:     BYTE previous_state;;BeeBot_Main.c: 116:     char MRF_msg_code[
      +                          4];;BeeBot_Main.c: 118:     OSCCON = 0b01100111;
  1515   002870  0E67               	movlw	103
  1516   002872  6ED3               	movwf	211,c	;volatile
  1517   002874                     
  1518                           ;BeeBot_Main.c: 119:     _delay((unsigned long)((200)*(8000000/4000.0)));
  1519   002874  0E03               	movlw	3
  1520   002876  0100               	movlb	0	; () banked
  1521   002878  6FE2               	movwf	(??_main+1)& (0+255),b
  1522   00287A  0E08               	movlw	8
  1523   00287C  6FE1               	movwf	??_main& (0+255),b
  1524   00287E  0E77               	movlw	119
  1525   002880                     u7587:
  1526   002880  2EE8               	decfsz	wreg,f,c
  1527   002882  D7FE               	bra	u7587
  1528   002884  2FE1               	decfsz	??_main& (0+255),f,b
  1529   002886  D7FC               	bra	u7587
  1530   002888  2FE2               	decfsz	(??_main+1)& (0+255),f,b
  1531   00288A  D7FA               	bra	u7587
  1532   00288C                     
  1533                           ;BeeBot_Main.c: 123:     char test_string[16] = "";
  1534   00288C  EE20  F0E3         	lfsr	2,main@test_string
  1535   002890  0E0F               	movlw	15
  1536   002892                     u6891:
  1537   002892  6ADE               	clrf	postinc2,c
  1538   002894  06E8               	decf	wreg,f,c
  1539   002896  E2FD               	bc	u6891
  1540   002898  EFE9  F014         	goto	l5728
  1541   00289C                     l5672:
  1542                           
  1543                           ; BSR set to: 0
  1544                           ;BeeBot_Main.c: 133:                 init_pins ();
  1545   00289C  ECCC  F01F         	call	_init_pins	;wreg free
  1546                           
  1547                           ;BeeBot_Main.c: 134:                 init_uart2 ();
  1548   0028A0  EC90  F020         	call	_init_uart2	;wreg free
  1549                           
  1550                           ;BeeBot_Main.c: 135:                 init_spi ();
  1551   0028A4  ECA4  F020         	call	_init_spi	;wreg free
  1552   0028A8                     
  1553                           ;BeeBot_Main.c: 136:                 init_MRF89XAM ();
  1554   0028A8  ECB1  F01D         	call	_init_MRF89XAM	;wreg free
  1555   0028AC                     
  1556                           ;BeeBot_Main.c: 137:                 init_interrupts();
  1557   0028AC  EC9B  F020         	call	_init_interrupts	;wreg free
  1558   0028B0                     
  1559                           ;BeeBot_Main.c: 138:                 previous_state = 2;
  1560   0028B0  0E02               	movlw	2
  1561   0028B2  0100               	movlb	0	; () banked
  1562   0028B4  6FF7               	movwf	main@previous_state& (0+255),b
  1563   0028B6                     
  1564                           ; BSR set to: 0
  1565                           ;BeeBot_Main.c: 139:                 state = 3;
  1566   0028B6  0E03               	movlw	3
  1567   0028B8  6FFE               	movwf	_state& (0+255),b
  1568                           
  1569                           ;BeeBot_Main.c: 140:                 break;
  1570   0028BA  EFE9  F014         	goto	l5728
  1571   0028BE                     l5682:
  1572                           
  1573                           ;BeeBot_Main.c: 144:                 {;BeeBot_Main.c: 145:                     if(MRF_me
      +                          ssage_received)
  1574   0028BE  0100               	movlb	0	; () banked
  1575   0028C0  51FC               	movf	_MRF_message_received& (0+255),w,b
  1576   0028C2  B4D8               	btfsc	status,2,c
  1577   0028C4  EF66  F014         	goto	u6901
  1578   0028C8  EF68  F014         	goto	u6900
  1579   0028CC                     u6901:
  1580   0028CC  EF99  F014         	goto	l5694
  1581   0028D0                     u6900:
  1582   0028D0                     
  1583                           ; BSR set to: 0
  1584                           ;BeeBot_Main.c: 146:                     {;BeeBot_Main.c: 147:                         _
      +                          delay((unsigned long)((10)*(8000000/4000.0)));
  1585   0028D0  0E1A               	movlw	26
  1586   0028D2  0100               	movlb	0	; () banked
  1587   0028D4  6FE1               	movwf	??_main& (0+255),b
  1588   0028D6  0EF8               	movlw	248
  1589   0028D8                     u7597:
  1590   0028D8  2EE8               	decfsz	wreg,f,c
  1591   0028DA  D7FE               	bra	u7597
  1592   0028DC  2FE1               	decfsz	??_main& (0+255),f,b
  1593   0028DE  D7FC               	bra	u7597
  1594   0028E0  F000               	nop	
  1595   0028E2                     
  1596                           ;BeeBot_Main.c: 148:                         MRF_message_received = 0;
  1597   0028E2  0E00               	movlw	0
  1598   0028E4  0100               	movlb	0	; () banked
  1599   0028E6  6FFC               	movwf	_MRF_message_received& (0+255),b
  1600   0028E8                     
  1601                           ; BSR set to: 0
  1602                           ;BeeBot_Main.c: 149:                         if(!strcmp(MRF_message, "hello\n\n\n"))
  1603   0028E8  0E4E               	movlw	low _MRF_message
  1604   0028EA  6F60               	movwf	strcmp@l& (0+255),b
  1605   0028EC  0E01               	movlw	high _MRF_message
  1606   0028EE  6F61               	movwf	(strcmp@l+1)& (0+255),b
  1607   0028F0  0E72               	movlw	low STR_1
  1608   0028F2  6F62               	movwf	strcmp@r& (0+255),b
  1609   0028F4  0EFF               	movlw	high STR_1
  1610   0028F6  6F63               	movwf	(strcmp@r+1)& (0+255),b
  1611   0028F8  ECA5  F01C         	call	_strcmp	;wreg free
  1612   0028FC  0100               	movlb	0	; () banked
  1613   0028FE  5160               	movf	?_strcmp& (0+255),w,b
  1614   002900  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  1615   002902  A4D8               	btfss	status,2,c
  1616   002904  EF86  F014         	goto	u6911
  1617   002908  EF88  F014         	goto	u6910
  1618   00290C                     u6911:
  1619   00290C  EF8E  F014         	goto	l5692
  1620   002910                     u6910:
  1621   002910                     
  1622                           ; BSR set to: 0
  1623                           ;BeeBot_Main.c: 150:                         {;BeeBot_Main.c: 151:                      
      +                                 transmit_string_MRF89XAM("HI");
  1624   002910  0EF4               	movlw	low STR_3
  1625   002912  6F64               	movwf	transmit_string_MRF89XAM@tx_str& (0+255),b
  1626   002914  0EFF               	movlw	high STR_3
  1627   002916  6F65               	movwf	(transmit_string_MRF89XAM@tx_str+1)& (0+255),b
  1628   002918  EC09  F019         	call	_transmit_string_MRF89XAM	;wreg free
  1629   00291C                     l5692:
  1630                           
  1631                           ;BeeBot_Main.c: 153:                         strcpy(MRF_message, "");
  1632   00291C  0E4E               	movlw	low _MRF_message
  1633   00291E  0100               	movlb	0	; () banked
  1634   002920  6F64               	movwf	strcpy@dest& (0+255),b
  1635   002922  0E01               	movlw	high _MRF_message
  1636   002924  6F65               	movwf	(strcpy@dest+1)& (0+255),b
  1637   002926  0E71               	movlw	low (STR_13+8)
  1638   002928  6F66               	movwf	strcpy@src& (0+255),b
  1639   00292A  0EFF               	movlw	high (STR_13+8)
  1640   00292C  6F67               	movwf	(strcpy@src+1)& (0+255),b
  1641   00292E  ECE2  F01D         	call	_strcpy	;wreg free
  1642   002932                     l5694:
  1643                           
  1644                           ;BeeBot_Main.c: 155:                     if(usb_message_received)
  1645   002932  0100               	movlb	0	; () banked
  1646   002934  51FB               	movf	_usb_message_received& (0+255),w,b
  1647   002936  B4D8               	btfsc	status,2,c
  1648   002938  EFA0  F014         	goto	u6921
  1649   00293C  EFA2  F014         	goto	u6920
  1650   002940                     u6921:
  1651   002940  EF5F  F014         	goto	l5682
  1652   002944                     u6920:
  1653   002944                     
  1654                           ; BSR set to: 0
  1655                           ;BeeBot_Main.c: 156:                     {;BeeBot_Main.c: 157:                         u
      +                          sb_message_received = 0;
  1656   002944  0E00               	movlw	0
  1657   002946  6FFB               	movwf	_usb_message_received& (0+255),b
  1658   002948                     
  1659                           ; BSR set to: 0
  1660                           ;BeeBot_Main.c: 158:                         transmit_string_usb(usb_message);
  1661   002948  0E6A               	movlw	low _usb_message
  1662   00294A  6F64               	movwf	transmit_string_usb@message& (0+255),b
  1663   00294C  0E02               	movlw	high _usb_message
  1664   00294E  6F65               	movwf	(transmit_string_usb@message+1)& (0+255),b
  1665   002950  EC4C  F01D         	call	_transmit_string_usb	;wreg free
  1666   002954                     
  1667                           ;BeeBot_Main.c: 159:                         strcpy(usb_message, "");
  1668   002954  0E6A               	movlw	low _usb_message
  1669   002956  0100               	movlb	0	; () banked
  1670   002958  6F64               	movwf	strcpy@dest& (0+255),b
  1671   00295A  0E02               	movlw	high _usb_message
  1672   00295C  6F65               	movwf	(strcpy@dest+1)& (0+255),b
  1673   00295E  0E71               	movlw	low (STR_13+8)
  1674   002960  6F66               	movwf	strcpy@src& (0+255),b
  1675   002962  0EFF               	movlw	high (STR_13+8)
  1676   002964  6F67               	movwf	(strcpy@src+1)& (0+255),b
  1677   002966  ECE2  F01D         	call	_strcpy	;wreg free
  1678   00296A  EF5F  F014         	goto	l5682
  1679   00296E                     l156:
  1680                           
  1681                           ; BSR set to: 0
  1682                           ;BeeBot_Main.c: 191:                 if((!PORTDbits.RD5))
  1683   00296E  BA83               	btfsc	131,5,c	;volatile
  1684   002970  EFBC  F014         	goto	u6931
  1685   002974  EFBE  F014         	goto	u6930
  1686   002978                     u6931:
  1687   002978  EFC2  F014         	goto	l5720
  1688   00297C                     u6930:
  1689   00297C                     
  1690                           ; BSR set to: 0
  1691                           ;BeeBot_Main.c: 192:                 {;BeeBot_Main.c: 193:                     state = p
      +                          revious_state;
  1692   00297C  C0F7  F0FE         	movff	main@previous_state,_state
  1693   002980                     
  1694                           ; BSR set to: 0
  1695                           ;BeeBot_Main.c: 194:                     previous_state = 4;
  1696   002980  0E04               	movlw	4
  1697   002982  6FF7               	movwf	main@previous_state& (0+255),b
  1698   002984                     l5720:
  1699                           
  1700                           ; BSR set to: 0
  1701                           ;BeeBot_Main.c: 197:                 if(strcmp(usb_message, ""))
  1702   002984  0E6A               	movlw	low _usb_message
  1703   002986  6F60               	movwf	strcmp@l& (0+255),b
  1704   002988  0E02               	movlw	high _usb_message
  1705   00298A  6F61               	movwf	(strcmp@l+1)& (0+255),b
  1706   00298C  0E71               	movlw	low (STR_13+8)
  1707   00298E  6F62               	movwf	strcmp@r& (0+255),b
  1708   002990  0EFF               	movlw	high (STR_13+8)
  1709   002992  6F63               	movwf	(strcmp@r+1)& (0+255),b
  1710   002994  ECA5  F01C         	call	_strcmp	;wreg free
  1711   002998  0100               	movlb	0	; () banked
  1712   00299A  5160               	movf	?_strcmp& (0+255),w,b
  1713   00299C  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  1714   00299E  B4D8               	btfsc	status,2,c
  1715   0029A0  EFD4  F014         	goto	u6941
  1716   0029A4  EFD6  F014         	goto	u6940
  1717   0029A8                     u6941:
  1718   0029A8  EFE9  F014         	goto	l140
  1719   0029AC                     u6940:
  1720   0029AC                     
  1721                           ; BSR set to: 0
  1722                           ;BeeBot_Main.c: 198:                 {;BeeBot_Main.c: 199:                     parse_usb
      +                          _message(usb_message);
  1723   0029AC  0E6A               	movlw	low _usb_message
  1724   0029AE  6FDF               	movwf	parse_usb_message@message& (0+255),b
  1725   0029B0  0E02               	movlw	high _usb_message
  1726   0029B2  6FE0               	movwf	(parse_usb_message@message+1)& (0+255),b
  1727   0029B4  EC31  F00B         	call	_parse_usb_message	;wreg free
  1728   0029B8                     
  1729                           ;BeeBot_Main.c: 200:                     strcpy(usb_message, "");
  1730   0029B8  0E6A               	movlw	low _usb_message
  1731   0029BA  0100               	movlb	0	; () banked
  1732   0029BC  6F64               	movwf	strcpy@dest& (0+255),b
  1733   0029BE  0E02               	movlw	high _usb_message
  1734   0029C0  6F65               	movwf	(strcpy@dest+1)& (0+255),b
  1735   0029C2  0E71               	movlw	low (STR_13+8)
  1736   0029C4  6F66               	movwf	strcpy@src& (0+255),b
  1737   0029C6  0EFF               	movlw	high (STR_13+8)
  1738   0029C8  6F67               	movwf	(strcpy@src+1)& (0+255),b
  1739   0029CA  ECE2  F01D         	call	_strcpy	;wreg free
  1740   0029CE  EFE9  F014         	goto	l5728
  1741   0029D2                     l140:
  1742   0029D2                     l5728:
  1743   0029D2  0100               	movlb	0	; () banked
  1744   0029D4  51FE               	movf	_state& (0+255),w,b
  1745   0029D6  6FE1               	movwf	??_main& (0+255),b
  1746   0029D8  6BE2               	clrf	(??_main+1)& (0+255),b
  1747                           
  1748                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1749                           ; Switch size 1, requested type "simple"
  1750                           ; Number of cases is 1, Range of values is 0 to 0
  1751                           ; switch strategies available:
  1752                           ; Name         Instructions Cycles
  1753                           ; simple_byte            4     3 (average)
  1754                           ;	Chosen strategy is simple_byte
  1755   0029DA  51E2               	movf	(??_main+1)& (0+255),w,b
  1756   0029DC  0A00               	xorlw	0	; case 0
  1757   0029DE  B4D8               	btfsc	status,2,c
  1758   0029E0  EFF4  F014         	goto	l6224
  1759   0029E4  EFE9  F014         	goto	l5728
  1760   0029E8                     l6224:
  1761                           
  1762                           ; BSR set to: 0
  1763                           ; Switch size 1, requested type "simple"
  1764                           ; Number of cases is 6, Range of values is 0 to 5
  1765                           ; switch strategies available:
  1766                           ; Name         Instructions Cycles
  1767                           ; simple_byte           19    10 (average)
  1768                           ;	Chosen strategy is simple_byte
  1769   0029E8  51E1               	movf	??_main& (0+255),w,b
  1770   0029EA  0A00               	xorlw	0	; case 0
  1771   0029EC  B4D8               	btfsc	status,2,c
  1772   0029EE  EFE9  F014         	goto	l140
  1773   0029F2  0A01               	xorlw	1	; case 1
  1774   0029F4  B4D8               	btfsc	status,2,c
  1775   0029F6  EFE9  F014         	goto	l140
  1776   0029FA  0A03               	xorlw	3	; case 2
  1777   0029FC  B4D8               	btfsc	status,2,c
  1778   0029FE  EF4E  F014         	goto	l5672
  1779   002A02  0A01               	xorlw	1	; case 3
  1780   002A04  B4D8               	btfsc	status,2,c
  1781   002A06  EF5F  F014         	goto	l5682
  1782   002A0A  0A07               	xorlw	7	; case 4
  1783   002A0C  B4D8               	btfsc	status,2,c
  1784   002A0E  EFB7  F014         	goto	l156
  1785   002A12  0A01               	xorlw	1	; case 5
  1786   002A14  B4D8               	btfsc	status,2,c
  1787   002A16  EFE9  F014         	goto	l140
  1788   002A1A  EFE9  F014         	goto	l5728
  1789   002A1E  EF9A  F000         	goto	start
  1790   002A22                     __end_of_main:
  1791                           	callstack 0
  1792                           
  1793 ;; *************** function _transmit_string_MRF89XAM *****************
  1794 ;; Defined at:
  1795 ;;		line 175 in file "MRF89XAM.c"
  1796 ;; Parameters:    Size  Location     Type
  1797 ;;  tx_str          2    4[BANK0 ] PTR unsigned char 
  1798 ;;		 -> STR_22(8), STR_18(9), STR_17(7), STR_16(7), 
  1799 ;;		 -> STR_15(7), parse_MRF_message@response(9), parse_MRF_message@temp_string(9), STR_3(3), 
  1800 ;; Auto vars:     Size  Location     Type
  1801 ;;  length          2    9[BANK0 ] unsigned int 
  1802 ;;  counter         1   11[BANK0 ] unsigned char 
  1803 ;;  loop_counter    1    0        unsigned char 
  1804 ;;  loop            1    0        unsigned char 
  1805 ;; Return value:  Size  Location     Type
  1806 ;;                  1    wreg      void 
  1807 ;; Registers used:
  1808 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1809 ;; Tracked objects:
  1810 ;;		On entry : 0/0
  1811 ;;		On exit  : 0/0
  1812 ;;		Unchanged: 0/0
  1813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1814 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1815 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1816 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1817 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1818 ;;Total ram usage:        8 bytes
  1819 ;; Hardware stack levels used: 1
  1820 ;; Hardware stack levels required when called: 4
  1821 ;; This function calls:
  1822 ;;		_strlen
  1823 ;;		_write_spi_data
  1824 ;;		_write_spi_reg
  1825 ;; This function is called by:
  1826 ;;		_main
  1827 ;;		_parse_MRF_message
  1828 ;; This function uses a non-reentrant model
  1829 ;;
  1830                           
  1831                           	psect	text1
  1832   003212                     __ptext1:
  1833                           	callstack 0
  1834   003212                     _transmit_string_MRF89XAM:
  1835                           	callstack 26
  1836   003212                     
  1837                           ;MRF89XAM.c: 175: void transmit_string_MRF89XAM(char tx_str[]);MRF89XAM.c: 176: {;MRF89X
      +                          AM.c: 177:     unsigned int length = strlen(tx_str);
  1838   003212  C064  F060         	movff	transmit_string_MRF89XAM@tx_str,strlen@s
  1839   003216  C065  F061         	movff	transmit_string_MRF89XAM@tx_str+1,strlen@s+1
  1840   00321A  EC41  F01E         	call	_strlen	;wreg free
  1841   00321E  C060  F069         	movff	?_strlen,transmit_string_MRF89XAM@length
  1842   003222  C061  F06A         	movff	?_strlen+1,transmit_string_MRF89XAM@length+1
  1843   003226                     
  1844                           ;MRF89XAM.c: 184:         write_spi_reg(0x00, 0b00100010);
  1845   003226  0E22               	movlw	34
  1846   003228  0100               	movlb	0	; () banked
  1847   00322A  6F60               	movwf	write_spi_reg@data& (0+255),b
  1848   00322C  0E00               	movlw	0
  1849   00322E  EC72  F01F         	call	_write_spi_reg
  1850   003232                     
  1851                           ;MRF89XAM.c: 185:         MRF_transmitting = 1;
  1852   003232  0E01               	movlw	1
  1853   003234  0100               	movlb	0	; () banked
  1854   003236  6FFD               	movwf	_MRF_transmitting& (0+255),b
  1855   003238                     
  1856                           ; BSR set to: 0
  1857                           ;MRF89XAM.c: 186:         INTCON3bits.INT1IE = 0;
  1858   003238  96F0               	bcf	240,3,c	;volatile
  1859   00323A                     
  1860                           ; BSR set to: 0
  1861                           ;MRF89XAM.c: 187:         if(length <= 8)
  1862   00323A  516A               	movf	(transmit_string_MRF89XAM@length+1)& (0+255),w,b
  1863   00323C  E107               	bnz	u6621
  1864   00323E  0E09               	movlw	9
  1865   003240  5D69               	subwf	transmit_string_MRF89XAM@length& (0+255),w,b
  1866   003242  B0D8               	btfsc	status,0,c
  1867   003244  EF26  F019         	goto	u6621
  1868   003248  EF28  F019         	goto	u6620
  1869   00324C                     u6621:
  1870   00324C  EF64  F019         	goto	l5564
  1871   003250                     u6620:
  1872   003250                     
  1873                           ; BSR set to: 0
  1874                           ;MRF89XAM.c: 188:         {;MRF89XAM.c: 189:             for(counter = 0; counter < 8; c
      +                          ounter++)
  1875   003250  0E00               	movlw	0
  1876   003252  6F6B               	movwf	transmit_string_MRF89XAM@counter& (0+255),b
  1877   003254                     l5554:
  1878                           
  1879                           ; BSR set to: 0
  1880                           ;MRF89XAM.c: 190:             {;MRF89XAM.c: 191:                 if(counter < length)
  1881   003254  516B               	movf	transmit_string_MRF89XAM@counter& (0+255),w,b
  1882   003256  6F66               	movwf	??_transmit_string_MRF89XAM& (0+255),b
  1883   003258  6B67               	clrf	(??_transmit_string_MRF89XAM+1)& (0+255),b
  1884   00325A  5169               	movf	transmit_string_MRF89XAM@length& (0+255),w,b
  1885   00325C  5D66               	subwf	??_transmit_string_MRF89XAM& (0+255),w,b
  1886   00325E  516A               	movf	(transmit_string_MRF89XAM@length+1)& (0+255),w,b
  1887   003260  5967               	subwfb	(??_transmit_string_MRF89XAM+1)& (0+255),w,b
  1888   003262  B0D8               	btfsc	status,0,c
  1889   003264  EF36  F019         	goto	u6631
  1890   003268  EF38  F019         	goto	u6630
  1891   00326C                     u6631:
  1892   00326C  EF57  F019         	goto	l5558
  1893   003270                     u6630:
  1894   003270                     
  1895                           ; BSR set to: 0
  1896                           ;MRF89XAM.c: 192:                     write_spi_data((BYTE)(tx_str[counter] << 1));
  1897   003270  516B               	movf	transmit_string_MRF89XAM@counter& (0+255),w,b
  1898   003272  2564               	addwf	transmit_string_MRF89XAM@tx_str& (0+255),w,b
  1899   003274  6F66               	movwf	??_transmit_string_MRF89XAM& (0+255),b
  1900   003276  0E00               	movlw	0
  1901   003278  2165               	addwfc	(transmit_string_MRF89XAM@tx_str+1)& (0+255),w,b
  1902   00327A  6F67               	movwf	(??_transmit_string_MRF89XAM+1)& (0+255),b
  1903   00327C  C066  FFF6         	movff	??_transmit_string_MRF89XAM,tblptrl
  1904   003280  C067  FFF7         	movff	??_transmit_string_MRF89XAM+1,tblptrh
  1905   003284  0E00               	movlw	low (__mediumconst shr (0+16))
  1906   003286  6EF8               	movwf	tblptru,c
  1907   003288  0E0F               	movlw	(high __ramtop+-1)
  1908   00328A  64F7               	cpfsgt	tblptrh,c
  1909   00328C  D003               	bra	u6647
  1910   00328E  0008               	tblrd		*
  1911   003290  50F5               	movf	tablat,w,c
  1912   003292  D005               	bra	u6640
  1913   003294                     u6647:
  1914   003294  CFF6 FFE9          	movff	tblptrl,fsr0l
  1915   003298  CFF7 FFEA          	movff	tblptrh,fsr0h
  1916   00329C  50EF               	movf	indf0,w,c
  1917   00329E                     u6640:
  1918   00329E  0100               	movlb	0	; () banked
  1919   0032A0  6F68               	movwf	(??_transmit_string_MRF89XAM+2)& (0+255),b
  1920   0032A2  90D8               	bcf	status,0,c
  1921   0032A4  3568               	rlcf	(??_transmit_string_MRF89XAM+2)& (0+255),w,b
  1922   0032A6  EC63  F020         	call	_write_spi_data
  1923   0032AA  EF5A  F019         	goto	l5560
  1924   0032AE                     l5558:
  1925                           
  1926                           ; BSR set to: 0
  1927                           ;MRF89XAM.c: 194:                     write_spi_data((BYTE)('\n' << 1));
  1928   0032AE  0E14               	movlw	20
  1929   0032B0  EC63  F020         	call	_write_spi_data
  1930   0032B4                     l5560:
  1931                           
  1932                           ;MRF89XAM.c: 195:             }
  1933   0032B4  0100               	movlb	0	; () banked
  1934   0032B6  2B6B               	incf	transmit_string_MRF89XAM@counter& (0+255),f,b
  1935   0032B8                     
  1936                           ; BSR set to: 0
  1937   0032B8  0E07               	movlw	7
  1938   0032BA  656B               	cpfsgt	transmit_string_MRF89XAM@counter& (0+255),b
  1939   0032BC  EF62  F019         	goto	u6651
  1940   0032C0  EF64  F019         	goto	u6650
  1941   0032C4                     u6651:
  1942   0032C4  EF2A  F019         	goto	l5554
  1943   0032C8                     u6650:
  1944   0032C8                     l5564:
  1945                           
  1946                           ; BSR set to: 0
  1947                           ;MRF89XAM.c: 197:         write_spi_reg(0x00, 0b10000010);
  1948   0032C8  0E82               	movlw	130
  1949   0032CA  6F60               	movwf	write_spi_reg@data& (0+255),b
  1950   0032CC  0E00               	movlw	0
  1951   0032CE  EC72  F01F         	call	_write_spi_reg
  1952   0032D2                     l335:
  1953   0032D2  A281               	btfss	129,1,c	;volatile
  1954   0032D4  EF6E  F019         	goto	u6661
  1955   0032D8  EF70  F019         	goto	u6660
  1956   0032DC                     u6661:
  1957   0032DC  EF69  F019         	goto	l335
  1958   0032E0                     u6660:
  1959   0032E0                     l338:
  1960   0032E0  A481               	btfss	129,2,c	;volatile
  1961   0032E2  EF75  F019         	goto	u6671
  1962   0032E6  EF77  F019         	goto	u6670
  1963   0032EA                     u6671:
  1964   0032EA  EF70  F019         	goto	l338
  1965   0032EE                     u6670:
  1966   0032EE                     
  1967                           ;MRF89XAM.c: 202:         write_spi_reg(0x00, 0b01100010);
  1968   0032EE  0E62               	movlw	98
  1969   0032F0  0100               	movlb	0	; () banked
  1970   0032F2  6F60               	movwf	write_spi_reg@data& (0+255),b
  1971   0032F4  0E00               	movlw	0
  1972   0032F6  EC72  F01F         	call	_write_spi_reg
  1973   0032FA                     
  1974                           ;MRF89XAM.c: 203:         MRF_transmitting = 0;
  1975   0032FA  0E00               	movlw	0
  1976   0032FC  0100               	movlb	0	; () banked
  1977   0032FE  6FFD               	movwf	_MRF_transmitting& (0+255),b
  1978   003300                     
  1979                           ; BSR set to: 0
  1980                           ;MRF89XAM.c: 204:         INTCON3bits.INT1IF = 0;
  1981   003300  90F0               	bcf	240,0,c	;volatile
  1982   003302                     
  1983                           ; BSR set to: 0
  1984                           ;MRF89XAM.c: 205:         INTCON3bits.INT1IE = 1;
  1985   003302  86F0               	bsf	240,3,c	;volatile
  1986   003304                     
  1987                           ; BSR set to: 0
  1988   003304  0012               	return		;funcret
  1989   003306                     __end_of_transmit_string_MRF89XAM:
  1990                           	callstack 0
  1991                           
  1992 ;; *************** function _write_spi_data *****************
  1993 ;; Defined at:
  1994 ;;		line 88 in file "MRF89XAM.c"
  1995 ;; Parameters:    Size  Location     Type
  1996 ;;  data            1    wreg     unsigned char 
  1997 ;; Auto vars:     Size  Location     Type
  1998 ;;  data            1    0[BANK0 ] unsigned char 
  1999 ;;  dummy           1    0        unsigned char 
  2000 ;; Return value:  Size  Location     Type
  2001 ;;                  1    wreg      void 
  2002 ;; Registers used:
  2003 ;;		wreg
  2004 ;; Tracked objects:
  2005 ;;		On entry : 0/0
  2006 ;;		On exit  : 0/0
  2007 ;;		Unchanged: 0/0
  2008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2010 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2012 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2013 ;;Total ram usage:        1 bytes
  2014 ;; Hardware stack levels used: 1
  2015 ;; Hardware stack levels required when called: 3
  2016 ;; This function calls:
  2017 ;;		Nothing
  2018 ;; This function is called by:
  2019 ;;		_transmit_string_MRF89XAM
  2020 ;;		_transmit_MRF89XAM
  2021 ;; This function uses a non-reentrant model
  2022 ;;
  2023                           
  2024                           	psect	text2
  2025   0040C6                     __ptext2:
  2026                           	callstack 0
  2027   0040C6                     _write_spi_data:
  2028                           	callstack 26
  2029                           
  2030                           ; BSR set to: 0
  2031                           ;incstack = 0
  2032                           ;write_spi_data@data stored from wreg
  2033   0040C6  0100               	movlb	0	; () banked
  2034   0040C8  6F60               	movwf	write_spi_data@data& (0+255),b
  2035   0040CA                     
  2036                           ;MRF89XAM.c: 88: void write_spi_data(BYTE data);MRF89XAM.c: 89: {;MRF89XAM.c: 90:     BY
      +                          TE dummy;;MRF89XAM.c: 93:     LATCbits.LC1 = 0;
  2037   0040CA  928B               	bcf	139,1,c	;volatile
  2038   0040CC  50C9               	movf	201,w,c	;volatile
  2039   0040CE                     
  2040                           ;MRF89XAM.c: 97:     SSP1BUF = data;
  2041   0040CE  C060  FFC9         	movff	write_spi_data@data,4041	;volatile
  2042   0040D2                     l304:
  2043   0040D2  A0C7               	btfss	199,0,c	;volatile
  2044   0040D4  EF6E  F020         	goto	u6361
  2045   0040D8  EF70  F020         	goto	u6360
  2046   0040DC                     u6361:
  2047   0040DC  EF69  F020         	goto	l304
  2048   0040E0                     u6360:
  2049   0040E0  50C9               	movf	201,w,c	;volatile
  2050                           
  2051                           ;MRF89XAM.c: 103:     LATCbits.LC1 = 1;
  2052   0040E2  828B               	bsf	139,1,c	;volatile
  2053   0040E4  0012               	return		;funcret
  2054   0040E6                     __end_of_write_spi_data:
  2055                           	callstack 0
  2056                           
  2057 ;; *************** function _strcmp *****************
  2058 ;; Defined at:
  2059 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strcmp.c"
  2060 ;; Parameters:    Size  Location     Type
  2061 ;;  l               2    0[BANK0 ] PTR const unsigned char 
  2062 ;;		 -> main@MRF_msg_code(4), usb_message(100), MRF_message(40), 
  2063 ;;  r               2    2[BANK0 ] PTR const unsigned char 
  2064 ;;		 -> STR_34(4), STR_32(4), STR_30(4), STR_28(2), 
  2065 ;;		 -> STR_26(3), STR_24(2), STR_14(9), STR_11(1), 
  2066 ;;		 -> STR_9(2), STR_7(4), STR_2(9), 
  2067 ;; Auto vars:     Size  Location     Type
  2068 ;;		None
  2069 ;; Return value:  Size  Location     Type
  2070 ;;                  2    0[BANK0 ] int 
  2071 ;; Registers used:
  2072 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2073 ;; Tracked objects:
  2074 ;;		On entry : 0/0
  2075 ;;		On exit  : 0/0
  2076 ;;		Unchanged: 0/0
  2077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2078 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2080 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2081 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2082 ;;Total ram usage:        5 bytes
  2083 ;; Hardware stack levels used: 1
  2084 ;; Hardware stack levels required when called: 3
  2085 ;; This function calls:
  2086 ;;		Nothing
  2087 ;; This function is called by:
  2088 ;;		_main
  2089 ;;		_parse_MRF_message
  2090 ;;		_MRF_parse_message
  2091 ;; This function uses a non-reentrant model
  2092 ;;
  2093                           
  2094                           	psect	text3
  2095   00394A                     __ptext3:
  2096                           	callstack 0
  2097   00394A                     _strcmp:
  2098                           	callstack 27
  2099   00394A  EFAB  F01C         	goto	l5526
  2100   00394E                     l5524:
  2101                           
  2102                           ; BSR set to: 0
  2103   00394E  4B60               	infsnz	strcmp@l& (0+255),f,b
  2104   003950  2B61               	incf	(strcmp@l+1)& (0+255),f,b
  2105   003952  4B62               	infsnz	strcmp@r& (0+255),f,b
  2106   003954  2B63               	incf	(strcmp@r+1)& (0+255),f,b
  2107   003956                     l5526:
  2108   003956  C060  FFD9         	movff	strcmp@l,fsr2l
  2109   00395A  C061  FFDA         	movff	strcmp@l+1,fsr2h
  2110   00395E  50DF               	movf	indf2,w,c
  2111   003960  0100               	movlb	0	; () banked
  2112   003962  6F64               	movwf	??_strcmp& (0+255),b
  2113   003964  C062  FFF6         	movff	strcmp@r,tblptrl
  2114   003968  C063  FFF7         	movff	strcmp@r+1,tblptrh
  2115   00396C                     	if	0	;tblptru may be non-zero
  2116   00396C                     	endif
  2117   00396C                     	if	0	;tblptru may be non-zero
  2118   00396C                     	endif
  2119   00396C  0008               	tblrd		*
  2120   00396E  50F5               	movf	tablat,w,c
  2121   003970  1964               	xorwf	??_strcmp& (0+255),w,b
  2122   003972  A4D8               	btfss	status,2,c
  2123   003974  EFBE  F01C         	goto	u6601
  2124   003978  EFC0  F01C         	goto	u6600
  2125   00397C                     u6601:
  2126   00397C  EFCC  F01C         	goto	l5530
  2127   003980                     u6600:
  2128   003980                     
  2129                           ; BSR set to: 0
  2130   003980  C060  FFD9         	movff	strcmp@l,fsr2l
  2131   003984  C061  FFDA         	movff	strcmp@l+1,fsr2h
  2132   003988  50DF               	movf	indf2,w,c
  2133   00398A  A4D8               	btfss	status,2,c
  2134   00398C  EFCA  F01C         	goto	u6611
  2135   003990  EFCC  F01C         	goto	u6610
  2136   003994                     u6611:
  2137   003994  EFA7  F01C         	goto	l5524
  2138   003998                     u6610:
  2139   003998                     l5530:
  2140                           
  2141                           ; BSR set to: 0
  2142   003998  C060  FFD9         	movff	strcmp@l,fsr2l
  2143   00399C  C061  FFDA         	movff	strcmp@l+1,fsr2h
  2144   0039A0  50DF               	movf	indf2,w,c
  2145   0039A2  6F64               	movwf	??_strcmp& (0+255),b
  2146   0039A4  C062  FFF6         	movff	strcmp@r,tblptrl
  2147   0039A8  C063  FFF7         	movff	strcmp@r+1,tblptrh
  2148   0039AC                     	if	0	;tblptru may be non-zero
  2149   0039AC                     	endif
  2150   0039AC                     	if	0	;tblptru may be non-zero
  2151   0039AC                     	endif
  2152   0039AC  0008               	tblrd		*
  2153   0039AE  50F5               	movf	tablat,w,c
  2154   0039B0  5D64               	subwf	??_strcmp& (0+255),w,b
  2155   0039B2  6F60               	movwf	?_strcmp& (0+255),b
  2156   0039B4  6B61               	clrf	(?_strcmp+1)& (0+255),b
  2157   0039B6  A0D8               	btfss	status,0,c
  2158   0039B8  0761               	decf	(?_strcmp+1)& (0+255),f,b
  2159   0039BA                     
  2160                           ; BSR set to: 0
  2161   0039BA  0012               	return		;funcret
  2162   0039BC                     __end_of_strcmp:
  2163                           	callstack 0
  2164                           
  2165 ;; *************** function _parse_usb_message *****************
  2166 ;; Defined at:
  2167 ;;		line 73 in file "MCP2221A.c"
  2168 ;; Parameters:    Size  Location     Type
  2169 ;;  message         2  127[BANK0 ] PTR unsigned char 
  2170 ;;		 -> usb_message(100), 
  2171 ;; Auto vars:     Size  Location     Type
  2172 ;;  response      100    0[BANK1 ] unsigned char [100]
  2173 ;;  temp_string    10  100[BANK1 ] unsigned char [10]
  2174 ;;  length          1    0        unsigned char 
  2175 ;;  param1_full     1    0        unsigned char 
  2176 ;;  counter         1    0        unsigned char 
  2177 ;; Return value:  Size  Location     Type
  2178 ;;                  1    wreg      void 
  2179 ;; Registers used:
  2180 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2181 ;; Tracked objects:
  2182 ;;		On entry : 0/0
  2183 ;;		On exit  : 0/0
  2184 ;;		Unchanged: 0/0
  2185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2186 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2187 ;;      Locals:         0       0     110       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2189 ;;      Totals:         0       2     110       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2190 ;;Total ram usage:      112 bytes
  2191 ;; Hardware stack levels used: 1
  2192 ;; Hardware stack levels required when called: 12
  2193 ;; This function calls:
  2194 ;;		_ftoa
  2195 ;;		_get_coords_usb
  2196 ;;		_itoa
  2197 ;;		_strcat
  2198 ;;		_strcpy
  2199 ;;		_strncmp
  2200 ;;		_transmit_string_usb
  2201 ;; This function is called by:
  2202 ;;		_main
  2203 ;; This function uses a non-reentrant model
  2204 ;;
  2205                           
  2206                           	psect	text4
  2207   001662                     __ptext4:
  2208                           	callstack 0
  2209   001662                     _parse_usb_message:
  2210                           	callstack 18
  2211   001662                     
  2212                           ;MCP2221A.c: 73: void parse_usb_message(char message[]);MCP2221A.c: 74: {;MCP2221A.c: 75
      +                          :     BYTE counter;;MCP2221A.c: 76:     BYTE param1_full;;MCP2221A.c: 77:     BYTE lengt
      +                          h;;MCP2221A.c: 78:     char response[100] = "";
  2213   001662  EE21  F08A         	lfsr	2,parse_usb_message@response
  2214   001666  0E63               	movlw	99
  2215   001668                     u6681:
  2216   001668  6ADE               	clrf	postinc2,c
  2217   00166A  06E8               	decf	wreg,f,c
  2218   00166C  E2FD               	bc	u6681
  2219                           
  2220                           ;MCP2221A.c: 79:     char temp_string[10] = "";
  2221   00166E  EE21  F0EE         	lfsr	2,parse_usb_message@temp_string
  2222   001672  0E09               	movlw	9
  2223   001674                     u6691:
  2224   001674  6ADE               	clrf	postinc2,c
  2225   001676  06E8               	decf	wreg,f,c
  2226   001678  E2FD               	bc	u6691
  2227   00167A                     
  2228                           ;MCP2221A.c: 81:     usb_message_received = 0;
  2229   00167A  0E00               	movlw	0
  2230   00167C  0100               	movlb	0	; () banked
  2231   00167E  6FFB               	movwf	_usb_message_received& (0+255),b
  2232   001680                     
  2233                           ; BSR set to: 0
  2234                           ;MCP2221A.c: 84:     if(!strncmp(usb_message, "REPORT", 6))
  2235   001680  0E6A               	movlw	low _usb_message
  2236   001682  6F60               	movwf	strncmp@_l& (0+255),b
  2237   001684  0E02               	movlw	high _usb_message
  2238   001686  6F61               	movwf	(strncmp@_l+1)& (0+255),b
  2239   001688  0EA2               	movlw	low STR_41
  2240   00168A  6F62               	movwf	strncmp@_r& (0+255),b
  2241   00168C  0EFF               	movlw	high STR_41
  2242   00168E  6F63               	movwf	(strncmp@_r+1)& (0+255),b
  2243   001690  0E00               	movlw	0
  2244   001692  6F65               	movwf	(strncmp@n+1)& (0+255),b
  2245   001694  0E06               	movlw	6
  2246   001696  6F64               	movwf	strncmp@n& (0+255),b
  2247   001698  EC83  F019         	call	_strncmp	;wreg free
  2248   00169C  0100               	movlb	0	; () banked
  2249   00169E  5160               	movf	?_strncmp& (0+255),w,b
  2250   0016A0  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  2251   0016A2  A4D8               	btfss	status,2,c
  2252   0016A4  EF56  F00B         	goto	u6701
  2253   0016A8  EF58  F00B         	goto	u6700
  2254   0016AC                     u6701:
  2255   0016AC  EF0A  F00C         	goto	l5600
  2256   0016B0                     u6700:
  2257   0016B0                     
  2258                           ; BSR set to: 0
  2259                           ;MCP2221A.c: 85:     {;MCP2221A.c: 87:         strcpy(response, "Report:");
  2260   0016B0  0E8A               	movlw	low parse_usb_message@response
  2261   0016B2  6F64               	movwf	strcpy@dest& (0+255),b
  2262   0016B4  0E01               	movlw	high parse_usb_message@response
  2263   0016B6  6F65               	movwf	(strcpy@dest+1)& (0+255),b
  2264   0016B8  0E84               	movlw	low STR_43
  2265   0016BA  6F66               	movwf	strcpy@src& (0+255),b
  2266   0016BC  0EFF               	movlw	high STR_43
  2267   0016BE  6F67               	movwf	(strcpy@src+1)& (0+255),b
  2268   0016C0  ECE2  F01D         	call	_strcpy	;wreg free
  2269                           
  2270                           ;MCP2221A.c: 88:         strcat(response, "Temperature = ");
  2271   0016C4  0E8A               	movlw	low parse_usb_message@response
  2272   0016C6  0100               	movlb	0	; () banked
  2273   0016C8  6F6E               	movwf	strcat@dest& (0+255),b
  2274   0016CA  0E01               	movlw	high parse_usb_message@response
  2275   0016CC  6F6F               	movwf	(strcat@dest+1)& (0+255),b
  2276   0016CE  0EFC               	movlw	low STR_44
  2277   0016D0  6F70               	movwf	strcat@src& (0+255),b
  2278   0016D2  0EFE               	movlw	high STR_44
  2279   0016D4  6F71               	movwf	(strcat@src+1)& (0+255),b
  2280   0016D6  EC15  F020         	call	_strcat	;wreg free
  2281   0016DA  0E00               	movlw	0
  2282   0016DC  0100               	movlb	0	; () banked
  2283   0016DE  6F6D               	movwf	(itoa@n+1)& (0+255),b
  2284   0016E0  0E46               	movlw	70
  2285   0016E2  6F6C               	movwf	itoa@n& (0+255),b
  2286   0016E4  0EEE               	movlw	low parse_usb_message@temp_string
  2287   0016E6  6F6E               	movwf	itoa@s& (0+255),b
  2288   0016E8  0E01               	movlw	high parse_usb_message@temp_string
  2289   0016EA  6F6F               	movwf	(itoa@s+1)& (0+255),b
  2290   0016EC  ECEF  F019         	call	_itoa	;wreg free
  2291   0016F0                     
  2292                           ;MCP2221A.c: 90:         strcat(response, temp_string);
  2293   0016F0  0E8A               	movlw	low parse_usb_message@response
  2294   0016F2  0100               	movlb	0	; () banked
  2295   0016F4  6F6E               	movwf	strcat@dest& (0+255),b
  2296   0016F6  0E01               	movlw	high parse_usb_message@response
  2297   0016F8  6F6F               	movwf	(strcat@dest+1)& (0+255),b
  2298   0016FA  0EEE               	movlw	low parse_usb_message@temp_string
  2299   0016FC  6F70               	movwf	strcat@src& (0+255),b
  2300   0016FE  0E01               	movlw	high parse_usb_message@temp_string
  2301   001700  6F71               	movwf	(strcat@src+1)& (0+255),b
  2302   001702  EC15  F020         	call	_strcat	;wreg free
  2303   001706                     
  2304                           ;MCP2221A.c: 91:         strcat(response, ", Humidity = ");
  2305   001706  0E8A               	movlw	low parse_usb_message@response
  2306   001708  0100               	movlb	0	; () banked
  2307   00170A  6F6E               	movwf	strcat@dest& (0+255),b
  2308   00170C  0E01               	movlw	high parse_usb_message@response
  2309   00170E  6F6F               	movwf	(strcat@dest+1)& (0+255),b
  2310   001710  0E0B               	movlw	low STR_45
  2311   001712  6F70               	movwf	strcat@src& (0+255),b
  2312   001714  0EFF               	movlw	high STR_45
  2313   001716  6F71               	movwf	(strcat@src+1)& (0+255),b
  2314   001718  EC15  F020         	call	_strcat	;wreg free
  2315   00171C  0E00               	movlw	0
  2316   00171E  0100               	movlb	0	; () banked
  2317   001720  6F6D               	movwf	(itoa@n+1)& (0+255),b
  2318   001722  0E14               	movlw	20
  2319   001724  6F6C               	movwf	itoa@n& (0+255),b
  2320   001726  0EEE               	movlw	low parse_usb_message@temp_string
  2321   001728  6F6E               	movwf	itoa@s& (0+255),b
  2322   00172A  0E01               	movlw	high parse_usb_message@temp_string
  2323   00172C  6F6F               	movwf	(itoa@s+1)& (0+255),b
  2324   00172E  ECEF  F019         	call	_itoa	;wreg free
  2325                           
  2326                           ;MCP2221A.c: 93:         strcat(response, temp_string);
  2327   001732  0E8A               	movlw	low parse_usb_message@response
  2328   001734  0100               	movlb	0	; () banked
  2329   001736  6F6E               	movwf	strcat@dest& (0+255),b
  2330   001738  0E01               	movlw	high parse_usb_message@response
  2331   00173A  6F6F               	movwf	(strcat@dest+1)& (0+255),b
  2332   00173C  0EEE               	movlw	low parse_usb_message@temp_string
  2333   00173E  6F70               	movwf	strcat@src& (0+255),b
  2334   001740  0E01               	movlw	high parse_usb_message@temp_string
  2335   001742  6F71               	movwf	(strcat@src+1)& (0+255),b
  2336   001744  EC15  F020         	call	_strcat	;wreg free
  2337                           
  2338                           ;MCP2221A.c: 94:         strcat(response, ", Current Location = (");
  2339   001748  0E8A               	movlw	low parse_usb_message@response
  2340   00174A  0100               	movlb	0	; () banked
  2341   00174C  6F6E               	movwf	strcat@dest& (0+255),b
  2342   00174E  0E01               	movlw	high parse_usb_message@response
  2343   001750  6F6F               	movwf	(strcat@dest+1)& (0+255),b
  2344   001752  0EE5               	movlw	low STR_46
  2345   001754  6F70               	movwf	strcat@src& (0+255),b
  2346   001756  0EFE               	movlw	high STR_46
  2347   001758  6F71               	movwf	(strcat@src+1)& (0+255),b
  2348   00175A  EC15  F020         	call	_strcat	;wreg free
  2349   00175E                     
  2350                           ;MCP2221A.c: 95:         ftoa (current_coords.longitude, temp_string, 5);
  2351   00175E  C126  F0CB         	movff	_current_coords,ftoa@num
  2352   001762  C127  F0CC         	movff	_current_coords+1,ftoa@num+1
  2353   001766  C128  F0CD         	movff	_current_coords+2,ftoa@num+2
  2354   00176A  C129  F0CE         	movff	_current_coords+3,ftoa@num+3
  2355   00176E  0EEE               	movlw	low parse_usb_message@temp_string
  2356   001770  0100               	movlb	0	; () banked
  2357   001772  6FCF               	movwf	ftoa@str& (0+255),b
  2358   001774  0E01               	movlw	high parse_usb_message@temp_string
  2359   001776  6FD0               	movwf	(ftoa@str+1)& (0+255),b
  2360   001778  0E00               	movlw	0
  2361   00177A  6FD2               	movwf	(ftoa@decimalPlaces+1)& (0+255),b
  2362   00177C  0E05               	movlw	5
  2363   00177E  6FD1               	movwf	ftoa@decimalPlaces& (0+255),b
  2364   001780  EC11  F015         	call	_ftoa	;wreg free
  2365   001784                     
  2366                           ;MCP2221A.c: 96:         strcat(response, temp_string);
  2367   001784  0E8A               	movlw	low parse_usb_message@response
  2368   001786  0100               	movlb	0	; () banked
  2369   001788  6F6E               	movwf	strcat@dest& (0+255),b
  2370   00178A  0E01               	movlw	high parse_usb_message@response
  2371   00178C  6F6F               	movwf	(strcat@dest+1)& (0+255),b
  2372   00178E  0EEE               	movlw	low parse_usb_message@temp_string
  2373   001790  6F70               	movwf	strcat@src& (0+255),b
  2374   001792  0E01               	movlw	high parse_usb_message@temp_string
  2375   001794  6F71               	movwf	(strcat@src+1)& (0+255),b
  2376   001796  EC15  F020         	call	_strcat	;wreg free
  2377   00179A                     
  2378                           ;MCP2221A.c: 97:         strcat(response, ", ");
  2379   00179A  0E8A               	movlw	low parse_usb_message@response
  2380   00179C  0100               	movlb	0	; () banked
  2381   00179E  6F6E               	movwf	strcat@dest& (0+255),b
  2382   0017A0  0E01               	movlw	high parse_usb_message@response
  2383   0017A2  6F6F               	movwf	(strcat@dest+1)& (0+255),b
  2384   0017A4  0EEE               	movlw	low STR_47
  2385   0017A6  6F70               	movwf	strcat@src& (0+255),b
  2386   0017A8  0EFF               	movlw	high STR_47
  2387   0017AA  6F71               	movwf	(strcat@src+1)& (0+255),b
  2388   0017AC  EC15  F020         	call	_strcat	;wreg free
  2389   0017B0                     
  2390                           ;MCP2221A.c: 98:         ftoa (current_coords.latitude, temp_string, 5);
  2391   0017B0  C12A  F0CB         	movff	_current_coords+4,ftoa@num
  2392   0017B4  C12B  F0CC         	movff	_current_coords+5,ftoa@num+1
  2393   0017B8  C12C  F0CD         	movff	_current_coords+6,ftoa@num+2
  2394   0017BC  C12D  F0CE         	movff	_current_coords+7,ftoa@num+3
  2395   0017C0  0EEE               	movlw	low parse_usb_message@temp_string
  2396   0017C2  0100               	movlb	0	; () banked
  2397   0017C4  6FCF               	movwf	ftoa@str& (0+255),b
  2398   0017C6  0E01               	movlw	high parse_usb_message@temp_string
  2399   0017C8  6FD0               	movwf	(ftoa@str+1)& (0+255),b
  2400   0017CA  0E00               	movlw	0
  2401   0017CC  6FD2               	movwf	(ftoa@decimalPlaces+1)& (0+255),b
  2402   0017CE  0E05               	movlw	5
  2403   0017D0  6FD1               	movwf	ftoa@decimalPlaces& (0+255),b
  2404   0017D2  EC11  F015         	call	_ftoa	;wreg free
  2405                           
  2406                           ;MCP2221A.c: 99:         strcat(response, temp_string);
  2407   0017D6  0E8A               	movlw	low parse_usb_message@response
  2408   0017D8  0100               	movlb	0	; () banked
  2409   0017DA  6F6E               	movwf	strcat@dest& (0+255),b
  2410   0017DC  0E01               	movlw	high parse_usb_message@response
  2411   0017DE  6F6F               	movwf	(strcat@dest+1)& (0+255),b
  2412   0017E0  0EEE               	movlw	low parse_usb_message@temp_string
  2413   0017E2  6F70               	movwf	strcat@src& (0+255),b
  2414   0017E4  0E01               	movlw	high parse_usb_message@temp_string
  2415   0017E6  6F71               	movwf	(strcat@src+1)& (0+255),b
  2416   0017E8  EC15  F020         	call	_strcat	;wreg free
  2417                           
  2418                           ;MCP2221A.c: 100:         strcat(response, ")");
  2419   0017EC  0E8A               	movlw	low parse_usb_message@response
  2420   0017EE  0100               	movlb	0	; () banked
  2421   0017F0  6F6E               	movwf	strcat@dest& (0+255),b
  2422   0017F2  0E01               	movlw	high parse_usb_message@response
  2423   0017F4  6F6F               	movwf	(strcat@dest+1)& (0+255),b
  2424   0017F6  0EF7               	movlw	low STR_48
  2425   0017F8  6F70               	movwf	strcat@src& (0+255),b
  2426   0017FA  0EFF               	movlw	high STR_48
  2427   0017FC  6F71               	movwf	(strcat@src+1)& (0+255),b
  2428   0017FE  EC15  F020         	call	_strcat	;wreg free
  2429                           
  2430                           ;MCP2221A.c: 101:         transmit_string_usb(response);
  2431   001802  0E8A               	movlw	low parse_usb_message@response
  2432   001804  0100               	movlb	0	; () banked
  2433   001806  6F64               	movwf	transmit_string_usb@message& (0+255),b
  2434   001808  0E01               	movlw	high parse_usb_message@response
  2435   00180A  6F65               	movwf	(transmit_string_usb@message+1)& (0+255),b
  2436   00180C  EC4C  F01D         	call	_transmit_string_usb	;wreg free
  2437                           
  2438                           ;MCP2221A.c: 102:     }
  2439   001810  EF52  F00D         	goto	l558
  2440   001814                     l5600:
  2441                           
  2442                           ; BSR set to: 0
  2443   001814  0E6A               	movlw	low _usb_message
  2444   001816  6F60               	movwf	strncmp@_l& (0+255),b
  2445   001818  0E02               	movlw	high _usb_message
  2446   00181A  6F61               	movwf	(strncmp@_l+1)& (0+255),b
  2447   00181C  0E25               	movlw	low STR_49
  2448   00181E  6F62               	movwf	strncmp@_r& (0+255),b
  2449   001820  0EFF               	movlw	high STR_49
  2450   001822  6F63               	movwf	(strncmp@_r+1)& (0+255),b
  2451   001824  0E00               	movlw	0
  2452   001826  6F65               	movwf	(strncmp@n+1)& (0+255),b
  2453   001828  0E0A               	movlw	10
  2454   00182A  6F64               	movwf	strncmp@n& (0+255),b
  2455   00182C  EC83  F019         	call	_strncmp	;wreg free
  2456   001830  0100               	movlb	0	; () banked
  2457   001832  5160               	movf	?_strncmp& (0+255),w,b
  2458   001834  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  2459   001836  A4D8               	btfss	status,2,c
  2460   001838  EF20  F00C         	goto	u6711
  2461   00183C  EF22  F00C         	goto	u6710
  2462   001840                     u6711:
  2463   001840  EF24  F00C         	goto	l5604
  2464   001844                     u6710:
  2465   001844  EF52  F00D         	goto	l558
  2466   001848                     l5604:
  2467                           
  2468                           ; BSR set to: 0
  2469   001848  0E6A               	movlw	low _usb_message
  2470   00184A  6F60               	movwf	strncmp@_l& (0+255),b
  2471   00184C  0E02               	movlw	high _usb_message
  2472   00184E  6F61               	movwf	(strncmp@_l+1)& (0+255),b
  2473   001850  0E60               	movlw	low STR_51
  2474   001852  6F62               	movwf	strncmp@_r& (0+255),b
  2475   001854  0EFF               	movlw	high STR_51
  2476   001856  6F63               	movwf	(strncmp@_r+1)& (0+255),b
  2477   001858  0E00               	movlw	0
  2478   00185A  6F65               	movwf	(strncmp@n+1)& (0+255),b
  2479   00185C  0E08               	movlw	8
  2480   00185E  6F64               	movwf	strncmp@n& (0+255),b
  2481   001860  EC83  F019         	call	_strncmp	;wreg free
  2482   001864  0100               	movlb	0	; () banked
  2483   001866  5160               	movf	?_strncmp& (0+255),w,b
  2484   001868  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  2485   00186A  A4D8               	btfss	status,2,c
  2486   00186C  EF3A  F00C         	goto	u6721
  2487   001870  EF3C  F00C         	goto	u6720
  2488   001874                     u6721:
  2489   001874  EF47  F00C         	goto	l5608
  2490   001878                     u6720:
  2491   001878                     
  2492                           ; BSR set to: 0
  2493                           ;MCP2221A.c: 108:     {;MCP2221A.c: 110:         home = current_coords;
  2494   001878  EE21  F026         	lfsr	2,_current_coords
  2495   00187C  EE11  F046         	lfsr	1,_home
  2496   001880  0E07               	movlw	7
  2497   001882                     u6731:
  2498   001882  CFDB FFE3          	movff	plusw2,plusw1
  2499   001886  06E8               	decf	wreg,f,c
  2500   001888  E2FC               	bc	u6731
  2501                           
  2502                           ;MCP2221A.c: 111:     }
  2503   00188A  EF52  F00D         	goto	l558
  2504   00188E                     l5608:
  2505                           
  2506                           ; BSR set to: 0
  2507   00188E  0E6A               	movlw	low _usb_message
  2508   001890  6F60               	movwf	strncmp@_l& (0+255),b
  2509   001892  0E02               	movlw	high _usb_message
  2510   001894  6F61               	movwf	(strncmp@_l+1)& (0+255),b
  2511   001896  0E9B               	movlw	low STR_53
  2512   001898  6F62               	movwf	strncmp@_r& (0+255),b
  2513   00189A  0EFF               	movlw	high STR_53
  2514   00189C  6F63               	movwf	(strncmp@_r+1)& (0+255),b
  2515   00189E  0E00               	movlw	0
  2516   0018A0  6F65               	movwf	(strncmp@n+1)& (0+255),b
  2517   0018A2  0E06               	movlw	6
  2518   0018A4  6F64               	movwf	strncmp@n& (0+255),b
  2519   0018A6  EC83  F019         	call	_strncmp	;wreg free
  2520   0018AA  0100               	movlb	0	; () banked
  2521   0018AC  5160               	movf	?_strncmp& (0+255),w,b
  2522   0018AE  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  2523   0018B0  A4D8               	btfss	status,2,c
  2524   0018B2  EF5D  F00C         	goto	u6741
  2525   0018B6  EF5F  F00C         	goto	u6740
  2526   0018BA                     u6741:
  2527   0018BA  EF6A  F00C         	goto	l5612
  2528   0018BE                     u6740:
  2529   0018BE                     
  2530                           ; BSR set to: 0
  2531                           ;MCP2221A.c: 113:     {;MCP2221A.c: 115:         destination = home;
  2532   0018BE  EE21  F046         	lfsr	2,_home
  2533   0018C2  EE11  F02E         	lfsr	1,_destination
  2534   0018C6  0E07               	movlw	7
  2535   0018C8                     u6751:
  2536   0018C8  CFDB FFE3          	movff	plusw2,plusw1
  2537   0018CC  06E8               	decf	wreg,f,c
  2538   0018CE  E2FC               	bc	u6751
  2539                           
  2540                           ;MCP2221A.c: 116:     }
  2541   0018D0  EF52  F00D         	goto	l558
  2542   0018D4                     l5612:
  2543                           
  2544                           ; BSR set to: 0
  2545   0018D4  0E6A               	movlw	low _usb_message
  2546   0018D6  6F60               	movwf	strncmp@_l& (0+255),b
  2547   0018D8  0E02               	movlw	high _usb_message
  2548   0018DA  6F61               	movwf	(strncmp@_l+1)& (0+255),b
  2549   0018DC  0E30               	movlw	low STR_55
  2550   0018DE  6F62               	movwf	strncmp@_r& (0+255),b
  2551   0018E0  0EFF               	movlw	high STR_55
  2552   0018E2  6F63               	movwf	(strncmp@_r+1)& (0+255),b
  2553   0018E4  0E00               	movlw	0
  2554   0018E6  6F65               	movwf	(strncmp@n+1)& (0+255),b
  2555   0018E8  0E09               	movlw	9
  2556   0018EA  6F64               	movwf	strncmp@n& (0+255),b
  2557   0018EC  EC83  F019         	call	_strncmp	;wreg free
  2558   0018F0  0100               	movlb	0	; () banked
  2559   0018F2  5160               	movf	?_strncmp& (0+255),w,b
  2560   0018F4  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  2561   0018F6  A4D8               	btfss	status,2,c
  2562   0018F8  EF80  F00C         	goto	u6761
  2563   0018FC  EF82  F00C         	goto	u6760
  2564   001900                     u6761:
  2565   001900  EF8D  F00C         	goto	l5616
  2566   001904                     u6760:
  2567   001904                     
  2568                           ; BSR set to: 0
  2569                           ;MCP2221A.c: 118:     {;MCP2221A.c: 120:         waypoint1 = get_coords_usb();
  2570   001904  EC78  F012         	call	_get_coords_usb	;wreg free
  2571   001908  EE20  F046         	lfsr	2,_waypoint1
  2572   00190C  0E07               	movlw	7
  2573   00190E                     u6771:
  2574   00190E  CFEB FFDB          	movff	plusw0,plusw2
  2575   001912  06E8               	decf	wreg,f,c
  2576   001914  E2FC               	bc	u6771
  2577                           
  2578                           ;MCP2221A.c: 121:     }
  2579   001916  EF52  F00D         	goto	l558
  2580   00191A                     l5616:
  2581                           
  2582                           ; BSR set to: 0
  2583   00191A  0E6A               	movlw	low _usb_message
  2584   00191C  6F60               	movwf	strncmp@_l& (0+255),b
  2585   00191E  0E02               	movlw	high _usb_message
  2586   001920  6F61               	movwf	(strncmp@_l+1)& (0+255),b
  2587   001922  0E3A               	movlw	low STR_57
  2588   001924  6F62               	movwf	strncmp@_r& (0+255),b
  2589   001926  0EFF               	movlw	high STR_57
  2590   001928  6F63               	movwf	(strncmp@_r+1)& (0+255),b
  2591   00192A  0E00               	movlw	0
  2592   00192C  6F65               	movwf	(strncmp@n+1)& (0+255),b
  2593   00192E  0E09               	movlw	9
  2594   001930  6F64               	movwf	strncmp@n& (0+255),b
  2595   001932  EC83  F019         	call	_strncmp	;wreg free
  2596   001936  0100               	movlb	0	; () banked
  2597   001938  5160               	movf	?_strncmp& (0+255),w,b
  2598   00193A  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  2599   00193C  A4D8               	btfss	status,2,c
  2600   00193E  EFA3  F00C         	goto	u6781
  2601   001942  EFA5  F00C         	goto	u6780
  2602   001946                     u6781:
  2603   001946  EFB0  F00C         	goto	l5620
  2604   00194A                     u6780:
  2605   00194A                     
  2606                           ; BSR set to: 0
  2607                           ;MCP2221A.c: 123:     {;MCP2221A.c: 125:         waypoint2 = get_coords_usb();
  2608   00194A  EC78  F012         	call	_get_coords_usb	;wreg free
  2609   00194E  EE21  F03E         	lfsr	2,_waypoint2
  2610   001952  0E07               	movlw	7
  2611   001954                     u6791:
  2612   001954  CFEB FFDB          	movff	plusw0,plusw2
  2613   001958  06E8               	decf	wreg,f,c
  2614   00195A  E2FC               	bc	u6791
  2615                           
  2616                           ;MCP2221A.c: 126:     }
  2617   00195C  EF52  F00D         	goto	l558
  2618   001960                     l5620:
  2619                           
  2620                           ; BSR set to: 0
  2621   001960  0E6A               	movlw	low _usb_message
  2622   001962  6F60               	movwf	strncmp@_l& (0+255),b
  2623   001964  0E02               	movlw	high _usb_message
  2624   001966  6F61               	movwf	(strncmp@_l+1)& (0+255),b
  2625   001968  0E44               	movlw	low STR_59
  2626   00196A  6F62               	movwf	strncmp@_r& (0+255),b
  2627   00196C  0EFF               	movlw	high STR_59
  2628   00196E  6F63               	movwf	(strncmp@_r+1)& (0+255),b
  2629   001970  0E00               	movlw	0
  2630   001972  6F65               	movwf	(strncmp@n+1)& (0+255),b
  2631   001974  0E09               	movlw	9
  2632   001976  6F64               	movwf	strncmp@n& (0+255),b
  2633   001978  EC83  F019         	call	_strncmp	;wreg free
  2634   00197C  0100               	movlb	0	; () banked
  2635   00197E  5160               	movf	?_strncmp& (0+255),w,b
  2636   001980  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  2637   001982  A4D8               	btfss	status,2,c
  2638   001984  EFC6  F00C         	goto	u6801
  2639   001988  EFC8  F00C         	goto	u6800
  2640   00198C                     u6801:
  2641   00198C  EFD3  F00C         	goto	l5624
  2642   001990                     u6800:
  2643   001990                     
  2644                           ; BSR set to: 0
  2645                           ;MCP2221A.c: 128:     {;MCP2221A.c: 130:         waypoint3 = get_coords_usb();
  2646   001990  EC78  F012         	call	_get_coords_usb	;wreg free
  2647   001994  EE21  F036         	lfsr	2,_waypoint3
  2648   001998  0E07               	movlw	7
  2649   00199A                     u6811:
  2650   00199A  CFEB FFDB          	movff	plusw0,plusw2
  2651   00199E  06E8               	decf	wreg,f,c
  2652   0019A0  E2FC               	bc	u6811
  2653                           
  2654                           ;MCP2221A.c: 131:     }
  2655   0019A2  EF52  F00D         	goto	l558
  2656   0019A6                     l5624:
  2657                           
  2658                           ; BSR set to: 0
  2659   0019A6  0E6A               	movlw	low _usb_message
  2660   0019A8  6F60               	movwf	strncmp@_l& (0+255),b
  2661   0019AA  0E02               	movlw	high _usb_message
  2662   0019AC  6F61               	movwf	(strncmp@_l+1)& (0+255),b
  2663   0019AE  0E19               	movlw	low STR_61
  2664   0019B0  6F62               	movwf	strncmp@_r& (0+255),b
  2665   0019B2  0EFF               	movlw	high STR_61
  2666   0019B4  6F63               	movwf	(strncmp@_r+1)& (0+255),b
  2667   0019B6  0E00               	movlw	0
  2668   0019B8  6F65               	movwf	(strncmp@n+1)& (0+255),b
  2669   0019BA  0E0B               	movlw	11
  2670   0019BC  6F64               	movwf	strncmp@n& (0+255),b
  2671   0019BE  EC83  F019         	call	_strncmp	;wreg free
  2672   0019C2  0100               	movlb	0	; () banked
  2673   0019C4  5160               	movf	?_strncmp& (0+255),w,b
  2674   0019C6  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  2675   0019C8  A4D8               	btfss	status,2,c
  2676   0019CA  EFE9  F00C         	goto	u6821
  2677   0019CE  EFEB  F00C         	goto	u6820
  2678   0019D2                     u6821:
  2679   0019D2  EFF6  F00C         	goto	l5628
  2680   0019D6                     u6820:
  2681   0019D6                     
  2682                           ; BSR set to: 0
  2683                           ;MCP2221A.c: 133:     {;MCP2221A.c: 135:         destination = get_coords_usb();
  2684   0019D6  EC78  F012         	call	_get_coords_usb	;wreg free
  2685   0019DA  EE21  F02E         	lfsr	2,_destination
  2686   0019DE  0E07               	movlw	7
  2687   0019E0                     u6831:
  2688   0019E0  CFEB FFDB          	movff	plusw0,plusw2
  2689   0019E4  06E8               	decf	wreg,f,c
  2690   0019E6  E2FC               	bc	u6831
  2691                           
  2692                           ;MCP2221A.c: 136:     }
  2693   0019E8  EF52  F00D         	goto	l558
  2694   0019EC                     l5628:
  2695                           
  2696                           ; BSR set to: 0
  2697   0019EC  0E6A               	movlw	low _usb_message
  2698   0019EE  6F60               	movwf	strncmp@_l& (0+255),b
  2699   0019F0  0E02               	movlw	high _usb_message
  2700   0019F2  6F61               	movwf	(strncmp@_l+1)& (0+255),b
  2701   0019F4  0EBE               	movlw	low STR_63
  2702   0019F6  6F62               	movwf	strncmp@_r& (0+255),b
  2703   0019F8  0EFF               	movlw	high STR_63
  2704   0019FA  6F63               	movwf	(strncmp@_r+1)& (0+255),b
  2705   0019FC  0E00               	movlw	0
  2706   0019FE  6F65               	movwf	(strncmp@n+1)& (0+255),b
  2707   001A00  0E05               	movlw	5
  2708   001A02  6F64               	movwf	strncmp@n& (0+255),b
  2709   001A04  EC83  F019         	call	_strncmp	;wreg free
  2710   001A08  0100               	movlb	0	; () banked
  2711   001A0A  5160               	movf	?_strncmp& (0+255),w,b
  2712   001A0C  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  2713   001A0E  A4D8               	btfss	status,2,c
  2714   001A10  EF0C  F00D         	goto	u6841
  2715   001A14  EF0E  F00D         	goto	u6840
  2716   001A18                     u6841:
  2717   001A18  EF10  F00D         	goto	l5632
  2718   001A1C                     u6840:
  2719   001A1C  EF52  F00D         	goto	l558
  2720   001A20                     l5632:
  2721                           
  2722                           ; BSR set to: 0
  2723   001A20  0E6A               	movlw	low _usb_message
  2724   001A22  6F60               	movwf	strncmp@_l& (0+255),b
  2725   001A24  0E02               	movlw	high _usb_message
  2726   001A26  6F61               	movwf	(strncmp@_l+1)& (0+255),b
  2727   001A28  0EC9               	movlw	low STR_65
  2728   001A2A  6F62               	movwf	strncmp@_r& (0+255),b
  2729   001A2C  0EFF               	movlw	high STR_65
  2730   001A2E  6F63               	movwf	(strncmp@_r+1)& (0+255),b
  2731   001A30  0E00               	movlw	0
  2732   001A32  6F65               	movwf	(strncmp@n+1)& (0+255),b
  2733   001A34  0E04               	movlw	4
  2734   001A36  6F64               	movwf	strncmp@n& (0+255),b
  2735   001A38  EC83  F019         	call	_strncmp	;wreg free
  2736   001A3C  0100               	movlb	0	; () banked
  2737   001A3E  5160               	movf	?_strncmp& (0+255),w,b
  2738   001A40  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  2739   001A42  A4D8               	btfss	status,2,c
  2740   001A44  EF26  F00D         	goto	u6851
  2741   001A48  EF28  F00D         	goto	u6850
  2742   001A4C                     u6851:
  2743   001A4C  EF2A  F00D         	goto	l5636
  2744   001A50                     u6850:
  2745   001A50  EF52  F00D         	goto	l558
  2746   001A54                     l5636:
  2747                           
  2748                           ; BSR set to: 0
  2749   001A54  0E6A               	movlw	low _usb_message
  2750   001A56  6F60               	movwf	strncmp@_l& (0+255),b
  2751   001A58  0E02               	movlw	high _usb_message
  2752   001A5A  6F61               	movwf	(strncmp@_l+1)& (0+255),b
  2753   001A5C  0EC4               	movlw	low STR_67
  2754   001A5E  6F62               	movwf	strncmp@_r& (0+255),b
  2755   001A60  0EFF               	movlw	high STR_67
  2756   001A62  6F63               	movwf	(strncmp@_r+1)& (0+255),b
  2757   001A64  0E00               	movlw	0
  2758   001A66  6F65               	movwf	(strncmp@n+1)& (0+255),b
  2759   001A68  0E04               	movlw	4
  2760   001A6A  6F64               	movwf	strncmp@n& (0+255),b
  2761   001A6C  EC83  F019         	call	_strncmp	;wreg free
  2762   001A70  0100               	movlb	0	; () banked
  2763   001A72  5160               	movf	?_strncmp& (0+255),w,b
  2764   001A74  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  2765   001A76  A4D8               	btfss	status,2,c
  2766   001A78  EF40  F00D         	goto	u6861
  2767   001A7C  EF42  F00D         	goto	u6860
  2768   001A80                     u6861:
  2769   001A80  EF44  F00D         	goto	l5640
  2770   001A84                     u6860:
  2771   001A84  EF52  F00D         	goto	l558
  2772   001A88                     l5640:
  2773                           
  2774                           ; BSR set to: 0
  2775   001A88  0E6A               	movlw	low _usb_message
  2776   001A8A  6F60               	movwf	strncmp@_l& (0+255),b
  2777   001A8C  0E02               	movlw	high _usb_message
  2778   001A8E  6F61               	movwf	(strncmp@_l+1)& (0+255),b
  2779   001A90  0E94               	movlw	low STR_69
  2780   001A92  6F62               	movwf	strncmp@_r& (0+255),b
  2781   001A94  0EFF               	movlw	high STR_69
  2782   001A96  6F63               	movwf	(strncmp@_r+1)& (0+255),b
  2783   001A98  0E00               	movlw	0
  2784   001A9A  6F65               	movwf	(strncmp@n+1)& (0+255),b
  2785   001A9C  0E06               	movlw	6
  2786   001A9E  6F64               	movwf	strncmp@n& (0+255),b
  2787   001AA0  EC83  F019         	call	_strncmp	;wreg free
  2788   001AA4                     l558:
  2789   001AA4  0012               	return		;funcret
  2790   001AA6                     __end_of_parse_usb_message:
  2791                           	callstack 0
  2792                           
  2793 ;; *************** function _transmit_string_usb *****************
  2794 ;; Defined at:
  2795 ;;		line 55 in file "MCP2221A.c"
  2796 ;; Parameters:    Size  Location     Type
  2797 ;;  message         2    4[BANK0 ] PTR unsigned char 
  2798 ;;		 -> parse_usb_message@response(100), usb_message(100), 
  2799 ;; Auto vars:     Size  Location     Type
  2800 ;;  counter         2    6[BANK0 ] int 
  2801 ;; Return value:  Size  Location     Type
  2802 ;;                  1    wreg      void 
  2803 ;; Registers used:
  2804 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2805 ;; Tracked objects:
  2806 ;;		On entry : 0/0
  2807 ;;		On exit  : 0/0
  2808 ;;		Unchanged: 0/0
  2809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2810 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2811 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2813 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2814 ;;Total ram usage:        4 bytes
  2815 ;; Hardware stack levels used: 1
  2816 ;; Hardware stack levels required when called: 4
  2817 ;; This function calls:
  2818 ;;		_strlen
  2819 ;;		_transmit_byte_usb
  2820 ;; This function is called by:
  2821 ;;		_main
  2822 ;;		_parse_usb_message
  2823 ;; This function uses a non-reentrant model
  2824 ;;
  2825                           
  2826                           	psect	text5
  2827   003A98                     __ptext5:
  2828                           	callstack 0
  2829   003A98                     _transmit_string_usb:
  2830                           	callstack 26
  2831   003A98                     
  2832                           ;MCP2221A.c: 55: void transmit_string_usb(char message[]);MCP2221A.c: 56: {;MCP2221A.c: 
      +                          57:     int counter;;MCP2221A.c: 58:     transmit_byte_usb('\n');
  2833   003A98  0E0A               	movlw	10
  2834   003A9A  ECAA  F020         	call	_transmit_byte_usb
  2835   003A9E                     
  2836                           ;MCP2221A.c: 59:     for(counter = 0; counter <= strlen(message); counter++)
  2837   003A9E  0E00               	movlw	0
  2838   003AA0  0100               	movlb	0	; () banked
  2839   003AA2  6F67               	movwf	(transmit_string_usb@counter+1)& (0+255),b
  2840   003AA4  0E00               	movlw	0
  2841   003AA6  6F66               	movwf	transmit_string_usb@counter& (0+255),b
  2842   003AA8  EF6A  F01D         	goto	l5318
  2843   003AAC                     l523:
  2844   003AAC  A8A4               	btfss	164,4,c	;volatile
  2845   003AAE  EF5B  F01D         	goto	u6321
  2846   003AB2  EF5D  F01D         	goto	u6320
  2847   003AB6                     u6321:
  2848   003AB6  EF56  F01D         	goto	l523
  2849   003ABA                     u6320:
  2850   003ABA                     
  2851                           ;MCP2221A.c: 62:         transmit_byte_usb(message[counter]);
  2852   003ABA  0100               	movlb	0	; () banked
  2853   003ABC  5166               	movf	transmit_string_usb@counter& (0+255),w,b
  2854   003ABE  2564               	addwf	transmit_string_usb@message& (0+255),w,b
  2855   003AC0  6ED9               	movwf	fsr2l,c
  2856   003AC2  5167               	movf	(transmit_string_usb@counter+1)& (0+255),w,b
  2857   003AC4  2165               	addwfc	(transmit_string_usb@message+1)& (0+255),w,b
  2858   003AC6  6EDA               	movwf	fsr2h,c
  2859   003AC8  50DF               	movf	indf2,w,c
  2860   003ACA  ECAA  F020         	call	_transmit_byte_usb
  2861   003ACE                     
  2862                           ;MCP2221A.c: 63:     }
  2863   003ACE  0100               	movlb	0	; () banked
  2864   003AD0  4B66               	infsnz	transmit_string_usb@counter& (0+255),f,b
  2865   003AD2  2B67               	incf	(transmit_string_usb@counter+1)& (0+255),f,b
  2866   003AD4                     l5318:
  2867                           
  2868                           ; BSR set to: 0
  2869   003AD4  C064  F060         	movff	transmit_string_usb@message,strlen@s
  2870   003AD8  C065  F061         	movff	transmit_string_usb@message+1,strlen@s+1
  2871   003ADC  EC41  F01E         	call	_strlen	;wreg free
  2872   003AE0  0100               	movlb	0	; () banked
  2873   003AE2  5166               	movf	transmit_string_usb@counter& (0+255),w,b
  2874   003AE4  5D60               	subwf	?_strlen& (0+255),w,b
  2875   003AE6  5167               	movf	(transmit_string_usb@counter+1)& (0+255),w,b
  2876   003AE8  5961               	subwfb	(?_strlen+1)& (0+255),w,b
  2877   003AEA  B0D8               	btfsc	status,0,c
  2878   003AEC  EF7A  F01D         	goto	u6331
  2879   003AF0  EF7C  F01D         	goto	u6330
  2880   003AF4                     u6331:
  2881   003AF4  EF56  F01D         	goto	l523
  2882   003AF8                     u6330:
  2883   003AF8                     
  2884                           ; BSR set to: 0
  2885                           ;MCP2221A.c: 64:     transmit_byte_usb('\n');
  2886   003AF8  0E0A               	movlw	10
  2887   003AFA  ECAA  F020         	call	_transmit_byte_usb
  2888   003AFE  0012               	return		;funcret
  2889   003B00                     __end_of_transmit_string_usb:
  2890                           	callstack 0
  2891                           
  2892 ;; *************** function _transmit_byte_usb *****************
  2893 ;; Defined at:
  2894 ;;		line 46 in file "MCP2221A.c"
  2895 ;; Parameters:    Size  Location     Type
  2896 ;;  message         1    wreg     unsigned char 
  2897 ;; Auto vars:     Size  Location     Type
  2898 ;;  message         1    0[BANK0 ] unsigned char 
  2899 ;; Return value:  Size  Location     Type
  2900 ;;                  1    wreg      void 
  2901 ;; Registers used:
  2902 ;;		wreg
  2903 ;; Tracked objects:
  2904 ;;		On entry : 0/0
  2905 ;;		On exit  : 0/0
  2906 ;;		Unchanged: 0/0
  2907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2909 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2911 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2912 ;;Total ram usage:        1 bytes
  2913 ;; Hardware stack levels used: 1
  2914 ;; Hardware stack levels required when called: 3
  2915 ;; This function calls:
  2916 ;;		Nothing
  2917 ;; This function is called by:
  2918 ;;		_transmit_string_usb
  2919 ;; This function uses a non-reentrant model
  2920 ;;
  2921                           
  2922                           	psect	text6
  2923   004154                     __ptext6:
  2924                           	callstack 0
  2925   004154                     _transmit_byte_usb:
  2926                           	callstack 26
  2927                           
  2928                           ;incstack = 0
  2929                           ;transmit_byte_usb@message stored from wreg
  2930   004154  0100               	movlb	0	; () banked
  2931   004156  6F60               	movwf	transmit_byte_usb@message& (0+255),b
  2932   004158                     
  2933                           ;MCP2221A.c: 46: void transmit_byte_usb(BYTE message);MCP2221A.c: 47: {;MCP2221A.c: 48: 
      +                              TXREG2 = message;
  2934   004158  C060  FF73         	movff	transmit_byte_usb@message,3955	;volatile
  2935   00415C  0012               	return		;funcret
  2936   00415E                     __end_of_transmit_byte_usb:
  2937                           	callstack 0
  2938                           
  2939 ;; *************** function _strncmp *****************
  2940 ;; Defined at:
  2941 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strncmp.c"
  2942 ;; Parameters:    Size  Location     Type
  2943 ;;  _l              2    0[BANK0 ] PTR const unsigned char 
  2944 ;;		 -> usb_message(100), 
  2945 ;;  _r              2    2[BANK0 ] PTR const unsigned char 
  2946 ;;		 -> STR_70(7), STR_68(5), STR_66(5), STR_64(6), 
  2947 ;;		 -> STR_62(12), STR_60(10), STR_58(10), STR_56(10), 
  2948 ;;		 -> STR_54(7), STR_52(9), STR_50(11), STR_42(7), 
  2949 ;;  n               2    4[BANK0 ] unsigned int 
  2950 ;; Auto vars:     Size  Location     Type
  2951 ;;  r               2    9[BANK0 ] PTR const unsigned char 
  2952 ;;		 -> STR_70(7), STR_68(5), STR_66(5), STR_64(6), 
  2953 ;;		 -> STR_62(12), STR_60(10), STR_58(10), STR_56(10), 
  2954 ;;		 -> STR_54(7), STR_52(9), STR_50(11), STR_42(7), 
  2955 ;;  l               2    7[BANK0 ] PTR const unsigned char 
  2956 ;;		 -> usb_message(100), 
  2957 ;; Return value:  Size  Location     Type
  2958 ;;                  2    0[BANK0 ] int 
  2959 ;; Registers used:
  2960 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2961 ;; Tracked objects:
  2962 ;;		On entry : 0/0
  2963 ;;		On exit  : 0/0
  2964 ;;		Unchanged: 0/0
  2965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2966 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2967 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2968 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2969 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2970 ;;Total ram usage:       11 bytes
  2971 ;; Hardware stack levels used: 1
  2972 ;; Hardware stack levels required when called: 3
  2973 ;; This function calls:
  2974 ;;		Nothing
  2975 ;; This function is called by:
  2976 ;;		_parse_usb_message
  2977 ;; This function uses a non-reentrant model
  2978 ;;
  2979                           
  2980                           	psect	text7
  2981   003306                     __ptext7:
  2982                           	callstack 0
  2983   003306                     _strncmp:
  2984                           	callstack 26
  2985   003306  C060  F067         	movff	strncmp@_l,strncmp@l
  2986   00330A  C061  F068         	movff	strncmp@_l+1,strncmp@l+1
  2987   00330E  C062  F069         	movff	strncmp@_r,strncmp@r
  2988   003312  C063  F06A         	movff	strncmp@_r+1,strncmp@r+1
  2989   003316  0100               	movlb	0	; () banked
  2990   003318  0764               	decf	strncmp@n& (0+255),f,b
  2991   00331A  A0D8               	btfss	status,0,c
  2992   00331C  0765               	decf	(strncmp@n+1)& (0+255),f,b
  2993   00331E  2964               	incf	strncmp@n& (0+255),w,b
  2994   003320  E106               	bnz	u6421
  2995   003322  2965               	incf	(strncmp@n+1)& (0+255),w,b
  2996   003324  A4D8               	btfss	status,2,c
  2997   003326  EF97  F019         	goto	u6421
  2998   00332A  EF99  F019         	goto	u6420
  2999   00332E                     u6421:
  3000   00332E  EFA6  F019         	goto	l5406
  3001   003332                     u6420:
  3002   003332                     
  3003                           ; BSR set to: 0
  3004   003332  0E00               	movlw	0
  3005   003334  6F61               	movwf	(?_strncmp+1)& (0+255),b
  3006   003336  0E00               	movlw	0
  3007   003338  6F60               	movwf	?_strncmp& (0+255),b
  3008   00333A  EFEE  F019         	goto	l1449
  3009   00333E                     l5404:
  3010                           
  3011                           ; BSR set to: 0
  3012   00333E  4B67               	infsnz	strncmp@l& (0+255),f,b
  3013   003340  2B68               	incf	(strncmp@l+1)& (0+255),f,b
  3014   003342  4B69               	infsnz	strncmp@r& (0+255),f,b
  3015   003344  2B6A               	incf	(strncmp@r+1)& (0+255),f,b
  3016   003346  0764               	decf	strncmp@n& (0+255),f,b
  3017   003348  A0D8               	btfss	status,0,c
  3018   00334A  0765               	decf	(strncmp@n+1)& (0+255),f,b
  3019   00334C                     l5406:
  3020                           
  3021                           ; BSR set to: 0
  3022   00334C  C067  FFD9         	movff	strncmp@l,fsr2l
  3023   003350  C068  FFDA         	movff	strncmp@l+1,fsr2h
  3024   003354  50DF               	movf	indf2,w,c
  3025   003356  B4D8               	btfsc	status,2,c
  3026   003358  EFB0  F019         	goto	u6431
  3027   00335C  EFB2  F019         	goto	u6430
  3028   003360                     u6431:
  3029   003360  EFDD  F019         	goto	l5414
  3030   003364                     u6430:
  3031   003364                     
  3032                           ; BSR set to: 0
  3033   003364  C069  FFF6         	movff	strncmp@r,tblptrl
  3034   003368  C06A  FFF7         	movff	strncmp@r+1,tblptrh
  3035   00336C                     	if	0	;tblptru may be non-zero
  3036   00336C                     	endif
  3037   00336C                     	if	0	;tblptru may be non-zero
  3038   00336C                     	endif
  3039   00336C  0008               	tblrd		*
  3040   00336E  50F5               	movf	tablat,w,c
  3041   003370  0900               	iorlw	0
  3042   003372  B4D8               	btfsc	status,2,c
  3043   003374  EFBE  F019         	goto	u6441
  3044   003378  EFC0  F019         	goto	u6440
  3045   00337C                     u6441:
  3046   00337C  EFDD  F019         	goto	l5414
  3047   003380                     u6440:
  3048   003380                     
  3049                           ; BSR set to: 0
  3050   003380  5164               	movf	strncmp@n& (0+255),w,b
  3051   003382  1165               	iorwf	(strncmp@n+1)& (0+255),w,b
  3052   003384  B4D8               	btfsc	status,2,c
  3053   003386  EFC7  F019         	goto	u6451
  3054   00338A  EFC9  F019         	goto	u6450
  3055   00338E                     u6451:
  3056   00338E  EFDD  F019         	goto	l5414
  3057   003392                     u6450:
  3058   003392                     
  3059                           ; BSR set to: 0
  3060   003392  C067  FFD9         	movff	strncmp@l,fsr2l
  3061   003396  C068  FFDA         	movff	strncmp@l+1,fsr2h
  3062   00339A  50DF               	movf	indf2,w,c
  3063   00339C  6F66               	movwf	??_strncmp& (0+255),b
  3064   00339E  C069  FFF6         	movff	strncmp@r,tblptrl
  3065   0033A2  C06A  FFF7         	movff	strncmp@r+1,tblptrh
  3066   0033A6                     	if	0	;tblptru may be non-zero
  3067   0033A6                     	endif
  3068   0033A6                     	if	0	;tblptru may be non-zero
  3069   0033A6                     	endif
  3070   0033A6  0008               	tblrd		*
  3071   0033A8  50F5               	movf	tablat,w,c
  3072   0033AA  1966               	xorwf	??_strncmp& (0+255),w,b
  3073   0033AC  B4D8               	btfsc	status,2,c
  3074   0033AE  EFDB  F019         	goto	u6461
  3075   0033B2  EFDD  F019         	goto	u6460
  3076   0033B6                     u6461:
  3077   0033B6  EF9F  F019         	goto	l5404
  3078   0033BA                     u6460:
  3079   0033BA                     l5414:
  3080                           
  3081                           ; BSR set to: 0
  3082   0033BA  C067  FFD9         	movff	strncmp@l,fsr2l
  3083   0033BE  C068  FFDA         	movff	strncmp@l+1,fsr2h
  3084   0033C2  50DF               	movf	indf2,w,c
  3085   0033C4  6F66               	movwf	??_strncmp& (0+255),b
  3086   0033C6  C069  FFF6         	movff	strncmp@r,tblptrl
  3087   0033CA  C06A  FFF7         	movff	strncmp@r+1,tblptrh
  3088   0033CE                     	if	0	;tblptru may be non-zero
  3089   0033CE                     	endif
  3090   0033CE                     	if	0	;tblptru may be non-zero
  3091   0033CE                     	endif
  3092   0033CE  0008               	tblrd		*
  3093   0033D0  50F5               	movf	tablat,w,c
  3094   0033D2  5D66               	subwf	??_strncmp& (0+255),w,b
  3095   0033D4  6F60               	movwf	?_strncmp& (0+255),b
  3096   0033D6  6B61               	clrf	(?_strncmp+1)& (0+255),b
  3097   0033D8  A0D8               	btfss	status,0,c
  3098   0033DA  0761               	decf	(?_strncmp+1)& (0+255),f,b
  3099   0033DC                     l1449:
  3100                           
  3101                           ; BSR set to: 0
  3102   0033DC  0012               	return		;funcret
  3103   0033DE                     __end_of_strncmp:
  3104                           	callstack 0
  3105                           
  3106 ;; *************** function _strcat *****************
  3107 ;; Defined at:
  3108 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strcat.c"
  3109 ;; Parameters:    Size  Location     Type
  3110 ;;  dest            2   14[BANK0 ] PTR unsigned char 
  3111 ;;		 -> parse_usb_message@response(100), parse_MRF_message@response(9), 
  3112 ;;  src             2   16[BANK0 ] PTR const unsigned char 
  3113 ;;		 -> STR_48(2), STR_47(3), STR_46(23), STR_45(14), 
  3114 ;;		 -> STR_44(15), parse_usb_message@temp_string(10), STR_20(2), 
  3115 ;; Auto vars:     Size  Location     Type
  3116 ;;		None
  3117 ;; Return value:  Size  Location     Type
  3118 ;;                  2   14[BANK0 ] PTR unsigned char 
  3119 ;; Registers used:
  3120 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3121 ;; Tracked objects:
  3122 ;;		On entry : 0/0
  3123 ;;		On exit  : 0/0
  3124 ;;		Unchanged: 0/0
  3125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3126 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3129 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3130 ;;Total ram usage:        4 bytes
  3131 ;; Hardware stack levels used: 1
  3132 ;; Hardware stack levels required when called: 4
  3133 ;; This function calls:
  3134 ;;		_strcpy
  3135 ;;		_strlen
  3136 ;; This function is called by:
  3137 ;;		_parse_usb_message
  3138 ;;		_parse_MRF_message
  3139 ;; This function uses a non-reentrant model
  3140 ;;
  3141                           
  3142                           	psect	text8
  3143   00402A                     __ptext8:
  3144                           	callstack 0
  3145   00402A                     _strcat:
  3146                           	callstack 25
  3147   00402A  C06E  F060         	movff	strcat@dest,strlen@s
  3148   00402E  C06F  F061         	movff	strcat@dest+1,strlen@s+1
  3149   004032  EC41  F01E         	call	_strlen	;wreg free
  3150   004036  0100               	movlb	0	; () banked
  3151   004038  5160               	movf	?_strlen& (0+255),w,b
  3152   00403A  256E               	addwf	strcat@dest& (0+255),w,b
  3153   00403C  6F64               	movwf	strcpy@dest& (0+255),b
  3154   00403E  5161               	movf	(?_strlen+1)& (0+255),w,b
  3155   004040  216F               	addwfc	(strcat@dest+1)& (0+255),w,b
  3156   004042  6F65               	movwf	(strcpy@dest+1)& (0+255),b
  3157   004044  C070  F066         	movff	strcat@src,strcpy@src
  3158   004048  C071  F067         	movff	strcat@src+1,strcpy@src+1
  3159   00404C  ECE2  F01D         	call	_strcpy	;wreg free
  3160   004050  0012               	return		;funcret
  3161   004052                     __end_of_strcat:
  3162                           	callstack 0
  3163                           
  3164 ;; *************** function _strcpy *****************
  3165 ;; Defined at:
  3166 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strcpy.c"
  3167 ;; Parameters:    Size  Location     Type
  3168 ;;  dest            2    4[BANK0 ] PTR unsigned char 
  3169 ;;		 -> parse_usb_message@response(100), MRF_param2(10), MRF_param1(10), parse_MRF_message@response(9), 
  3170 ;;		 -> parse_MRF_message@temp_string(9), usb_message(100), MRF_message(40), 
  3171 ;;  src             2    6[BANK0 ] PTR const unsigned char 
  3172 ;;		 -> STR_48(2), STR_47(3), STR_46(23), STR_45(14), 
  3173 ;;		 -> STR_44(15), STR_43(8), parse_usb_message@temp_string(10), STR_39(1), 
  3174 ;;		 -> STR_38(1), STR_37(1), STR_36(1), STR_35(1), 
  3175 ;;		 -> STR_21(1), STR_20(2), STR_19(3), STR_12(1), 
  3176 ;;		 -> STR_5(1), STR_4(1), 
  3177 ;; Auto vars:     Size  Location     Type
  3178 ;;  d               2   12[BANK0 ] PTR unsigned char 
  3179 ;;		 -> parse_usb_message@response(100), MRF_param2(10), MRF_param1(10), parse_MRF_message@response(9), 
  3180 ;;		 -> parse_MRF_message@temp_string(9), usb_message(100), MRF_message(40), 
  3181 ;;  s               2   10[BANK0 ] PTR const unsigned char 
  3182 ;;		 -> STR_48(2), STR_47(3), STR_46(23), STR_45(14), 
  3183 ;;		 -> STR_44(15), STR_43(8), parse_usb_message@temp_string(10), STR_39(1), 
  3184 ;;		 -> STR_38(1), STR_37(1), STR_36(1), STR_35(1), 
  3185 ;;		 -> STR_21(1), STR_20(2), STR_19(3), STR_12(1), 
  3186 ;;		 -> STR_5(1), STR_4(1), 
  3187 ;; Return value:  Size  Location     Type
  3188 ;;                  2    4[BANK0 ] PTR unsigned char 
  3189 ;; Registers used:
  3190 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3191 ;; Tracked objects:
  3192 ;;		On entry : 0/0
  3193 ;;		On exit  : 0/0
  3194 ;;		Unchanged: 0/0
  3195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3196 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3197 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3198 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3199 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3200 ;;Total ram usage:       10 bytes
  3201 ;; Hardware stack levels used: 1
  3202 ;; Hardware stack levels required when called: 3
  3203 ;; This function calls:
  3204 ;;		Nothing
  3205 ;; This function is called by:
  3206 ;;		_main
  3207 ;;		_parse_usb_message
  3208 ;;		_strcat
  3209 ;;		_parse_MRF_message
  3210 ;;		_MRF_parse_message
  3211 ;; This function uses a non-reentrant model
  3212 ;;
  3213                           
  3214                           	psect	text9
  3215   003BC4                     __ptext9:
  3216                           	callstack 0
  3217   003BC4                     _strcpy:
  3218                           	callstack 27
  3219   003BC4  C066  F06A         	movff	strcpy@src,strcpy@s
  3220   003BC8  C067  F06B         	movff	strcpy@src+1,strcpy@s+1
  3221   003BCC  C064  F06C         	movff	strcpy@dest,strcpy@d
  3222   003BD0  C065  F06D         	movff	strcpy@dest+1,strcpy@d+1
  3223   003BD4                     l5142:
  3224   003BD4  0100               	movlb	0	; () banked
  3225   003BD6  516A               	movf	strcpy@s& (0+255),w,b
  3226   003BD8  6F68               	movwf	??_strcpy& (0+255),b
  3227   003BDA  516B               	movf	(strcpy@s+1)& (0+255),w,b
  3228   003BDC  6F69               	movwf	(??_strcpy+1)& (0+255),b
  3229   003BDE  4B6A               	infsnz	strcpy@s& (0+255),f,b
  3230   003BE0  2B6B               	incf	(strcpy@s+1)& (0+255),f,b
  3231   003BE2  C068  FFF6         	movff	??_strcpy,tblptrl
  3232   003BE6  C069  FFF7         	movff	??_strcpy+1,tblptrh
  3233   003BEA  0E00               	movlw	low (__mediumconst shr (0+16))
  3234   003BEC  6EF8               	movwf	tblptru,c
  3235   003BEE  C06C  FFD9         	movff	strcpy@d,fsr2l
  3236   003BF2  C06D  FFDA         	movff	strcpy@d+1,fsr2h
  3237   003BF6  4B6C               	infsnz	strcpy@d& (0+255),f,b
  3238   003BF8  2B6D               	incf	(strcpy@d+1)& (0+255),f,b
  3239   003BFA  0E0F               	movlw	(high __ramtop+-1)
  3240   003BFC  64F7               	cpfsgt	tblptrh,c
  3241   003BFE  D003               	bra	u6107
  3242   003C00  0008               	tblrd		*
  3243   003C02  50F5               	movf	tablat,w,c
  3244   003C04  D005               	bra	u6100
  3245   003C06                     u6107:
  3246   003C06  CFF6 FFE9          	movff	tblptrl,fsr0l
  3247   003C0A  CFF7 FFEA          	movff	tblptrh,fsr0h
  3248   003C0E  50EF               	movf	indf0,w,c
  3249   003C10                     u6100:
  3250   003C10  6EDF               	movwf	indf2,c
  3251   003C12  50DF               	movf	indf2,w,c
  3252   003C14  A4D8               	btfss	status,2,c
  3253   003C16  EF0F  F01E         	goto	u6111
  3254   003C1A  EF11  F01E         	goto	u6110
  3255   003C1E                     u6111:
  3256   003C1E  EFEA  F01D         	goto	l5142
  3257   003C22                     u6110:
  3258   003C22  0012               	return		;funcret
  3259   003C24                     __end_of_strcpy:
  3260                           	callstack 0
  3261                           
  3262 ;; *************** function _itoa *****************
  3263 ;; Defined at:
  3264 ;;		line 46 in file "BeeBot_Globals.c"
  3265 ;; Parameters:    Size  Location     Type
  3266 ;;  n               2   12[BANK0 ] int 
  3267 ;;  s               2   14[BANK0 ] PTR unsigned char 
  3268 ;;		 -> parse_usb_message@temp_string(10), 
  3269 ;; Auto vars:     Size  Location     Type
  3270 ;;  i               2   18[BANK0 ] int 
  3271 ;;  sign            2   16[BANK0 ] int 
  3272 ;; Return value:  Size  Location     Type
  3273 ;;                  1    wreg      void 
  3274 ;; Registers used:
  3275 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3276 ;; Tracked objects:
  3277 ;;		On entry : 0/0
  3278 ;;		On exit  : 0/0
  3279 ;;		Unchanged: 0/0
  3280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3281 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3282 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3284 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3285 ;;Total ram usage:        8 bytes
  3286 ;; Hardware stack levels used: 1
  3287 ;; Hardware stack levels required when called: 5
  3288 ;; This function calls:
  3289 ;;		___awdiv
  3290 ;;		___awmod
  3291 ;;		_reverse_string
  3292 ;; This function is called by:
  3293 ;;		_parse_usb_message
  3294 ;; This function uses a non-reentrant model
  3295 ;;
  3296                           
  3297                           	psect	text10
  3298   0033DE                     __ptext10:
  3299                           	callstack 0
  3300   0033DE                     _itoa:
  3301                           	callstack 24
  3302   0033DE                     
  3303                           ;BeeBot_Globals.c: 46: void itoa(int n, char s[]);BeeBot_Globals.c: 47: {;BeeBot_Globals
      +                          .c: 48:     int i, sign;;BeeBot_Globals.c: 50:     if ((sign = n) < 0)
  3304   0033DE  C06C  F070         	movff	itoa@n,itoa@sign
  3305   0033E2  C06D  F071         	movff	itoa@n+1,itoa@sign+1
  3306   0033E6  0100               	movlb	0	; () banked
  3307   0033E8  BF71               	btfsc	(itoa@sign+1)& (0+255),7,b
  3308   0033EA  EFFB  F019         	goto	u6380
  3309   0033EE  EFF9  F019         	goto	u6381
  3310   0033F2                     u6381:
  3311   0033F2  EFFF  F019         	goto	l5356
  3312   0033F6                     u6380:
  3313   0033F6                     
  3314                           ; BSR set to: 0
  3315                           ;BeeBot_Globals.c: 51:         n = -n;
  3316   0033F6  6D6C               	negf	itoa@n& (0+255),b
  3317   0033F8  1F6D               	comf	(itoa@n+1)& (0+255),f,b
  3318   0033FA  B0D8               	btfsc	status,0,c
  3319   0033FC  2B6D               	incf	(itoa@n+1)& (0+255),f,b
  3320   0033FE                     l5356:
  3321                           
  3322                           ; BSR set to: 0
  3323                           ;BeeBot_Globals.c: 52:     i = 0;
  3324   0033FE  0E00               	movlw	0
  3325   003400  6F73               	movwf	(itoa@i+1)& (0+255),b
  3326   003402  0E00               	movlw	0
  3327   003404  6F72               	movwf	itoa@i& (0+255),b
  3328   003406                     l5358:
  3329                           
  3330                           ; BSR set to: 0
  3331                           ;BeeBot_Globals.c: 54:     {;BeeBot_Globals.c: 55:         s[i++] = n % 10 + '0';
  3332   003406  5172               	movf	itoa@i& (0+255),w,b
  3333   003408  256E               	addwf	itoa@s& (0+255),w,b
  3334   00340A  6ED9               	movwf	fsr2l,c
  3335   00340C  5173               	movf	(itoa@i+1)& (0+255),w,b
  3336   00340E  216F               	addwfc	(itoa@s+1)& (0+255),w,b
  3337   003410  6EDA               	movwf	fsr2h,c
  3338   003412  C06C  F060         	movff	itoa@n,___awmod@dividend
  3339   003416  C06D  F061         	movff	itoa@n+1,___awmod@dividend+1
  3340   00341A  0E00               	movlw	0
  3341   00341C  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  3342   00341E  0E0A               	movlw	10
  3343   003420  6F62               	movwf	___awmod@divisor& (0+255),b
  3344   003422  EC1E  F01B         	call	___awmod	;wreg free
  3345   003426  0100               	movlb	0	; () banked
  3346   003428  5160               	movf	?___awmod& (0+255),w,b
  3347   00342A  0F30               	addlw	48
  3348   00342C  6EDF               	movwf	indf2,c
  3349   00342E                     
  3350                           ; BSR set to: 0
  3351   00342E  4B72               	infsnz	itoa@i& (0+255),f,b
  3352   003430  2B73               	incf	(itoa@i+1)& (0+255),f,b
  3353   003432                     
  3354                           ; BSR set to: 0
  3355                           ;BeeBot_Globals.c: 56:     } while ((n /= 10) > 0);
  3356   003432  C06C  F060         	movff	itoa@n,___awdiv@dividend
  3357   003436  C06D  F061         	movff	itoa@n+1,___awdiv@dividend+1
  3358   00343A  0E00               	movlw	0
  3359   00343C  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  3360   00343E  0E0A               	movlw	10
  3361   003440  6F62               	movwf	___awdiv@divisor& (0+255),b
  3362   003442  ECBB  F01A         	call	___awdiv	;wreg free
  3363   003446  C060  F06C         	movff	?___awdiv,itoa@n
  3364   00344A  C061  F06D         	movff	?___awdiv+1,itoa@n+1
  3365   00344E  0100               	movlb	0	; () banked
  3366   003450  BF6D               	btfsc	(itoa@n+1)& (0+255),7,b
  3367   003452  EF35  F01A         	goto	u6390
  3368   003456  516D               	movf	(itoa@n+1)& (0+255),w,b
  3369   003458  E106               	bnz	u6391
  3370   00345A  056C               	decf	itoa@n& (0+255),w,b
  3371   00345C  B0D8               	btfsc	status,0,c
  3372   00345E  EF33  F01A         	goto	u6391
  3373   003462  EF35  F01A         	goto	u6390
  3374   003466                     u6391:
  3375   003466  EF03  F01A         	goto	l5358
  3376   00346A                     u6390:
  3377   00346A                     
  3378                           ; BSR set to: 0
  3379                           ;BeeBot_Globals.c: 57:     if (sign < 0)
  3380   00346A  BF71               	btfsc	(itoa@sign+1)& (0+255),7,b
  3381   00346C  EF3C  F01A         	goto	u6400
  3382   003470  EF3A  F01A         	goto	u6401
  3383   003474                     u6401:
  3384   003474  EF46  F01A         	goto	l5370
  3385   003478                     u6400:
  3386   003478                     
  3387                           ; BSR set to: 0
  3388                           ;BeeBot_Globals.c: 58:         s[i++] = '-';
  3389   003478  5172               	movf	itoa@i& (0+255),w,b
  3390   00347A  256E               	addwf	itoa@s& (0+255),w,b
  3391   00347C  6ED9               	movwf	fsr2l,c
  3392   00347E  5173               	movf	(itoa@i+1)& (0+255),w,b
  3393   003480  216F               	addwfc	(itoa@s+1)& (0+255),w,b
  3394   003482  6EDA               	movwf	fsr2h,c
  3395   003484  0E2D               	movlw	45
  3396   003486  6EDF               	movwf	indf2,c
  3397   003488                     
  3398                           ; BSR set to: 0
  3399   003488  4B72               	infsnz	itoa@i& (0+255),f,b
  3400   00348A  2B73               	incf	(itoa@i+1)& (0+255),f,b
  3401   00348C                     l5370:
  3402                           
  3403                           ; BSR set to: 0
  3404                           ;BeeBot_Globals.c: 59:     s[i] = '\0';
  3405   00348C  5172               	movf	itoa@i& (0+255),w,b
  3406   00348E  256E               	addwf	itoa@s& (0+255),w,b
  3407   003490  6ED9               	movwf	fsr2l,c
  3408   003492  5173               	movf	(itoa@i+1)& (0+255),w,b
  3409   003494  216F               	addwfc	(itoa@s+1)& (0+255),w,b
  3410   003496  6EDA               	movwf	fsr2h,c
  3411   003498  0E00               	movlw	0
  3412   00349A  6EDF               	movwf	indf2,c
  3413   00349C                     
  3414                           ; BSR set to: 0
  3415                           ;BeeBot_Globals.c: 60:     reverse_string(s);
  3416   00349C  C06E  F064         	movff	itoa@s,reverse_string@s
  3417   0034A0  C06F  F065         	movff	itoa@s+1,reverse_string@s+1
  3418   0034A4  EC1F  F01C         	call	_reverse_string	;wreg free
  3419   0034A8  0012               	return		;funcret
  3420   0034AA                     __end_of_itoa:
  3421                           	callstack 0
  3422                           
  3423 ;; *************** function _reverse_string *****************
  3424 ;; Defined at:
  3425 ;;		line 30 in file "BeeBot_Globals.c"
  3426 ;; Parameters:    Size  Location     Type
  3427 ;;  s               2    4[BANK0 ] PTR unsigned char 
  3428 ;;		 -> parse_usb_message@temp_string(10), parse_MRF_message@temp_string(9), 
  3429 ;; Auto vars:     Size  Location     Type
  3430 ;;  j               2   10[BANK0 ] int 
  3431 ;;  i               2    8[BANK0 ] int 
  3432 ;;  c               1    7[BANK0 ] unsigned char 
  3433 ;; Return value:  Size  Location     Type
  3434 ;;                  1    wreg      void 
  3435 ;; Registers used:
  3436 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3437 ;; Tracked objects:
  3438 ;;		On entry : 0/0
  3439 ;;		On exit  : 0/0
  3440 ;;		Unchanged: 0/0
  3441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3442 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3443 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3444 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3445 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3446 ;;Total ram usage:        8 bytes
  3447 ;; Hardware stack levels used: 1
  3448 ;; Hardware stack levels required when called: 4
  3449 ;; This function calls:
  3450 ;;		_strlen
  3451 ;; This function is called by:
  3452 ;;		_itoa
  3453 ;;		_ltoa
  3454 ;; This function uses a non-reentrant model
  3455 ;;
  3456                           
  3457                           	psect	text11
  3458   00383E                     __ptext11:
  3459                           	callstack 0
  3460   00383E                     _reverse_string:
  3461                           	callstack 24
  3462   00383E                     
  3463                           ;BeeBot_Globals.c: 30: void reverse_string(char s[]);BeeBot_Globals.c: 31: {;BeeBot_Glob
      +                          als.c: 32:     int i, j;;BeeBot_Globals.c: 33:     char c;;BeeBot_Globals.c: 35:     for
      +                           (i = 0, j = strlen(s)-1; i<j; i++, j--) {
  3464   00383E  0E00               	movlw	0
  3465   003840  0100               	movlb	0	; () banked
  3466   003842  6F69               	movwf	(reverse_string@i+1)& (0+255),b
  3467   003844  0E00               	movlw	0
  3468   003846  6F68               	movwf	reverse_string@i& (0+255),b
  3469   003848                     
  3470                           ; BSR set to: 0
  3471   003848  C064  F060         	movff	reverse_string@s,strlen@s
  3472   00384C  C065  F061         	movff	reverse_string@s+1,strlen@s+1
  3473   003850  EC41  F01E         	call	_strlen	;wreg free
  3474   003854  0EFF               	movlw	255
  3475   003856  0100               	movlb	0	; () banked
  3476   003858  2560               	addwf	?_strlen& (0+255),w,b
  3477   00385A  6F6A               	movwf	reverse_string@j& (0+255),b
  3478   00385C  0EFF               	movlw	255
  3479   00385E  2161               	addwfc	(?_strlen+1)& (0+255),w,b
  3480   003860  6F6B               	movwf	(reverse_string@j+1)& (0+255),b
  3481   003862  EF56  F01C         	goto	l5158
  3482   003866                     l5148:
  3483                           
  3484                           ; BSR set to: 0
  3485                           ;BeeBot_Globals.c: 36:         c = s[i];
  3486   003866  5168               	movf	reverse_string@i& (0+255),w,b
  3487   003868  2564               	addwf	reverse_string@s& (0+255),w,b
  3488   00386A  6ED9               	movwf	fsr2l,c
  3489   00386C  5169               	movf	(reverse_string@i+1)& (0+255),w,b
  3490   00386E  2165               	addwfc	(reverse_string@s+1)& (0+255),w,b
  3491   003870  6EDA               	movwf	fsr2h,c
  3492   003872  50DF               	movf	indf2,w,c
  3493   003874  6F67               	movwf	reverse_string@c& (0+255),b
  3494   003876                     
  3495                           ; BSR set to: 0
  3496                           ;BeeBot_Globals.c: 37:         s[i] = s[j];
  3497   003876  516A               	movf	reverse_string@j& (0+255),w,b
  3498   003878  2564               	addwf	reverse_string@s& (0+255),w,b
  3499   00387A  6ED9               	movwf	fsr2l,c
  3500   00387C  516B               	movf	(reverse_string@j+1)& (0+255),w,b
  3501   00387E  2165               	addwfc	(reverse_string@s+1)& (0+255),w,b
  3502   003880  6EDA               	movwf	fsr2h,c
  3503   003882  5168               	movf	reverse_string@i& (0+255),w,b
  3504   003884  2564               	addwf	reverse_string@s& (0+255),w,b
  3505   003886  6EE1               	movwf	fsr1l,c
  3506   003888  5169               	movf	(reverse_string@i+1)& (0+255),w,b
  3507   00388A  2165               	addwfc	(reverse_string@s+1)& (0+255),w,b
  3508   00388C  6EE2               	movwf	fsr1h,c
  3509   00388E  CFDF FFE7          	movff	indf2,indf1
  3510   003892                     
  3511                           ; BSR set to: 0
  3512                           ;BeeBot_Globals.c: 38:         s[j] = c;
  3513   003892  516A               	movf	reverse_string@j& (0+255),w,b
  3514   003894  2564               	addwf	reverse_string@s& (0+255),w,b
  3515   003896  6ED9               	movwf	fsr2l,c
  3516   003898  516B               	movf	(reverse_string@j+1)& (0+255),w,b
  3517   00389A  2165               	addwfc	(reverse_string@s+1)& (0+255),w,b
  3518   00389C  6EDA               	movwf	fsr2h,c
  3519   00389E  C067  FFDF         	movff	reverse_string@c,indf2
  3520   0038A2                     
  3521                           ; BSR set to: 0
  3522                           ;BeeBot_Globals.c: 39:     }
  3523   0038A2  4B68               	infsnz	reverse_string@i& (0+255),f,b
  3524   0038A4  2B69               	incf	(reverse_string@i+1)& (0+255),f,b
  3525   0038A6                     
  3526                           ; BSR set to: 0
  3527   0038A6  076A               	decf	reverse_string@j& (0+255),f,b
  3528   0038A8  A0D8               	btfss	status,0,c
  3529   0038AA  076B               	decf	(reverse_string@j+1)& (0+255),f,b
  3530   0038AC                     l5158:
  3531                           
  3532                           ; BSR set to: 0
  3533   0038AC  516A               	movf	reverse_string@j& (0+255),w,b
  3534   0038AE  5D68               	subwf	reverse_string@i& (0+255),w,b
  3535   0038B0  5169               	movf	(reverse_string@i+1)& (0+255),w,b
  3536   0038B2  0A80               	xorlw	128
  3537   0038B4  6F66               	movwf	??_reverse_string& (0+255),b
  3538   0038B6  516B               	movf	(reverse_string@j+1)& (0+255),w,b
  3539   0038B8  0A80               	xorlw	128
  3540   0038BA  5966               	subwfb	??_reverse_string& (0+255),w,b
  3541   0038BC  A0D8               	btfss	status,0,c
  3542   0038BE  EF63  F01C         	goto	u6121
  3543   0038C2  EF65  F01C         	goto	u6120
  3544   0038C6                     u6121:
  3545   0038C6  EF33  F01C         	goto	l5148
  3546   0038CA                     u6120:
  3547   0038CA                     
  3548                           ; BSR set to: 0
  3549   0038CA  0012               	return		;funcret
  3550   0038CC                     __end_of_reverse_string:
  3551                           	callstack 0
  3552                           
  3553 ;; *************** function ___awmod *****************
  3554 ;; Defined at:
  3555 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awmod.c"
  3556 ;; Parameters:    Size  Location     Type
  3557 ;;  dividend        2    0[BANK0 ] int 
  3558 ;;  divisor         2    2[BANK0 ] int 
  3559 ;; Auto vars:     Size  Location     Type
  3560 ;;  sign            1    5[BANK0 ] unsigned char 
  3561 ;;  counter         1    4[BANK0 ] unsigned char 
  3562 ;; Return value:  Size  Location     Type
  3563 ;;                  2    0[BANK0 ] int 
  3564 ;; Registers used:
  3565 ;;		wreg, status,2, status,0
  3566 ;; Tracked objects:
  3567 ;;		On entry : 0/0
  3568 ;;		On exit  : 0/0
  3569 ;;		Unchanged: 0/0
  3570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3571 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3572 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3574 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3575 ;;Total ram usage:        6 bytes
  3576 ;; Hardware stack levels used: 1
  3577 ;; Hardware stack levels required when called: 3
  3578 ;; This function calls:
  3579 ;;		Nothing
  3580 ;; This function is called by:
  3581 ;;		_itoa
  3582 ;; This function uses a non-reentrant model
  3583 ;;
  3584                           
  3585                           	psect	text12
  3586   00363C                     __ptext12:
  3587                           	callstack 0
  3588   00363C                     ___awmod:
  3589                           	callstack 25
  3590   00363C  0E00               	movlw	0
  3591   00363E  0100               	movlb	0	; () banked
  3592   003640  6F65               	movwf	___awmod@sign& (0+255),b
  3593   003642                     
  3594                           ; BSR set to: 0
  3595   003642  BF61               	btfsc	(___awmod@dividend+1)& (0+255),7,b
  3596   003644  EF28  F01B         	goto	u6190
  3597   003648  EF26  F01B         	goto	u6191
  3598   00364C                     u6191:
  3599   00364C  EF2E  F01B         	goto	l5238
  3600   003650                     u6190:
  3601   003650                     
  3602                           ; BSR set to: 0
  3603   003650  6D60               	negf	___awmod@dividend& (0+255),b
  3604   003652  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  3605   003654  B0D8               	btfsc	status,0,c
  3606   003656  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  3607   003658                     
  3608                           ; BSR set to: 0
  3609   003658  0E01               	movlw	1
  3610   00365A  6F65               	movwf	___awmod@sign& (0+255),b
  3611   00365C                     l5238:
  3612                           
  3613                           ; BSR set to: 0
  3614   00365C  BF63               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  3615   00365E  EF35  F01B         	goto	u6200
  3616   003662  EF33  F01B         	goto	u6201
  3617   003666                     u6201:
  3618   003666  EF39  F01B         	goto	l5242
  3619   00366A                     u6200:
  3620   00366A                     
  3621                           ; BSR set to: 0
  3622   00366A  6D62               	negf	___awmod@divisor& (0+255),b
  3623   00366C  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
  3624   00366E  B0D8               	btfsc	status,0,c
  3625   003670  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
  3626   003672                     l5242:
  3627                           
  3628                           ; BSR set to: 0
  3629   003672  5162               	movf	___awmod@divisor& (0+255),w,b
  3630   003674  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  3631   003676  B4D8               	btfsc	status,2,c
  3632   003678  EF40  F01B         	goto	u6211
  3633   00367C  EF42  F01B         	goto	u6210
  3634   003680                     u6211:
  3635   003680  EF66  F01B         	goto	l5258
  3636   003684                     u6210:
  3637   003684                     
  3638                           ; BSR set to: 0
  3639   003684  0E01               	movlw	1
  3640   003686  6F64               	movwf	___awmod@counter& (0+255),b
  3641   003688  EF4A  F01B         	goto	l5248
  3642   00368C                     l5246:
  3643                           
  3644                           ; BSR set to: 0
  3645   00368C  90D8               	bcf	status,0,c
  3646   00368E  3762               	rlcf	___awmod@divisor& (0+255),f,b
  3647   003690  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  3648   003692  2B64               	incf	___awmod@counter& (0+255),f,b
  3649   003694                     l5248:
  3650                           
  3651                           ; BSR set to: 0
  3652   003694  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
  3653   003696  EF4F  F01B         	goto	u6221
  3654   00369A  EF51  F01B         	goto	u6220
  3655   00369E                     u6221:
  3656   00369E  EF46  F01B         	goto	l5246
  3657   0036A2                     u6220:
  3658   0036A2                     l5250:
  3659                           
  3660                           ; BSR set to: 0
  3661   0036A2  5162               	movf	___awmod@divisor& (0+255),w,b
  3662   0036A4  5D60               	subwf	___awmod@dividend& (0+255),w,b
  3663   0036A6  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  3664   0036A8  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  3665   0036AA  A0D8               	btfss	status,0,c
  3666   0036AC  EF5A  F01B         	goto	u6231
  3667   0036B0  EF5C  F01B         	goto	u6230
  3668   0036B4                     u6231:
  3669   0036B4  EF60  F01B         	goto	l5254
  3670   0036B8                     u6230:
  3671   0036B8                     
  3672                           ; BSR set to: 0
  3673   0036B8  5162               	movf	___awmod@divisor& (0+255),w,b
  3674   0036BA  5F60               	subwf	___awmod@dividend& (0+255),f,b
  3675   0036BC  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  3676   0036BE  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  3677   0036C0                     l5254:
  3678                           
  3679                           ; BSR set to: 0
  3680   0036C0  90D8               	bcf	status,0,c
  3681   0036C2  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  3682   0036C4  3362               	rrcf	___awmod@divisor& (0+255),f,b
  3683   0036C6                     
  3684                           ; BSR set to: 0
  3685   0036C6  2F64               	decfsz	___awmod@counter& (0+255),f,b
  3686   0036C8  EF51  F01B         	goto	l5250
  3687   0036CC                     l5258:
  3688                           
  3689                           ; BSR set to: 0
  3690   0036CC  5165               	movf	___awmod@sign& (0+255),w,b
  3691   0036CE  B4D8               	btfsc	status,2,c
  3692   0036D0  EF6C  F01B         	goto	u6241
  3693   0036D4  EF6E  F01B         	goto	u6240
  3694   0036D8                     u6241:
  3695   0036D8  EF72  F01B         	goto	l5262
  3696   0036DC                     u6240:
  3697   0036DC                     
  3698                           ; BSR set to: 0
  3699   0036DC  6D60               	negf	___awmod@dividend& (0+255),b
  3700   0036DE  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  3701   0036E0  B0D8               	btfsc	status,0,c
  3702   0036E2  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  3703   0036E4                     l5262:
  3704                           
  3705                           ; BSR set to: 0
  3706   0036E4  C060  F060         	movff	___awmod@dividend,?___awmod
  3707   0036E8  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
  3708   0036EC                     
  3709                           ; BSR set to: 0
  3710   0036EC  0012               	return		;funcret
  3711   0036EE                     __end_of___awmod:
  3712                           	callstack 0
  3713                           
  3714 ;; *************** function ___awdiv *****************
  3715 ;; Defined at:
  3716 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
  3717 ;; Parameters:    Size  Location     Type
  3718 ;;  dividend        2    0[BANK0 ] int 
  3719 ;;  divisor         2    2[BANK0 ] int 
  3720 ;; Auto vars:     Size  Location     Type
  3721 ;;  quotient        2    6[BANK0 ] int 
  3722 ;;  sign            1    5[BANK0 ] unsigned char 
  3723 ;;  counter         1    4[BANK0 ] unsigned char 
  3724 ;; Return value:  Size  Location     Type
  3725 ;;                  2    0[BANK0 ] int 
  3726 ;; Registers used:
  3727 ;;		wreg, status,2, status,0
  3728 ;; Tracked objects:
  3729 ;;		On entry : 0/0
  3730 ;;		On exit  : 0/0
  3731 ;;		Unchanged: 0/0
  3732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3733 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3734 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3736 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3737 ;;Total ram usage:        8 bytes
  3738 ;; Hardware stack levels used: 1
  3739 ;; Hardware stack levels required when called: 3
  3740 ;; This function calls:
  3741 ;;		Nothing
  3742 ;; This function is called by:
  3743 ;;		_itoa
  3744 ;; This function uses a non-reentrant model
  3745 ;;
  3746                           
  3747                           	psect	text13
  3748   003576                     __ptext13:
  3749                           	callstack 0
  3750   003576                     ___awdiv:
  3751                           	callstack 25
  3752   003576  0E00               	movlw	0
  3753   003578  0100               	movlb	0	; () banked
  3754   00357A  6F65               	movwf	___awdiv@sign& (0+255),b
  3755   00357C                     
  3756                           ; BSR set to: 0
  3757   00357C  BF63               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
  3758   00357E  EFC5  F01A         	goto	u6130
  3759   003582  EFC3  F01A         	goto	u6131
  3760   003586                     u6131:
  3761   003586  EFCB  F01A         	goto	l5194
  3762   00358A                     u6130:
  3763   00358A                     
  3764                           ; BSR set to: 0
  3765   00358A  6D62               	negf	___awdiv@divisor& (0+255),b
  3766   00358C  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
  3767   00358E  B0D8               	btfsc	status,0,c
  3768   003590  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
  3769   003592                     
  3770                           ; BSR set to: 0
  3771   003592  0E01               	movlw	1
  3772   003594  6F65               	movwf	___awdiv@sign& (0+255),b
  3773   003596                     l5194:
  3774                           
  3775                           ; BSR set to: 0
  3776   003596  BF61               	btfsc	(___awdiv@dividend+1)& (0+255),7,b
  3777   003598  EFD2  F01A         	goto	u6140
  3778   00359C  EFD0  F01A         	goto	u6141
  3779   0035A0                     u6141:
  3780   0035A0  EFD8  F01A         	goto	l5200
  3781   0035A4                     u6140:
  3782   0035A4                     
  3783                           ; BSR set to: 0
  3784   0035A4  6D60               	negf	___awdiv@dividend& (0+255),b
  3785   0035A6  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
  3786   0035A8  B0D8               	btfsc	status,0,c
  3787   0035AA  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
  3788   0035AC                     
  3789                           ; BSR set to: 0
  3790   0035AC  0E01               	movlw	1
  3791   0035AE  1B65               	xorwf	___awdiv@sign& (0+255),f,b
  3792   0035B0                     l5200:
  3793                           
  3794                           ; BSR set to: 0
  3795   0035B0  0E00               	movlw	0
  3796   0035B2  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
  3797   0035B4  0E00               	movlw	0
  3798   0035B6  6F66               	movwf	___awdiv@quotient& (0+255),b
  3799   0035B8                     
  3800                           ; BSR set to: 0
  3801   0035B8  5162               	movf	___awdiv@divisor& (0+255),w,b
  3802   0035BA  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  3803   0035BC  B4D8               	btfsc	status,2,c
  3804   0035BE  EFE3  F01A         	goto	u6151
  3805   0035C2  EFE5  F01A         	goto	u6150
  3806   0035C6                     u6151:
  3807   0035C6  EF0D  F01B         	goto	l5222
  3808   0035CA                     u6150:
  3809   0035CA                     
  3810                           ; BSR set to: 0
  3811   0035CA  0E01               	movlw	1
  3812   0035CC  6F64               	movwf	___awdiv@counter& (0+255),b
  3813   0035CE  EFED  F01A         	goto	l5208
  3814   0035D2                     l5206:
  3815                           
  3816                           ; BSR set to: 0
  3817   0035D2  90D8               	bcf	status,0,c
  3818   0035D4  3762               	rlcf	___awdiv@divisor& (0+255),f,b
  3819   0035D6  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  3820   0035D8  2B64               	incf	___awdiv@counter& (0+255),f,b
  3821   0035DA                     l5208:
  3822                           
  3823                           ; BSR set to: 0
  3824   0035DA  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  3825   0035DC  EFF2  F01A         	goto	u6161
  3826   0035E0  EFF4  F01A         	goto	u6160
  3827   0035E4                     u6161:
  3828   0035E4  EFE9  F01A         	goto	l5206
  3829   0035E8                     u6160:
  3830   0035E8                     l5210:
  3831                           
  3832                           ; BSR set to: 0
  3833   0035E8  90D8               	bcf	status,0,c
  3834   0035EA  3766               	rlcf	___awdiv@quotient& (0+255),f,b
  3835   0035EC  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  3836   0035EE                     
  3837                           ; BSR set to: 0
  3838   0035EE  5162               	movf	___awdiv@divisor& (0+255),w,b
  3839   0035F0  5D60               	subwf	___awdiv@dividend& (0+255),w,b
  3840   0035F2  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  3841   0035F4  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  3842   0035F6  A0D8               	btfss	status,0,c
  3843   0035F8  EF00  F01B         	goto	u6171
  3844   0035FC  EF02  F01B         	goto	u6170
  3845   003600                     u6171:
  3846   003600  EF07  F01B         	goto	l5218
  3847   003604                     u6170:
  3848   003604                     
  3849                           ; BSR set to: 0
  3850   003604  5162               	movf	___awdiv@divisor& (0+255),w,b
  3851   003606  5F60               	subwf	___awdiv@dividend& (0+255),f,b
  3852   003608  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  3853   00360A  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  3854   00360C                     
  3855                           ; BSR set to: 0
  3856   00360C  8166               	bsf	___awdiv@quotient& (0+255),0,b
  3857   00360E                     l5218:
  3858                           
  3859                           ; BSR set to: 0
  3860   00360E  90D8               	bcf	status,0,c
  3861   003610  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  3862   003612  3362               	rrcf	___awdiv@divisor& (0+255),f,b
  3863   003614                     
  3864                           ; BSR set to: 0
  3865   003614  2F64               	decfsz	___awdiv@counter& (0+255),f,b
  3866   003616  EFF4  F01A         	goto	l5210
  3867   00361A                     l5222:
  3868                           
  3869                           ; BSR set to: 0
  3870   00361A  5165               	movf	___awdiv@sign& (0+255),w,b
  3871   00361C  B4D8               	btfsc	status,2,c
  3872   00361E  EF13  F01B         	goto	u6181
  3873   003622  EF15  F01B         	goto	u6180
  3874   003626                     u6181:
  3875   003626  EF19  F01B         	goto	l5226
  3876   00362A                     u6180:
  3877   00362A                     
  3878                           ; BSR set to: 0
  3879   00362A  6D66               	negf	___awdiv@quotient& (0+255),b
  3880   00362C  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
  3881   00362E  B0D8               	btfsc	status,0,c
  3882   003630  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
  3883   003632                     l5226:
  3884                           
  3885                           ; BSR set to: 0
  3886   003632  C066  F060         	movff	___awdiv@quotient,?___awdiv
  3887   003636  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
  3888   00363A                     
  3889                           ; BSR set to: 0
  3890   00363A  0012               	return		;funcret
  3891   00363C                     __end_of___awdiv:
  3892                           	callstack 0
  3893                           
  3894 ;; *************** function _get_coords_usb *****************
  3895 ;; Defined at:
  3896 ;;		line 165 in file "MCP2221A.c"
  3897 ;; Parameters:    Size  Location     Type
  3898 ;;		None
  3899 ;; Auto vars:     Size  Location     Type
  3900 ;;  longitude      20   81[BANK0 ] unsigned char [20]
  3901 ;;  latitude       20   61[BANK0 ] unsigned char [20]
  3902 ;;  msg_coords      8  101[BANK0 ] struct coords
  3903 ;;  counter         1  110[BANK0 ] unsigned char 
  3904 ;;  long_counter    1  109[BANK0 ] unsigned char 
  3905 ;;  lat_counter     1    0        unsigned char 
  3906 ;; Return value:  Size  Location     Type
  3907 ;;                  8   50[BANK0 ] struct coords
  3908 ;; Registers used:
  3909 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3910 ;; Tracked objects:
  3911 ;;		On entry : 0/0
  3912 ;;		On exit  : 0/0
  3913 ;;		Unchanged: 0/0
  3914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3915 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3916 ;;      Locals:         0      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3917 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3918 ;;      Totals:         0      61       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3919 ;;Total ram usage:       61 bytes
  3920 ;; Hardware stack levels used: 1
  3921 ;; Hardware stack levels required when called: 7
  3922 ;; This function calls:
  3923 ;;		_atof
  3924 ;;		_isdigit
  3925 ;; This function is called by:
  3926 ;;		_parse_usb_message
  3927 ;; This function uses a non-reentrant model
  3928 ;;
  3929                           
  3930                           	psect	text14
  3931   0024F0                     __ptext14:
  3932                           	callstack 0
  3933   0024F0                     _get_coords_usb:
  3934                           	callstack 22
  3935   0024F0                     
  3936                           ;MCP2221A.c: 167:     COORDS msg_coords;;MCP2221A.c: 168:     BYTE counter = 0;
  3937   0024F0  0E00               	movlw	0
  3938   0024F2  0100               	movlb	0	; () banked
  3939   0024F4  6FCE               	movwf	get_coords_usb@counter& (0+255),b
  3940                           
  3941                           ;MCP2221A.c: 169:     BYTE long_counter = 0;
  3942   0024F6  0E00               	movlw	0
  3943   0024F8  6FCD               	movwf	get_coords_usb@long_counter& (0+255),b
  3944   0024FA                     
  3945                           ; BSR set to: 0
  3946                           ;MCP2221A.c: 171:     char longitude[20] = "";
  3947   0024FA  EE20  F0B1         	lfsr	2,get_coords_usb@longitude
  3948   0024FE  0E13               	movlw	19
  3949   002500                     u6471:
  3950   002500  6ADE               	clrf	postinc2,c
  3951   002502  06E8               	decf	wreg,f,c
  3952   002504  E2FD               	bc	u6471
  3953   002506                     
  3954                           ; BSR set to: 0
  3955                           ;MCP2221A.c: 172:     char latitude[20] = "";
  3956   002506  EE20  F09D         	lfsr	2,get_coords_usb@latitude
  3957   00250A  0E13               	movlw	19
  3958   00250C                     u6481:
  3959   00250C  6ADE               	clrf	postinc2,c
  3960   00250E  06E8               	decf	wreg,f,c
  3961   002510  E2FD               	bc	u6481
  3962                           
  3963                           ;MCP2221A.c: 175:     while(!(0 && isdigit(usb_message[counter]), ((unsigned)(usb_messag
      +                          e[counter])-'0') < 10))
  3964   002512  EF8C  F012         	goto	l5428
  3965   002516                     l5424:
  3966                           
  3967                           ; BSR set to: 0
  3968                           ;MCP2221A.c: 176:         counter++;
  3969   002516  2BCE               	incf	get_coords_usb@counter& (0+255),f,b
  3970   002518                     l5428:
  3971                           
  3972                           ; BSR set to: 0
  3973   002518  0E6A               	movlw	low _usb_message
  3974   00251A  25CE               	addwf	get_coords_usb@counter& (0+255),w,b
  3975   00251C  6ED9               	movwf	fsr2l,c
  3976   00251E  6ADA               	clrf	fsr2h,c
  3977   002520  0E02               	movlw	high _usb_message
  3978   002522  22DA               	addwfc	fsr2h,f,c
  3979   002524  50DF               	movf	indf2,w,c
  3980   002526  6F9A               	movwf	??_get_coords_usb& (0+255),b
  3981   002528  0ED0               	movlw	208
  3982   00252A  259A               	addwf	??_get_coords_usb& (0+255),w,b
  3983   00252C  6F9B               	movwf	(??_get_coords_usb+1)& (0+255),b
  3984   00252E  6B9C               	clrf	(??_get_coords_usb+2)& (0+255),b
  3985   002530  0EFF               	movlw	255
  3986   002532  239C               	addwfc	(??_get_coords_usb+2)& (0+255),f,b
  3987   002534  519C               	movf	(??_get_coords_usb+2)& (0+255),w,b
  3988   002536  E107               	bnz	u6491
  3989   002538  0E0A               	movlw	10
  3990   00253A  5D9B               	subwf	(??_get_coords_usb+1)& (0+255),w,b
  3991   00253C  B0D8               	btfsc	status,0,c
  3992   00253E  EFA3  F012         	goto	u6491
  3993   002542  EFA5  F012         	goto	u6490
  3994   002546                     u6491:
  3995   002546  EF8B  F012         	goto	l5424
  3996   00254A                     u6490:
  3997   00254A  EFB7  F012         	goto	l5438
  3998   00254E                     l5430:
  3999                           
  4000                           ; BSR set to: 0
  4001                           ;MCP2221A.c: 180:     {;MCP2221A.c: 181:         longitude[long_counter] = usb_message[c
      +                          ounter];
  4002   00254E  0E6A               	movlw	low _usb_message
  4003   002550  25CE               	addwf	get_coords_usb@counter& (0+255),w,b
  4004   002552  6ED9               	movwf	fsr2l,c
  4005   002554  6ADA               	clrf	fsr2h,c
  4006   002556  0E02               	movlw	high _usb_message
  4007   002558  22DA               	addwfc	fsr2h,f,c
  4008   00255A  0EB1               	movlw	low get_coords_usb@longitude
  4009   00255C  25CD               	addwf	get_coords_usb@long_counter& (0+255),w,b
  4010   00255E  6EE1               	movwf	fsr1l,c
  4011   002560  6AE2               	clrf	fsr1h,c
  4012   002562  0E00               	movlw	high get_coords_usb@longitude
  4013   002564  22E2               	addwfc	fsr1h,f,c
  4014   002566  CFDF FFE7          	movff	indf2,indf1
  4015   00256A                     
  4016                           ; BSR set to: 0
  4017                           ;MCP2221A.c: 182:         long_counter++;
  4018   00256A  2BCD               	incf	get_coords_usb@long_counter& (0+255),f,b
  4019   00256C                     
  4020                           ; BSR set to: 0
  4021                           ;MCP2221A.c: 183:         counter++;
  4022   00256C  2BCE               	incf	get_coords_usb@counter& (0+255),f,b
  4023   00256E                     l5438:
  4024                           
  4025                           ; BSR set to: 0
  4026   00256E  0E6A               	movlw	low _usb_message
  4027   002570  25CE               	addwf	get_coords_usb@counter& (0+255),w,b
  4028   002572  6ED9               	movwf	fsr2l,c
  4029   002574  6ADA               	clrf	fsr2h,c
  4030   002576  0E02               	movlw	high _usb_message
  4031   002578  22DA               	addwfc	fsr2h,f,c
  4032   00257A  50DF               	movf	indf2,w,c
  4033   00257C  6F9A               	movwf	??_get_coords_usb& (0+255),b
  4034   00257E  0ED0               	movlw	208
  4035   002580  259A               	addwf	??_get_coords_usb& (0+255),w,b
  4036   002582  6F9B               	movwf	(??_get_coords_usb+1)& (0+255),b
  4037   002584  6B9C               	clrf	(??_get_coords_usb+2)& (0+255),b
  4038   002586  0EFF               	movlw	255
  4039   002588  239C               	addwfc	(??_get_coords_usb+2)& (0+255),f,b
  4040   00258A  519C               	movf	(??_get_coords_usb+2)& (0+255),w,b
  4041   00258C  E109               	bnz	u6500
  4042   00258E  0E0A               	movlw	10
  4043   002590  5D9B               	subwf	(??_get_coords_usb+1)& (0+255),w,b
  4044   002592  A0D8               	btfss	status,0,c
  4045   002594  EFCE  F012         	goto	u6501
  4046   002598  EFD0  F012         	goto	u6500
  4047   00259C                     u6501:
  4048   00259C  EFA7  F012         	goto	l5430
  4049   0025A0                     u6500:
  4050   0025A0                     
  4051                           ; BSR set to: 0
  4052   0025A0  0E6A               	movlw	low _usb_message
  4053   0025A2  25CE               	addwf	get_coords_usb@counter& (0+255),w,b
  4054   0025A4  6ED9               	movwf	fsr2l,c
  4055   0025A6  6ADA               	clrf	fsr2h,c
  4056   0025A8  0E02               	movlw	high _usb_message
  4057   0025AA  22DA               	addwfc	fsr2h,f,c
  4058   0025AC  0E2E               	movlw	46
  4059   0025AE  18DE               	xorwf	postinc2,w,c
  4060   0025B0  B4D8               	btfsc	status,2,c
  4061   0025B2  EFDD  F012         	goto	u6511
  4062   0025B6  EFDF  F012         	goto	u6510
  4063   0025BA                     u6511:
  4064   0025BA  EFA7  F012         	goto	l5430
  4065   0025BE                     u6510:
  4066   0025BE  EFE2  F012         	goto	l5446
  4067   0025C2                     l5442:
  4068                           
  4069                           ; BSR set to: 0
  4070                           ;MCP2221A.c: 188:         counter++;
  4071   0025C2  2BCE               	incf	get_coords_usb@counter& (0+255),f,b
  4072   0025C4                     l5446:
  4073                           
  4074                           ; BSR set to: 0
  4075   0025C4  0E6A               	movlw	low _usb_message
  4076   0025C6  25CE               	addwf	get_coords_usb@counter& (0+255),w,b
  4077   0025C8  6ED9               	movwf	fsr2l,c
  4078   0025CA  6ADA               	clrf	fsr2h,c
  4079   0025CC  0E02               	movlw	high _usb_message
  4080   0025CE  22DA               	addwfc	fsr2h,f,c
  4081   0025D0  50DF               	movf	indf2,w,c
  4082   0025D2  6F9A               	movwf	??_get_coords_usb& (0+255),b
  4083   0025D4  0ED0               	movlw	208
  4084   0025D6  259A               	addwf	??_get_coords_usb& (0+255),w,b
  4085   0025D8  6F9B               	movwf	(??_get_coords_usb+1)& (0+255),b
  4086   0025DA  6B9C               	clrf	(??_get_coords_usb+2)& (0+255),b
  4087   0025DC  0EFF               	movlw	255
  4088   0025DE  239C               	addwfc	(??_get_coords_usb+2)& (0+255),f,b
  4089   0025E0  519C               	movf	(??_get_coords_usb+2)& (0+255),w,b
  4090   0025E2  E107               	bnz	u6521
  4091   0025E4  0E0A               	movlw	10
  4092   0025E6  5D9B               	subwf	(??_get_coords_usb+1)& (0+255),w,b
  4093   0025E8  B0D8               	btfsc	status,0,c
  4094   0025EA  EFF9  F012         	goto	u6521
  4095   0025EE  EFFB  F012         	goto	u6520
  4096   0025F2                     u6521:
  4097   0025F2  EFE1  F012         	goto	l5442
  4098   0025F6                     u6520:
  4099   0025F6  EF0D  F013         	goto	l5456
  4100   0025FA                     l5448:
  4101                           
  4102                           ; BSR set to: 0
  4103                           ;MCP2221A.c: 192:     {;MCP2221A.c: 193:         longitude[long_counter] = usb_message[c
      +                          ounter];
  4104   0025FA  0E6A               	movlw	low _usb_message
  4105   0025FC  25CE               	addwf	get_coords_usb@counter& (0+255),w,b
  4106   0025FE  6ED9               	movwf	fsr2l,c
  4107   002600  6ADA               	clrf	fsr2h,c
  4108   002602  0E02               	movlw	high _usb_message
  4109   002604  22DA               	addwfc	fsr2h,f,c
  4110   002606  0EB1               	movlw	low get_coords_usb@longitude
  4111   002608  25CD               	addwf	get_coords_usb@long_counter& (0+255),w,b
  4112   00260A  6EE1               	movwf	fsr1l,c
  4113   00260C  6AE2               	clrf	fsr1h,c
  4114   00260E  0E00               	movlw	high get_coords_usb@longitude
  4115   002610  22E2               	addwfc	fsr1h,f,c
  4116   002612  CFDF FFE7          	movff	indf2,indf1
  4117   002616                     
  4118                           ; BSR set to: 0
  4119                           ;MCP2221A.c: 194:         long_counter++;
  4120   002616  2BCD               	incf	get_coords_usb@long_counter& (0+255),f,b
  4121   002618                     
  4122                           ; BSR set to: 0
  4123                           ;MCP2221A.c: 195:         counter++;
  4124   002618  2BCE               	incf	get_coords_usb@counter& (0+255),f,b
  4125   00261A                     l5456:
  4126                           
  4127                           ; BSR set to: 0
  4128   00261A  0E6A               	movlw	low _usb_message
  4129   00261C  25CE               	addwf	get_coords_usb@counter& (0+255),w,b
  4130   00261E  6ED9               	movwf	fsr2l,c
  4131   002620  6ADA               	clrf	fsr2h,c
  4132   002622  0E02               	movlw	high _usb_message
  4133   002624  22DA               	addwfc	fsr2h,f,c
  4134   002626  50DF               	movf	indf2,w,c
  4135   002628  6F9A               	movwf	??_get_coords_usb& (0+255),b
  4136   00262A  0ED0               	movlw	208
  4137   00262C  259A               	addwf	??_get_coords_usb& (0+255),w,b
  4138   00262E  6F9B               	movwf	(??_get_coords_usb+1)& (0+255),b
  4139   002630  6B9C               	clrf	(??_get_coords_usb+2)& (0+255),b
  4140   002632  0EFF               	movlw	255
  4141   002634  239C               	addwfc	(??_get_coords_usb+2)& (0+255),f,b
  4142   002636  519C               	movf	(??_get_coords_usb+2)& (0+255),w,b
  4143   002638  E109               	bnz	u6530
  4144   00263A  0E0A               	movlw	10
  4145   00263C  5D9B               	subwf	(??_get_coords_usb+1)& (0+255),w,b
  4146   00263E  A0D8               	btfss	status,0,c
  4147   002640  EF24  F013         	goto	u6531
  4148   002644  EF26  F013         	goto	u6530
  4149   002648                     u6531:
  4150   002648  EFFD  F012         	goto	l5448
  4151   00264C                     u6530:
  4152   00264C                     
  4153                           ; BSR set to: 0
  4154   00264C  0E6A               	movlw	low _usb_message
  4155   00264E  25CE               	addwf	get_coords_usb@counter& (0+255),w,b
  4156   002650  6ED9               	movwf	fsr2l,c
  4157   002652  6ADA               	clrf	fsr2h,c
  4158   002654  0E02               	movlw	high _usb_message
  4159   002656  22DA               	addwfc	fsr2h,f,c
  4160   002658  0E2E               	movlw	46
  4161   00265A  18DE               	xorwf	postinc2,w,c
  4162   00265C  B4D8               	btfsc	status,2,c
  4163   00265E  EF33  F013         	goto	u6541
  4164   002662  EF35  F013         	goto	u6540
  4165   002666                     u6541:
  4166   002666  EFFD  F012         	goto	l5448
  4167   00266A                     u6540:
  4168   00266A                     
  4169                           ; BSR set to: 0
  4170                           ;MCP2221A.c: 199:     msg_coords.longitude = (float) atof(longitude);
  4171   00266A  0EB1               	movlw	low get_coords_usb@longitude
  4172   00266C  6F8E               	movwf	atof@s& (0+255),b
  4173   00266E  0E00               	movlw	high get_coords_usb@longitude
  4174   002670  6F8F               	movwf	(atof@s+1)& (0+255),b
  4175   002672  EC29  F020         	call	_atof	;wreg free
  4176   002676  C08E  F0C5         	movff	?_atof,get_coords_usb@msg_coords
  4177   00267A  C08F  F0C6         	movff	?_atof+1,get_coords_usb@msg_coords+1
  4178   00267E  C090  F0C7         	movff	?_atof+2,get_coords_usb@msg_coords+2
  4179   002682  C091  F0C8         	movff	?_atof+3,get_coords_usb@msg_coords+3
  4180                           
  4181                           ;MCP2221A.c: 200:     msg_coords.latitude = (float) atof(latitude);
  4182   002686  0E9D               	movlw	low get_coords_usb@latitude
  4183   002688  0100               	movlb	0	; () banked
  4184   00268A  6F8E               	movwf	atof@s& (0+255),b
  4185   00268C  0E00               	movlw	high get_coords_usb@latitude
  4186   00268E  6F8F               	movwf	(atof@s+1)& (0+255),b
  4187   002690  EC29  F020         	call	_atof	;wreg free
  4188   002694  C08E  F0C9         	movff	?_atof,get_coords_usb@msg_coords+4
  4189   002698  C08F  F0CA         	movff	?_atof+1,get_coords_usb@msg_coords+5
  4190   00269C  C090  F0CB         	movff	?_atof+2,get_coords_usb@msg_coords+6
  4191   0026A0  C091  F0CC         	movff	?_atof+3,get_coords_usb@msg_coords+7
  4192   0026A4                     
  4193                           ;MCP2221A.c: 201:     return msg_coords;
  4194   0026A4  EE20  F0C5         	lfsr	2,get_coords_usb@msg_coords
  4195   0026A8  EE00  F092         	lfsr	0,?_get_coords_usb
  4196   0026AC  0E07               	movlw	7
  4197   0026AE                     u6551:
  4198   0026AE  CFDB FFEB          	movff	plusw2,plusw0
  4199   0026B2  06E8               	decf	wreg,f,c
  4200   0026B4  E2FC               	bc	u6551
  4201   0026B6  0012               	return		;funcret
  4202   0026B8                     __end_of_get_coords_usb:
  4203                           	callstack 0
  4204                           
  4205 ;; *************** function _atof *****************
  4206 ;; Defined at:
  4207 ;;		line 423 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strtof.c"
  4208 ;; Parameters:    Size  Location     Type
  4209 ;;  s               2   46[BANK0 ] PTR const unsigned char 
  4210 ;;		 -> get_coords_usb@latitude(20), get_coords_usb@longitude(20), 
  4211 ;; Auto vars:     Size  Location     Type
  4212 ;;		None
  4213 ;; Return value:  Size  Location     Type
  4214 ;;                  4   46[BANK0 ] PTR const unsigned char 
  4215 ;; Registers used:
  4216 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4217 ;; Tracked objects:
  4218 ;;		On entry : 0/0
  4219 ;;		On exit  : 0/0
  4220 ;;		Unchanged: 0/0
  4221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4222 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4225 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4226 ;;Total ram usage:        4 bytes
  4227 ;; Hardware stack levels used: 1
  4228 ;; Hardware stack levels required when called: 6
  4229 ;; This function calls:
  4230 ;;		_strtof
  4231 ;; This function is called by:
  4232 ;;		_get_coords_usb
  4233 ;; This function uses a non-reentrant model
  4234 ;;
  4235                           
  4236                           	psect	text15
  4237   004052                     __ptext15:
  4238                           	callstack 0
  4239   004052                     _atof:
  4240                           	callstack 22
  4241   004052  C08E  F079         	movff	atof@s,strtof@s
  4242   004056  C08F  F07A         	movff	atof@s+1,strtof@s+1
  4243   00405A  0E00               	movlw	0
  4244   00405C  0100               	movlb	0	; () banked
  4245   00405E  6F7B               	movwf	strtof@res& (0+255),b
  4246   004060  0E00               	movlw	0
  4247   004062  6F7C               	movwf	(strtof@res+1)& (0+255),b
  4248   004064  EC9C  F000         	call	_strtof	;wreg free
  4249   004068  C079  F08E         	movff	?_strtof,?_atof
  4250   00406C  C07A  F08F         	movff	?_strtof+1,?_atof+1
  4251   004070  C07B  F090         	movff	?_strtof+2,?_atof+2
  4252   004074  C07C  F091         	movff	?_strtof+3,?_atof+3
  4253   004078  0012               	return		;funcret
  4254   00407A                     __end_of_atof:
  4255                           	callstack 0
  4256                           
  4257 ;; *************** function _strtof *****************
  4258 ;; Defined at:
  4259 ;;		line 95 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strtof.c"
  4260 ;; Parameters:    Size  Location     Type
  4261 ;;  s               2   25[BANK0 ] PTR const unsigned char 
  4262 ;;		 -> get_coords_usb@latitude(20), get_coords_usb@longitude(20), 
  4263 ;;  res             2   27[BANK0 ] PTR PTR unsigned char 
  4264 ;;		 -> NULL(0), 
  4265 ;; Auto vars:     Size  Location     Type
  4266 ;;  _u              4   41[BANK0 ] struct .
  4267 ;;  eexp            2   39[BANK0 ] int 
  4268 ;;  expon           2   37[BANK0 ] int 
  4269 ;;  i               1   45[BANK0 ] unsigned char 
  4270 ;;  flags           1   36[BANK0 ] unsigned char 
  4271 ;;  digit           1   35[BANK0 ] unsigned char 
  4272 ;; Return value:  Size  Location     Type
  4273 ;;                  4   25[BANK0 ] float 
  4274 ;; Registers used:
  4275 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4276 ;; Tracked objects:
  4277 ;;		On entry : 0/0
  4278 ;;		On exit  : 0/0
  4279 ;;		Unchanged: 0/0
  4280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4281 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4282 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4283 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4284 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4285 ;;Total ram usage:       21 bytes
  4286 ;; Hardware stack levels used: 1
  4287 ;; Hardware stack levels required when called: 5
  4288 ;; This function calls:
  4289 ;;		___fldiv
  4290 ;;		___fleq
  4291 ;;		___flge
  4292 ;;		___flmul
  4293 ;;		___flneg
  4294 ;;		___lmul
  4295 ;;		___wmul
  4296 ;;		___xxtofl
  4297 ;;		_isdigit
  4298 ;;		_isspace
  4299 ;;		_isxdigit
  4300 ;;		_nanf
  4301 ;;		_toupper
  4302 ;; This function is called by:
  4303 ;;		_atof
  4304 ;; This function uses a non-reentrant model
  4305 ;;
  4306                           
  4307                           	psect	text16
  4308   000138                     __ptext16:
  4309                           	callstack 0
  4310   000138                     _strtof:
  4311                           	callstack 22
  4312   000138  0100               	movlb	0	; () banked
  4313   00013A  517B               	movf	strtof@res& (0+255),w,b
  4314   00013C  117C               	iorwf	(strtof@res+1)& (0+255),w,b
  4315   00013E  B4D8               	btfsc	status,2,c
  4316   000140  EFA4  F000         	goto	u5201
  4317   000144  EFA6  F000         	goto	u5200
  4318   000148                     u5201:
  4319   000148  EFB2  F000         	goto	l4742
  4320   00014C                     u5200:
  4321   00014C                     
  4322                           ; BSR set to: 0
  4323   00014C  C07B  FFD9         	movff	strtof@res,fsr2l
  4324   000150  C07C  FFDA         	movff	strtof@res+1,fsr2h
  4325   000154  C079  FFDE         	movff	strtof@s,postinc2
  4326   000158  C07A  FFDD         	movff	strtof@s+1,postdec2
  4327   00015C  EFB2  F000         	goto	l4742
  4328   000160                     l4738:
  4329                           
  4330                           ; BSR set to: 0
  4331   000160  4B79               	infsnz	strtof@s& (0+255),f,b
  4332   000162  2B7A               	incf	(strtof@s+1)& (0+255),f,b
  4333   000164                     l4742:
  4334                           
  4335                           ; BSR set to: 0
  4336   000164  C079  FFD9         	movff	strtof@s,fsr2l
  4337   000168  C07A  FFDA         	movff	strtof@s+1,fsr2h
  4338   00016C  0E20               	movlw	32
  4339   00016E  18DE               	xorwf	postinc2,w,c
  4340   000170  B4D8               	btfsc	status,2,c
  4341   000172  EFBD  F000         	goto	u5211
  4342   000176  EFC0  F000         	goto	u5210
  4343   00017A                     u5211:
  4344   00017A  0E01               	movlw	1
  4345   00017C  EFC1  F000         	goto	u5220
  4346   000180                     u5210:
  4347   000180  0E00               	movlw	0
  4348   000182                     u5220:
  4349   000182  6F87               	movwf	strtof@eexp& (0+255),b
  4350   000184  6B88               	clrf	(strtof@eexp+1)& (0+255),b
  4351   000186  5187               	movf	strtof@eexp& (0+255),w,b
  4352   000188  1188               	iorwf	(strtof@eexp+1)& (0+255),w,b
  4353   00018A  A4D8               	btfss	status,2,c
  4354   00018C  EFCA  F000         	goto	u5231
  4355   000190  EFCC  F000         	goto	u5230
  4356   000194                     u5231:
  4357   000194  EFB0  F000         	goto	l4738
  4358   000198                     u5230:
  4359   000198                     
  4360                           ; BSR set to: 0
  4361   000198  C079  FFD9         	movff	strtof@s,fsr2l
  4362   00019C  C07A  FFDA         	movff	strtof@s+1,fsr2h
  4363   0001A0  50DF               	movf	indf2,w,c
  4364   0001A2  6F7D               	movwf	??_strtof& (0+255),b
  4365   0001A4  517D               	movf	??_strtof& (0+255),w,b
  4366   0001A6  6F87               	movwf	strtof@eexp& (0+255),b
  4367   0001A8  6B88               	clrf	(strtof@eexp+1)& (0+255),b
  4368   0001AA  0EF7               	movlw	247
  4369   0001AC  2587               	addwf	strtof@eexp& (0+255),w,b
  4370   0001AE  6F7E               	movwf	(??_strtof+1)& (0+255),b
  4371   0001B0  0EFF               	movlw	255
  4372   0001B2  2188               	addwfc	(strtof@eexp+1)& (0+255),w,b
  4373   0001B4  6F7F               	movwf	(??_strtof+2)& (0+255),b
  4374   0001B6  517F               	movf	(??_strtof+2)& (0+255),w,b
  4375   0001B8  E109               	bnz	u5240
  4376   0001BA  0E05               	movlw	5
  4377   0001BC  5D7E               	subwf	(??_strtof+1)& (0+255),w,b
  4378   0001BE  A0D8               	btfss	status,0,c
  4379   0001C0  EFE4  F000         	goto	u5241
  4380   0001C4  EFE6  F000         	goto	u5240
  4381   0001C8                     u5241:
  4382   0001C8  EFB0  F000         	goto	l4738
  4383   0001CC                     u5240:
  4384   0001CC                     
  4385                           ; BSR set to: 0
  4386   0001CC  0E00               	movlw	0
  4387   0001CE  6F84               	movwf	strtof@flags& (0+255),b
  4388   0001D0                     
  4389                           ; BSR set to: 0
  4390   0001D0  0E2D               	movlw	45
  4391   0001D2  1987               	xorwf	strtof@eexp& (0+255),w,b
  4392   0001D4  1188               	iorwf	(strtof@eexp+1)& (0+255),w,b
  4393   0001D6  A4D8               	btfss	status,2,c
  4394   0001D8  EFF0  F000         	goto	u5251
  4395   0001DC  EFF2  F000         	goto	u5250
  4396   0001E0                     u5251:
  4397   0001E0  EFF8  F000         	goto	l4754
  4398   0001E4                     u5250:
  4399   0001E4                     
  4400                           ; BSR set to: 0
  4401   0001E4  0E01               	movlw	1
  4402   0001E6  6F84               	movwf	strtof@flags& (0+255),b
  4403   0001E8                     l4752:
  4404                           
  4405                           ; BSR set to: 0
  4406   0001E8  4B79               	infsnz	strtof@s& (0+255),f,b
  4407   0001EA  2B7A               	incf	(strtof@s+1)& (0+255),f,b
  4408   0001EC  EF04  F001         	goto	l4758
  4409   0001F0                     l4754:
  4410                           
  4411                           ; BSR set to: 0
  4412   0001F0  0E2B               	movlw	43
  4413   0001F2  1987               	xorwf	strtof@eexp& (0+255),w,b
  4414   0001F4  1188               	iorwf	(strtof@eexp+1)& (0+255),w,b
  4415   0001F6  A4D8               	btfss	status,2,c
  4416   0001F8  EF00  F001         	goto	u5261
  4417   0001FC  EF02  F001         	goto	u5260
  4418   000200                     u5261:
  4419   000200  EF04  F001         	goto	l4758
  4420   000204                     u5260:
  4421   000204  EFF4  F000         	goto	l4752
  4422   000208                     l4758:
  4423                           
  4424                           ; BSR set to: 0
  4425   000208  0E00               	movlw	0
  4426   00020A  6F8D               	movwf	strtof@i& (0+255),b
  4427   00020C  EF09  F001         	goto	l4762
  4428   000210                     l4760:
  4429                           
  4430                           ; BSR set to: 0
  4431   000210  2B8D               	incf	strtof@i& (0+255),f,b
  4432   000212                     l4762:
  4433                           
  4434                           ; BSR set to: 0
  4435   000212  518D               	movf	strtof@i& (0+255),w,b
  4436   000214  2579               	addwf	strtof@s& (0+255),w,b
  4437   000216  6ED9               	movwf	fsr2l,c
  4438   000218  0E00               	movlw	0
  4439   00021A  217A               	addwfc	(strtof@s+1)& (0+255),w,b
  4440   00021C  6EDA               	movwf	fsr2h,c
  4441   00021E  50DF               	movf	indf2,w,c
  4442   000220  B4D8               	btfsc	status,2,c
  4443   000222  EF15  F001         	goto	u5271
  4444   000226  EF17  F001         	goto	u5270
  4445   00022A                     u5271:
  4446   00022A  EF47  F001         	goto	l4768
  4447   00022E                     u5270:
  4448   00022E                     
  4449                           ; BSR set to: 0
  4450   00022E  518D               	movf	strtof@i& (0+255),w,b
  4451   000230  2579               	addwf	strtof@s& (0+255),w,b
  4452   000232  6ED9               	movwf	fsr2l,c
  4453   000234  0E00               	movlw	0
  4454   000236  217A               	addwfc	(strtof@s+1)& (0+255),w,b
  4455   000238  6EDA               	movwf	fsr2h,c
  4456   00023A  50DF               	movf	indf2,w,c
  4457   00023C  6F7D               	movwf	??_strtof& (0+255),b
  4458   00023E  0E57               	movlw	low STR_71
  4459   000240  258D               	addwf	strtof@i& (0+255),w,b
  4460   000242  6EF6               	movwf	tblptrl,c
  4461   000244  6AF7               	clrf	tblptrh,c
  4462   000246  0EFF               	movlw	high STR_71
  4463   000248  22F7               	addwfc	tblptrh,f,c
  4464   00024A                     	if	0	;There are less than 3 active tblptr bytes
  4465   00024A                     	endif
  4466   00024A  0008               	tblrd		*
  4467   00024C  50F5               	movf	tablat,w,c
  4468   00024E  197D               	xorwf	??_strtof& (0+255),w,b
  4469   000250  B4D8               	btfsc	status,2,c
  4470   000252  EF2D  F001         	goto	u5281
  4471   000256  EF2F  F001         	goto	u5280
  4472   00025A                     u5281:
  4473   00025A  EF08  F001         	goto	l4760
  4474   00025E                     u5280:
  4475   00025E                     
  4476                           ; BSR set to: 0
  4477   00025E  518D               	movf	strtof@i& (0+255),w,b
  4478   000260  2579               	addwf	strtof@s& (0+255),w,b
  4479   000262  6ED9               	movwf	fsr2l,c
  4480   000264  0E00               	movlw	0
  4481   000266  217A               	addwfc	(strtof@s+1)& (0+255),w,b
  4482   000268  6EDA               	movwf	fsr2h,c
  4483   00026A  50DF               	movf	indf2,w,c
  4484   00026C  6F7D               	movwf	??_strtof& (0+255),b
  4485   00026E  0E4E               	movlw	low STR_72
  4486   000270  258D               	addwf	strtof@i& (0+255),w,b
  4487   000272  6EF6               	movwf	tblptrl,c
  4488   000274  6AF7               	clrf	tblptrh,c
  4489   000276  0EFF               	movlw	high STR_72
  4490   000278  22F7               	addwfc	tblptrh,f,c
  4491   00027A                     	if	0	;There are less than 3 active tblptr bytes
  4492   00027A                     	endif
  4493   00027A  0008               	tblrd		*
  4494   00027C  50F5               	movf	tablat,w,c
  4495   00027E  197D               	xorwf	??_strtof& (0+255),w,b
  4496   000280  B4D8               	btfsc	status,2,c
  4497   000282  EF45  F001         	goto	u5291
  4498   000286  EF47  F001         	goto	u5290
  4499   00028A                     u5291:
  4500   00028A  EF08  F001         	goto	l4760
  4501   00028E                     u5290:
  4502   00028E                     l4768:
  4503                           
  4504                           ; BSR set to: 0
  4505   00028E  0E02               	movlw	2
  4506   000290  658D               	cpfsgt	strtof@i& (0+255),b
  4507   000292  EF4D  F001         	goto	u5301
  4508   000296  EF4F  F001         	goto	u5300
  4509   00029A                     u5301:
  4510   00029A  EF7B  F001         	goto	l4780
  4511   00029E                     u5300:
  4512   00029E                     
  4513                           ; BSR set to: 0
  4514   00029E  0E00               	movlw	0
  4515   0002A0  6F89               	movwf	strtof@_u& (0+255),b
  4516   0002A2  0E00               	movlw	0
  4517   0002A4  6F8A               	movwf	(strtof@_u+1)& (0+255),b
  4518   0002A6  0E80               	movlw	128
  4519   0002A8  6F8B               	movwf	(strtof@_u+2)& (0+255),b
  4520   0002AA  0E7F               	movlw	127
  4521   0002AC  6F8C               	movwf	(strtof@_u+3)& (0+255),b
  4522   0002AE                     
  4523                           ; BSR set to: 0
  4524   0002AE  517B               	movf	strtof@res& (0+255),w,b
  4525   0002B0  117C               	iorwf	(strtof@res+1)& (0+255),w,b
  4526   0002B2  B4D8               	btfsc	status,2,c
  4527   0002B4  EF5E  F001         	goto	u5311
  4528   0002B8  EF60  F001         	goto	u5310
  4529   0002BC                     u5311:
  4530   0002BC  EFAE  F008         	goto	l1485
  4531   0002C0                     u5310:
  4532   0002C0                     
  4533                           ; BSR set to: 0
  4534   0002C0  0E08               	movlw	8
  4535   0002C2  198D               	xorwf	strtof@i& (0+255),w,b
  4536   0002C4  B4D8               	btfsc	status,2,c
  4537   0002C6  EF67  F001         	goto	u5321
  4538   0002CA  EF69  F001         	goto	u5320
  4539   0002CE                     u5321:
  4540   0002CE  EF6B  F001         	goto	l4778
  4541   0002D2                     u5320:
  4542   0002D2                     
  4543                           ; BSR set to: 0
  4544   0002D2  0E03               	movlw	3
  4545   0002D4  6F8D               	movwf	strtof@i& (0+255),b
  4546   0002D6                     l4778:
  4547                           
  4548                           ; BSR set to: 0
  4549   0002D6  518D               	movf	strtof@i& (0+255),w,b
  4550   0002D8  2579               	addwf	strtof@s& (0+255),w,b
  4551   0002DA  6F7D               	movwf	??_strtof& (0+255),b
  4552   0002DC  0E00               	movlw	0
  4553   0002DE  217A               	addwfc	(strtof@s+1)& (0+255),w,b
  4554   0002E0  6F7E               	movwf	(??_strtof+1)& (0+255),b
  4555   0002E2  C07B  FFD9         	movff	strtof@res,fsr2l
  4556   0002E6  C07C  FFDA         	movff	strtof@res+1,fsr2h
  4557   0002EA  C07D  FFDE         	movff	??_strtof,postinc2
  4558   0002EE  C07E  FFDD         	movff	??_strtof+1,postdec2
  4559   0002F2  EFAE  F008         	goto	l1485
  4560   0002F6                     l4780:
  4561                           
  4562                           ; BSR set to: 0
  4563   0002F6  0E00               	movlw	0
  4564   0002F8  6F8D               	movwf	strtof@i& (0+255),b
  4565   0002FA  EF80  F001         	goto	l4784
  4566   0002FE                     l4782:
  4567                           
  4568                           ; BSR set to: 0
  4569   0002FE  2B8D               	incf	strtof@i& (0+255),f,b
  4570   000300                     l4784:
  4571                           
  4572                           ; BSR set to: 0
  4573   000300  518D               	movf	strtof@i& (0+255),w,b
  4574   000302  2579               	addwf	strtof@s& (0+255),w,b
  4575   000304  6ED9               	movwf	fsr2l,c
  4576   000306  0E00               	movlw	0
  4577   000308  217A               	addwfc	(strtof@s+1)& (0+255),w,b
  4578   00030A  6EDA               	movwf	fsr2h,c
  4579   00030C  50DF               	movf	indf2,w,c
  4580   00030E  B4D8               	btfsc	status,2,c
  4581   000310  EF8C  F001         	goto	u5331
  4582   000314  EF8E  F001         	goto	u5330
  4583   000318                     u5331:
  4584   000318  EFBE  F001         	goto	l4790
  4585   00031C                     u5330:
  4586   00031C                     
  4587                           ; BSR set to: 0
  4588   00031C  518D               	movf	strtof@i& (0+255),w,b
  4589   00031E  2579               	addwf	strtof@s& (0+255),w,b
  4590   000320  6ED9               	movwf	fsr2l,c
  4591   000322  0E00               	movlw	0
  4592   000324  217A               	addwfc	(strtof@s+1)& (0+255),w,b
  4593   000326  6EDA               	movwf	fsr2h,c
  4594   000328  50DF               	movf	indf2,w,c
  4595   00032A  6F7D               	movwf	??_strtof& (0+255),b
  4596   00032C  0ED6               	movlw	low STR_76
  4597   00032E  258D               	addwf	strtof@i& (0+255),w,b
  4598   000330  6EF6               	movwf	tblptrl,c
  4599   000332  6AF7               	clrf	tblptrh,c
  4600   000334  0EFF               	movlw	high STR_76
  4601   000336  22F7               	addwfc	tblptrh,f,c
  4602   000338                     	if	0	;There are less than 3 active tblptr bytes
  4603   000338                     	endif
  4604   000338  0008               	tblrd		*
  4605   00033A  50F5               	movf	tablat,w,c
  4606   00033C  197D               	xorwf	??_strtof& (0+255),w,b
  4607   00033E  B4D8               	btfsc	status,2,c
  4608   000340  EFA4  F001         	goto	u5341
  4609   000344  EFA6  F001         	goto	u5340
  4610   000348                     u5341:
  4611   000348  EF7F  F001         	goto	l4782
  4612   00034C                     u5340:
  4613   00034C                     
  4614                           ; BSR set to: 0
  4615   00034C  518D               	movf	strtof@i& (0+255),w,b
  4616   00034E  2579               	addwf	strtof@s& (0+255),w,b
  4617   000350  6ED9               	movwf	fsr2l,c
  4618   000352  0E00               	movlw	0
  4619   000354  217A               	addwfc	(strtof@s+1)& (0+255),w,b
  4620   000356  6EDA               	movwf	fsr2h,c
  4621   000358  50DF               	movf	indf2,w,c
  4622   00035A  6F7D               	movwf	??_strtof& (0+255),b
  4623   00035C  0ECE               	movlw	low STR_77
  4624   00035E  258D               	addwf	strtof@i& (0+255),w,b
  4625   000360  6EF6               	movwf	tblptrl,c
  4626   000362  6AF7               	clrf	tblptrh,c
  4627   000364  0EFF               	movlw	high STR_77
  4628   000366  22F7               	addwfc	tblptrh,f,c
  4629   000368                     	if	0	;There are less than 3 active tblptr bytes
  4630   000368                     	endif
  4631   000368  0008               	tblrd		*
  4632   00036A  50F5               	movf	tablat,w,c
  4633   00036C  197D               	xorwf	??_strtof& (0+255),w,b
  4634   00036E  B4D8               	btfsc	status,2,c
  4635   000370  EFBC  F001         	goto	u5351
  4636   000374  EFBE  F001         	goto	u5350
  4637   000378                     u5351:
  4638   000378  EF7F  F001         	goto	l4782
  4639   00037C                     u5350:
  4640   00037C                     l4790:
  4641                           
  4642                           ; BSR set to: 0
  4643   00037C  0E03               	movlw	3
  4644   00037E  198D               	xorwf	strtof@i& (0+255),w,b
  4645   000380  A4D8               	btfss	status,2,c
  4646   000382  EFC5  F001         	goto	u5361
  4647   000386  EFC7  F001         	goto	u5360
  4648   00038A                     u5361:
  4649   00038A  EF36  F002         	goto	l4814
  4650   00038E                     u5360:
  4651   00038E                     
  4652                           ; BSR set to: 0
  4653   00038E  0E71               	movlw	low (STR_13+8)
  4654   000390  6F60               	movwf	nanf@s& (0+255),b
  4655   000392  0EFF               	movlw	high (STR_13+8)
  4656   000394  6F61               	movwf	(nanf@s+1)& (0+255),b
  4657   000396  EC51  F020         	call	_nanf	;wreg free
  4658   00039A  C060  F089         	movff	?_nanf,strtof@_u
  4659   00039E  C061  F08A         	movff	?_nanf+1,strtof@_u+1
  4660   0003A2  C062  F08B         	movff	?_nanf+2,strtof@_u+2
  4661   0003A6  C063  F08C         	movff	?_nanf+3,strtof@_u+3
  4662   0003AA  0100               	movlb	0	; () banked
  4663   0003AC  517B               	movf	strtof@res& (0+255),w,b
  4664   0003AE  117C               	iorwf	(strtof@res+1)& (0+255),w,b
  4665   0003B0  B4D8               	btfsc	status,2,c
  4666   0003B2  EFDD  F001         	goto	u5371
  4667   0003B6  EFDF  F001         	goto	u5370
  4668   0003BA                     u5371:
  4669   0003BA  EFAE  F008         	goto	l1485
  4670   0003BE                     u5370:
  4671   0003BE                     
  4672                           ; BSR set to: 0
  4673   0003BE  518D               	movf	strtof@i& (0+255),w,b
  4674   0003C0  2779               	addwf	strtof@s& (0+255),f,b
  4675   0003C2  0E00               	movlw	0
  4676   0003C4  237A               	addwfc	(strtof@s+1)& (0+255),f,b
  4677   0003C6                     
  4678                           ; BSR set to: 0
  4679   0003C6  C079  FFD9         	movff	strtof@s,fsr2l
  4680   0003CA  C07A  FFDA         	movff	strtof@s+1,fsr2h
  4681   0003CE  0E28               	movlw	40
  4682   0003D0  18DE               	xorwf	postinc2,w,c
  4683   0003D2  A4D8               	btfss	status,2,c
  4684   0003D4  EFEE  F001         	goto	u5381
  4685   0003D8  EFF0  F001         	goto	u5380
  4686   0003DC                     u5381:
  4687   0003DC  EF2C  F002         	goto	l4812
  4688   0003E0                     u5380:
  4689   0003E0                     
  4690                           ; BSR set to: 0
  4691   0003E0  0E00               	movlw	0
  4692   0003E2  6F8D               	movwf	strtof@i& (0+255),b
  4693   0003E4  EFF5  F001         	goto	l4804
  4694   0003E8                     l4802:
  4695                           
  4696                           ; BSR set to: 0
  4697   0003E8  2B8D               	incf	strtof@i& (0+255),f,b
  4698   0003EA                     l4804:
  4699                           
  4700                           ; BSR set to: 0
  4701   0003EA  518D               	movf	strtof@i& (0+255),w,b
  4702   0003EC  2579               	addwf	strtof@s& (0+255),w,b
  4703   0003EE  6ED9               	movwf	fsr2l,c
  4704   0003F0  0E00               	movlw	0
  4705   0003F2  217A               	addwfc	(strtof@s+1)& (0+255),w,b
  4706   0003F4  6EDA               	movwf	fsr2h,c
  4707   0003F6  50DF               	movf	indf2,w,c
  4708   0003F8  B4D8               	btfsc	status,2,c
  4709   0003FA  EF01  F002         	goto	u5391
  4710   0003FE  EF03  F002         	goto	u5390
  4711   000402                     u5391:
  4712   000402  EF12  F002         	goto	l4808
  4713   000406                     u5390:
  4714   000406                     
  4715                           ; BSR set to: 0
  4716   000406  518D               	movf	strtof@i& (0+255),w,b
  4717   000408  2579               	addwf	strtof@s& (0+255),w,b
  4718   00040A  6ED9               	movwf	fsr2l,c
  4719   00040C  0E00               	movlw	0
  4720   00040E  217A               	addwfc	(strtof@s+1)& (0+255),w,b
  4721   000410  6EDA               	movwf	fsr2h,c
  4722   000412  0E29               	movlw	41
  4723   000414  18DE               	xorwf	postinc2,w,c
  4724   000416  A4D8               	btfss	status,2,c
  4725   000418  EF10  F002         	goto	u5401
  4726   00041C  EF12  F002         	goto	u5400
  4727   000420                     u5401:
  4728   000420  EFF4  F001         	goto	l4802
  4729   000424                     u5400:
  4730   000424                     l4808:
  4731                           
  4732                           ; BSR set to: 0
  4733   000424  518D               	movf	strtof@i& (0+255),w,b
  4734   000426  2579               	addwf	strtof@s& (0+255),w,b
  4735   000428  6ED9               	movwf	fsr2l,c
  4736   00042A  0E00               	movlw	0
  4737   00042C  217A               	addwfc	(strtof@s+1)& (0+255),w,b
  4738   00042E  6EDA               	movwf	fsr2h,c
  4739   000430  0E29               	movlw	41
  4740   000432  18DE               	xorwf	postinc2,w,c
  4741   000434  A4D8               	btfss	status,2,c
  4742   000436  EF1F  F002         	goto	u5411
  4743   00043A  EF21  F002         	goto	u5410
  4744   00043E                     u5411:
  4745   00043E  EF2C  F002         	goto	l4812
  4746   000442                     u5410:
  4747   000442                     
  4748                           ; BSR set to: 0
  4749   000442  518D               	movf	strtof@i& (0+255),w,b
  4750   000444  6F7D               	movwf	??_strtof& (0+255),b
  4751   000446  6B7E               	clrf	(??_strtof+1)& (0+255),b
  4752   000448  0E01               	movlw	1
  4753   00044A  277D               	addwf	??_strtof& (0+255),f,b
  4754   00044C  0E00               	movlw	0
  4755   00044E  237E               	addwfc	(??_strtof+1)& (0+255),f,b
  4756   000450  517D               	movf	??_strtof& (0+255),w,b
  4757   000452  2779               	addwf	strtof@s& (0+255),f,b
  4758   000454  517E               	movf	(??_strtof+1)& (0+255),w,b
  4759   000456  237A               	addwfc	(strtof@s+1)& (0+255),f,b
  4760   000458                     l4812:
  4761                           
  4762                           ; BSR set to: 0
  4763   000458  C07B  FFD9         	movff	strtof@res,fsr2l
  4764   00045C  C07C  FFDA         	movff	strtof@res+1,fsr2h
  4765   000460  C079  FFDE         	movff	strtof@s,postinc2
  4766   000464  C07A  FFDD         	movff	strtof@s+1,postdec2
  4767   000468  EFAE  F008         	goto	l1485
  4768   00046C                     l4814:
  4769                           
  4770                           ; BSR set to: 0
  4771   00046C  0E00               	movlw	0
  4772   00046E  6F88               	movwf	(strtof@eexp+1)& (0+255),b
  4773   000470  0E00               	movlw	0
  4774   000472  6F87               	movwf	strtof@eexp& (0+255),b
  4775   000474  0E00               	movlw	0
  4776   000476  6F89               	movwf	strtof@_u& (0+255),b
  4777   000478  0E00               	movlw	0
  4778   00047A  6F8A               	movwf	(strtof@_u+1)& (0+255),b
  4779   00047C  0E00               	movlw	0
  4780   00047E  6F8B               	movwf	(strtof@_u+2)& (0+255),b
  4781   000480  0E00               	movlw	0
  4782   000482  6F8C               	movwf	(strtof@_u+3)& (0+255),b
  4783   000484  0E00               	movlw	0
  4784   000486  6F86               	movwf	(strtof@expon+1)& (0+255),b
  4785   000488  0E00               	movlw	0
  4786   00048A  6F85               	movwf	strtof@expon& (0+255),b
  4787   00048C  0E00               	movlw	0
  4788   00048E  6F8D               	movwf	strtof@i& (0+255),b
  4789   000490  EF4B  F002         	goto	l4818
  4790   000494                     l4816:
  4791                           
  4792                           ; BSR set to: 0
  4793   000494  2B8D               	incf	strtof@i& (0+255),f,b
  4794   000496                     l4818:
  4795                           
  4796                           ; BSR set to: 0
  4797   000496  518D               	movf	strtof@i& (0+255),w,b
  4798   000498  2579               	addwf	strtof@s& (0+255),w,b
  4799   00049A  6ED9               	movwf	fsr2l,c
  4800   00049C  0E00               	movlw	0
  4801   00049E  217A               	addwfc	(strtof@s+1)& (0+255),w,b
  4802   0004A0  6EDA               	movwf	fsr2h,c
  4803   0004A2  0E30               	movlw	48
  4804   0004A4  18DE               	xorwf	postinc2,w,c
  4805   0004A6  B4D8               	btfsc	status,2,c
  4806   0004A8  EF58  F002         	goto	u5421
  4807   0004AC  EF5A  F002         	goto	u5420
  4808   0004B0                     u5421:
  4809   0004B0  EF4A  F002         	goto	l4816
  4810   0004B4                     u5420:
  4811   0004B4                     
  4812                           ; BSR set to: 0
  4813   0004B4  518D               	movf	strtof@i& (0+255),w,b
  4814   0004B6  B4D8               	btfsc	status,2,c
  4815   0004B8  EF60  F002         	goto	u5431
  4816   0004BC  EF62  F002         	goto	u5430
  4817   0004C0                     u5431:
  4818   0004C0  EFCB  F005         	goto	l1570
  4819   0004C4                     u5430:
  4820   0004C4                     
  4821                           ; BSR set to: 0
  4822   0004C4  518D               	movf	strtof@i& (0+255),w,b
  4823   0004C6  2579               	addwf	strtof@s& (0+255),w,b
  4824   0004C8  6ED9               	movwf	fsr2l,c
  4825   0004CA  0E00               	movlw	0
  4826   0004CC  217A               	addwfc	(strtof@s+1)& (0+255),w,b
  4827   0004CE  6EDA               	movwf	fsr2h,c
  4828   0004D0  0E78               	movlw	120
  4829   0004D2  18DE               	xorwf	postinc2,w,c
  4830   0004D4  B4D8               	btfsc	status,2,c
  4831   0004D6  EF6F  F002         	goto	u5441
  4832   0004DA  EF71  F002         	goto	u5440
  4833   0004DE                     u5441:
  4834   0004DE  EF80  F002         	goto	l4826
  4835   0004E2                     u5440:
  4836   0004E2                     
  4837                           ; BSR set to: 0
  4838   0004E2  518D               	movf	strtof@i& (0+255),w,b
  4839   0004E4  2579               	addwf	strtof@s& (0+255),w,b
  4840   0004E6  6ED9               	movwf	fsr2l,c
  4841   0004E8  0E00               	movlw	0
  4842   0004EA  217A               	addwfc	(strtof@s+1)& (0+255),w,b
  4843   0004EC  6EDA               	movwf	fsr2h,c
  4844   0004EE  0E58               	movlw	88
  4845   0004F0  18DE               	xorwf	postinc2,w,c
  4846   0004F2  A4D8               	btfss	status,2,c
  4847   0004F4  EF7E  F002         	goto	u5451
  4848   0004F8  EF80  F002         	goto	u5450
  4849   0004FC                     u5451:
  4850   0004FC  EFCB  F005         	goto	l1570
  4851   000500                     u5450:
  4852   000500                     l4826:
  4853                           
  4854                           ; BSR set to: 0
  4855   000500  518D               	movf	strtof@i& (0+255),w,b
  4856   000502  6F7D               	movwf	??_strtof& (0+255),b
  4857   000504  6B7E               	clrf	(??_strtof+1)& (0+255),b
  4858   000506  0E01               	movlw	1
  4859   000508  277D               	addwf	??_strtof& (0+255),f,b
  4860   00050A  0E00               	movlw	0
  4861   00050C  237E               	addwfc	(??_strtof+1)& (0+255),f,b
  4862   00050E  517D               	movf	??_strtof& (0+255),w,b
  4863   000510  2779               	addwf	strtof@s& (0+255),f,b
  4864   000512  517E               	movf	(??_strtof+1)& (0+255),w,b
  4865   000514  237A               	addwfc	(strtof@s+1)& (0+255),f,b
  4866   000516                     
  4867                           ; BSR set to: 0
  4868   000516  0E00               	movlw	0
  4869   000518  6F8D               	movwf	strtof@i& (0+255),b
  4870   00051A  EF90  F002         	goto	l4832
  4871   00051E                     l4830:
  4872                           
  4873                           ; BSR set to: 0
  4874   00051E  2B8D               	incf	strtof@i& (0+255),f,b
  4875   000520                     l4832:
  4876                           
  4877                           ; BSR set to: 0
  4878   000520  518D               	movf	strtof@i& (0+255),w,b
  4879   000522  2579               	addwf	strtof@s& (0+255),w,b
  4880   000524  6ED9               	movwf	fsr2l,c
  4881   000526  0E00               	movlw	0
  4882   000528  217A               	addwfc	(strtof@s+1)& (0+255),w,b
  4883   00052A  6EDA               	movwf	fsr2h,c
  4884   00052C  0E30               	movlw	48
  4885   00052E  18DE               	xorwf	postinc2,w,c
  4886   000530  B4D8               	btfsc	status,2,c
  4887   000532  EF9D  F002         	goto	u5461
  4888   000536  EF9F  F002         	goto	u5460
  4889   00053A                     u5461:
  4890   00053A  EF8F  F002         	goto	l4830
  4891   00053E                     u5460:
  4892   00053E                     
  4893                           ; BSR set to: 0
  4894   00053E  0E00               	movlw	0
  4895   000540  6F8D               	movwf	strtof@i& (0+255),b
  4896   000542                     l4836:
  4897                           
  4898                           ; BSR set to: 0
  4899   000542  518D               	movf	strtof@i& (0+255),w,b
  4900   000544  2579               	addwf	strtof@s& (0+255),w,b
  4901   000546  6ED9               	movwf	fsr2l,c
  4902   000548  0E00               	movlw	0
  4903   00054A  217A               	addwfc	(strtof@s+1)& (0+255),w,b
  4904   00054C  6EDA               	movwf	fsr2h,c
  4905   00054E  0E70               	movlw	112
  4906   000550  18DE               	xorwf	postinc2,w,c
  4907   000552  B4D8               	btfsc	status,2,c
  4908   000554  EFAE  F002         	goto	u5471
  4909   000558  EFB0  F002         	goto	u5470
  4910   00055C                     u5471:
  4911   00055C  EF20  F004         	goto	l4906
  4912   000560                     u5470:
  4913   000560                     
  4914                           ; BSR set to: 0
  4915   000560  518D               	movf	strtof@i& (0+255),w,b
  4916   000562  2579               	addwf	strtof@s& (0+255),w,b
  4917   000564  6ED9               	movwf	fsr2l,c
  4918   000566  0E00               	movlw	0
  4919   000568  217A               	addwfc	(strtof@s+1)& (0+255),w,b
  4920   00056A  6EDA               	movwf	fsr2h,c
  4921   00056C  0E50               	movlw	80
  4922   00056E  18DE               	xorwf	postinc2,w,c
  4923   000570  A4D8               	btfss	status,2,c
  4924   000572  EFBD  F002         	goto	u5481
  4925   000576  EFBF  F002         	goto	u5480
  4926   00057A                     u5481:
  4927   00057A  EFC1  F002         	goto	l4842
  4928   00057E                     u5480:
  4929   00057E  EF20  F004         	goto	l4906
  4930   000582                     l4842:
  4931                           
  4932                           ; BSR set to: 0
  4933   000582  518D               	movf	strtof@i& (0+255),w,b
  4934   000584  2579               	addwf	strtof@s& (0+255),w,b
  4935   000586  6ED9               	movwf	fsr2l,c
  4936   000588  0E00               	movlw	0
  4937   00058A  217A               	addwfc	(strtof@s+1)& (0+255),w,b
  4938   00058C  6EDA               	movwf	fsr2h,c
  4939   00058E  0E2E               	movlw	46
  4940   000590  18DE               	xorwf	postinc2,w,c
  4941   000592  A4D8               	btfss	status,2,c
  4942   000594  EFCE  F002         	goto	u5491
  4943   000598  EFD0  F002         	goto	u5490
  4944   00059C                     u5491:
  4945   00059C  EFD4  F002         	goto	l4848
  4946   0005A0                     u5490:
  4947   0005A0                     
  4948                           ; BSR set to: 0
  4949   0005A0  8984               	bsf	strtof@flags& (0+255),4,b
  4950   0005A2  2B8D               	incf	strtof@i& (0+255),f,b
  4951   0005A4  EF20  F004         	goto	l4906
  4952   0005A8                     l4848:
  4953                           
  4954                           ; BSR set to: 0
  4955   0005A8  518D               	movf	strtof@i& (0+255),w,b
  4956   0005AA  2579               	addwf	strtof@s& (0+255),w,b
  4957   0005AC  6ED9               	movwf	fsr2l,c
  4958   0005AE  0E00               	movlw	0
  4959   0005B0  217A               	addwfc	(strtof@s+1)& (0+255),w,b
  4960   0005B2  6EDA               	movwf	fsr2h,c
  4961   0005B4  50DF               	movf	indf2,w,c
  4962   0005B6  6F7D               	movwf	??_strtof& (0+255),b
  4963   0005B8  517D               	movf	??_strtof& (0+255),w,b
  4964   0005BA  6F64               	movwf	isxdigit@c& (0+255),b
  4965   0005BC  6B65               	clrf	(isxdigit@c+1)& (0+255),b
  4966   0005BE  EC80  F01D         	call	_isxdigit	;wreg free
  4967   0005C2  0100               	movlb	0	; () banked
  4968   0005C4  5164               	movf	?_isxdigit& (0+255),w,b
  4969   0005C6  1165               	iorwf	(?_isxdigit+1)& (0+255),w,b
  4970   0005C8  B4D8               	btfsc	status,2,c
  4971   0005CA  EFE9  F002         	goto	u5501
  4972   0005CE  EFEB  F002         	goto	u5500
  4973   0005D2                     u5501:
  4974   0005D2  EF57  F003         	goto	l4868
  4975   0005D6                     u5500:
  4976   0005D6                     
  4977                           ; BSR set to: 0
  4978   0005D6  0E00               	movlw	0
  4979   0005D8  6F83               	movwf	strtof@digit& (0+255),b
  4980   0005DA                     
  4981                           ; BSR set to: 0
  4982   0005DA  518D               	movf	strtof@i& (0+255),w,b
  4983   0005DC  2579               	addwf	strtof@s& (0+255),w,b
  4984   0005DE  6ED9               	movwf	fsr2l,c
  4985   0005E0  0E00               	movlw	0
  4986   0005E2  217A               	addwfc	(strtof@s+1)& (0+255),w,b
  4987   0005E4  6EDA               	movwf	fsr2h,c
  4988   0005E6  50DF               	movf	indf2,w,c
  4989   0005E8  6F7D               	movwf	??_strtof& (0+255),b
  4990   0005EA  0ED0               	movlw	208
  4991   0005EC  257D               	addwf	??_strtof& (0+255),w,b
  4992   0005EE  6F7E               	movwf	(??_strtof+1)& (0+255),b
  4993   0005F0  6B7F               	clrf	(??_strtof+2)& (0+255),b
  4994   0005F2  0EFF               	movlw	255
  4995   0005F4  237F               	addwfc	(??_strtof+2)& (0+255),f,b
  4996   0005F6  517F               	movf	(??_strtof+2)& (0+255),w,b
  4997   0005F8  E107               	bnz	u5511
  4998   0005FA  0E0A               	movlw	10
  4999   0005FC  5D7E               	subwf	(??_strtof+1)& (0+255),w,b
  5000   0005FE  B0D8               	btfsc	status,0,c
  5001   000600  EF04  F003         	goto	u5511
  5002   000604  EF06  F003         	goto	u5510
  5003   000608                     u5511:
  5004   000608  EF11  F003         	goto	l4858
  5005   00060C                     u5510:
  5006   00060C                     
  5007                           ; BSR set to: 0
  5008   00060C  518D               	movf	strtof@i& (0+255),w,b
  5009   00060E  2579               	addwf	strtof@s& (0+255),w,b
  5010   000610  6ED9               	movwf	fsr2l,c
  5011   000612  0E00               	movlw	0
  5012   000614  217A               	addwfc	(strtof@s+1)& (0+255),w,b
  5013   000616  6EDA               	movwf	fsr2h,c
  5014   000618  50DF               	movf	indf2,w,c
  5015   00061A  0FD0               	addlw	208
  5016   00061C  6F83               	movwf	strtof@digit& (0+255),b
  5017   00061E  EF22  F003         	goto	l4860
  5018   000622                     l4858:
  5019                           
  5020                           ; BSR set to: 0
  5021   000622  518D               	movf	strtof@i& (0+255),w,b
  5022   000624  2579               	addwf	strtof@s& (0+255),w,b
  5023   000626  6ED9               	movwf	fsr2l,c
  5024   000628  0E00               	movlw	0
  5025   00062A  217A               	addwfc	(strtof@s+1)& (0+255),w,b
  5026   00062C  6EDA               	movwf	fsr2h,c
  5027   00062E  50DF               	movf	indf2,w,c
  5028   000630  6F7D               	movwf	??_strtof& (0+255),b
  5029   000632  517D               	movf	??_strtof& (0+255),w,b
  5030   000634  6F64               	movwf	toupper@c& (0+255),b
  5031   000636  6B65               	clrf	(toupper@c+1)& (0+255),b
  5032   000638  EC92  F01F         	call	_toupper	;wreg free
  5033   00063C  0100               	movlb	0	; () banked
  5034   00063E  5164               	movf	?_toupper& (0+255),w,b
  5035   000640  0FC9               	addlw	201
  5036   000642  6F83               	movwf	strtof@digit& (0+255),b
  5037   000644                     l4860:
  5038                           
  5039                           ; BSR set to: 0
  5040   000644  BF88               	btfsc	(strtof@eexp+1)& (0+255),7,b
  5041   000646  EF30  F003         	goto	u5520
  5042   00064A  5188               	movf	(strtof@eexp+1)& (0+255),w,b
  5043   00064C  E107               	bnz	u5521
  5044   00064E  0E08               	movlw	8
  5045   000650  5D87               	subwf	strtof@eexp& (0+255),w,b
  5046   000652  B0D8               	btfsc	status,0,c
  5047   000654  EF2E  F003         	goto	u5521
  5048   000658  EF30  F003         	goto	u5520
  5049   00065C                     u5521:
  5050   00065C  EF4F  F003         	goto	l4864
  5051   000660                     u5520:
  5052   000660                     
  5053                           ; BSR set to: 0
  5054   000660  5187               	movf	strtof@eexp& (0+255),w,b
  5055   000662  0807               	sublw	7
  5056   000664  6F7D               	movwf	??_strtof& (0+255),b
  5057   000666  90D8               	bcf	status,0,c
  5058   000668  377D               	rlcf	??_strtof& (0+255),f,b
  5059   00066A  90D8               	bcf	status,0,c
  5060   00066C  377D               	rlcf	??_strtof& (0+255),f,b
  5061   00066E  C083  F07E         	movff	strtof@digit,??_strtof+1
  5062   000672  6B7F               	clrf	(??_strtof+2)& (0+255),b
  5063   000674  6B80               	clrf	(??_strtof+3)& (0+255),b
  5064   000676  6B81               	clrf	(??_strtof+4)& (0+255),b
  5065   000678  2B7D               	incf	??_strtof& (0+255),f,b
  5066   00067A  EF44  F003         	goto	u5530
  5067   00067E                     u5535:
  5068   00067E  90D8               	bcf	status,0,c
  5069   000680  377E               	rlcf	(??_strtof+1)& (0+255),f,b
  5070   000682  377F               	rlcf	(??_strtof+2)& (0+255),f,b
  5071   000684  3780               	rlcf	(??_strtof+3)& (0+255),f,b
  5072   000686  3781               	rlcf	(??_strtof+4)& (0+255),f,b
  5073   000688                     u5530:
  5074   000688  2F7D               	decfsz	??_strtof& (0+255),f,b
  5075   00068A  EF3F  F003         	goto	u5535
  5076   00068E  517E               	movf	(??_strtof+1)& (0+255),w,b
  5077   000690  1389               	iorwf	strtof@_u& (0+255),f,b
  5078   000692  517F               	movf	(??_strtof+2)& (0+255),w,b
  5079   000694  138A               	iorwf	(strtof@_u+1)& (0+255),f,b
  5080   000696  5180               	movf	(??_strtof+3)& (0+255),w,b
  5081   000698  138B               	iorwf	(strtof@_u+2)& (0+255),f,b
  5082   00069A  5181               	movf	(??_strtof+4)& (0+255),w,b
  5083   00069C  138C               	iorwf	(strtof@_u+3)& (0+255),f,b
  5084   00069E                     l4864:
  5085                           
  5086                           ; BSR set to: 0
  5087   00069E  4B87               	infsnz	strtof@eexp& (0+255),f,b
  5088   0006A0  2B88               	incf	(strtof@eexp+1)& (0+255),f,b
  5089   0006A2                     
  5090                           ; BSR set to: 0
  5091   0006A2  0E04               	movlw	4
  5092   0006A4  2785               	addwf	strtof@expon& (0+255),f,b
  5093   0006A6  0E00               	movlw	0
  5094   0006A8  2386               	addwfc	(strtof@expon+1)& (0+255),f,b
  5095   0006AA  EF61  F003         	goto	l4872
  5096   0006AE                     l4868:
  5097                           
  5098                           ; BSR set to: 0
  5099   0006AE  0E00               	movlw	0
  5100   0006B0  6F79               	movwf	?_strtof& (0+255),b
  5101   0006B2  0E00               	movlw	0
  5102   0006B4  6F7A               	movwf	(?_strtof+1)& (0+255),b
  5103   0006B6  0E00               	movlw	0
  5104   0006B8  6F7B               	movwf	(?_strtof+2)& (0+255),b
  5105   0006BA  0E00               	movlw	0
  5106   0006BC  6F7C               	movwf	(?_strtof+3)& (0+255),b
  5107   0006BE  EFCF  F008         	goto	l1529
  5108   0006C2                     l4872:
  5109                           
  5110                           ; BSR set to: 0
  5111   0006C2  2B8D               	incf	strtof@i& (0+255),f,b
  5112   0006C4  EFA1  F002         	goto	l4836
  5113   0006C8                     l4874:
  5114                           
  5115                           ; BSR set to: 0
  5116   0006C8  518D               	movf	strtof@i& (0+255),w,b
  5117   0006CA  2579               	addwf	strtof@s& (0+255),w,b
  5118   0006CC  6ED9               	movwf	fsr2l,c
  5119   0006CE  0E00               	movlw	0
  5120   0006D0  217A               	addwfc	(strtof@s+1)& (0+255),w,b
  5121   0006D2  6EDA               	movwf	fsr2h,c
  5122   0006D4  0E70               	movlw	112
  5123   0006D6  18DE               	xorwf	postinc2,w,c
  5124   0006D8  B4D8               	btfsc	status,2,c
  5125   0006DA  EF71  F003         	goto	u5541
  5126   0006DE  EF73  F003         	goto	u5540
  5127   0006E2                     u5541:
  5128   0006E2  EF27  F004         	goto	l4908
  5129   0006E6                     u5540:
  5130   0006E6                     
  5131                           ; BSR set to: 0
  5132   0006E6  518D               	movf	strtof@i& (0+255),w,b
  5133   0006E8  2579               	addwf	strtof@s& (0+255),w,b
  5134   0006EA  6ED9               	movwf	fsr2l,c
  5135   0006EC  0E00               	movlw	0
  5136   0006EE  217A               	addwfc	(strtof@s+1)& (0+255),w,b
  5137   0006F0  6EDA               	movwf	fsr2h,c
  5138   0006F2  0E50               	movlw	80
  5139   0006F4  18DE               	xorwf	postinc2,w,c
  5140   0006F6  A4D8               	btfss	status,2,c
  5141   0006F8  EF80  F003         	goto	u5551
  5142   0006FC  EF82  F003         	goto	u5550
  5143   000700                     u5551:
  5144   000700  EF84  F003         	goto	l4880
  5145   000704                     u5550:
  5146   000704  EF27  F004         	goto	l4908
  5147   000708                     l4880:
  5148                           
  5149                           ; BSR set to: 0
  5150   000708  518D               	movf	strtof@i& (0+255),w,b
  5151   00070A  2579               	addwf	strtof@s& (0+255),w,b
  5152   00070C  6ED9               	movwf	fsr2l,c
  5153   00070E  0E00               	movlw	0
  5154   000710  217A               	addwfc	(strtof@s+1)& (0+255),w,b
  5155   000712  6EDA               	movwf	fsr2h,c
  5156   000714  0E30               	movlw	48
  5157   000716  18DE               	xorwf	postinc2,w,c
  5158   000718  A4D8               	btfss	status,2,c
  5159   00071A  EF91  F003         	goto	u5561
  5160   00071E  EF93  F003         	goto	u5560
  5161   000722                     u5561:
  5162   000722  EFA2  F003         	goto	l4886
  5163   000726                     u5560:
  5164   000726                     
  5165                           ; BSR set to: 0
  5166   000726  5187               	movf	strtof@eexp& (0+255),w,b
  5167   000728  1188               	iorwf	(strtof@eexp+1)& (0+255),w,b
  5168   00072A  A4D8               	btfss	status,2,c
  5169   00072C  EF9A  F003         	goto	u5571
  5170   000730  EF9C  F003         	goto	u5570
  5171   000734                     u5571:
  5172   000734  EFA2  F003         	goto	l4886
  5173   000738                     u5570:
  5174   000738                     
  5175                           ; BSR set to: 0
  5176   000738  0EFC               	movlw	252
  5177   00073A  2785               	addwf	strtof@expon& (0+255),f,b
  5178   00073C  0EFF               	movlw	255
  5179   00073E  2386               	addwfc	(strtof@expon+1)& (0+255),f,b
  5180   000740  EF1F  F004         	goto	l4904
  5181   000744                     l4886:
  5182                           
  5183                           ; BSR set to: 0
  5184   000744  518D               	movf	strtof@i& (0+255),w,b
  5185   000746  2579               	addwf	strtof@s& (0+255),w,b
  5186   000748  6ED9               	movwf	fsr2l,c
  5187   00074A  0E00               	movlw	0
  5188   00074C  217A               	addwfc	(strtof@s+1)& (0+255),w,b
  5189   00074E  6EDA               	movwf	fsr2h,c
  5190   000750  50DF               	movf	indf2,w,c
  5191   000752  6F7D               	movwf	??_strtof& (0+255),b
  5192   000754  517D               	movf	??_strtof& (0+255),w,b
  5193   000756  6F64               	movwf	isxdigit@c& (0+255),b
  5194   000758  6B65               	clrf	(isxdigit@c+1)& (0+255),b
  5195   00075A  EC80  F01D         	call	_isxdigit	;wreg free
  5196   00075E  0100               	movlb	0	; () banked
  5197   000760  5164               	movf	?_isxdigit& (0+255),w,b
  5198   000762  1165               	iorwf	(?_isxdigit+1)& (0+255),w,b
  5199   000764  B4D8               	btfsc	status,2,c
  5200   000766  EFB7  F003         	goto	u5581
  5201   00076A  EFB9  F003         	goto	u5580
  5202   00076E                     u5581:
  5203   00076E  EF1F  F004         	goto	l4904
  5204   000772                     u5580:
  5205   000772                     
  5206                           ; BSR set to: 0
  5207   000772  0E00               	movlw	0
  5208   000774  6F83               	movwf	strtof@digit& (0+255),b
  5209   000776                     
  5210                           ; BSR set to: 0
  5211   000776  518D               	movf	strtof@i& (0+255),w,b
  5212   000778  2579               	addwf	strtof@s& (0+255),w,b
  5213   00077A  6ED9               	movwf	fsr2l,c
  5214   00077C  0E00               	movlw	0
  5215   00077E  217A               	addwfc	(strtof@s+1)& (0+255),w,b
  5216   000780  6EDA               	movwf	fsr2h,c
  5217   000782  50DF               	movf	indf2,w,c
  5218   000784  6F7D               	movwf	??_strtof& (0+255),b
  5219   000786  0ED0               	movlw	208
  5220   000788  257D               	addwf	??_strtof& (0+255),w,b
  5221   00078A  6F7E               	movwf	(??_strtof+1)& (0+255),b
  5222   00078C  6B7F               	clrf	(??_strtof+2)& (0+255),b
  5223   00078E  0EFF               	movlw	255
  5224   000790  237F               	addwfc	(??_strtof+2)& (0+255),f,b
  5225   000792  517F               	movf	(??_strtof+2)& (0+255),w,b
  5226   000794  E107               	bnz	u5591
  5227   000796  0E0A               	movlw	10
  5228   000798  5D7E               	subwf	(??_strtof+1)& (0+255),w,b
  5229   00079A  B0D8               	btfsc	status,0,c
  5230   00079C  EFD2  F003         	goto	u5591
  5231   0007A0  EFD4  F003         	goto	u5590
  5232   0007A4                     u5591:
  5233   0007A4  EFDF  F003         	goto	l4896
  5234   0007A8                     u5590:
  5235   0007A8                     
  5236                           ; BSR set to: 0
  5237   0007A8  518D               	movf	strtof@i& (0+255),w,b
  5238   0007AA  2579               	addwf	strtof@s& (0+255),w,b
  5239   0007AC  6ED9               	movwf	fsr2l,c
  5240   0007AE  0E00               	movlw	0
  5241   0007B0  217A               	addwfc	(strtof@s+1)& (0+255),w,b
  5242   0007B2  6EDA               	movwf	fsr2h,c
  5243   0007B4  50DF               	movf	indf2,w,c
  5244   0007B6  0FD0               	addlw	208
  5245   0007B8  6F83               	movwf	strtof@digit& (0+255),b
  5246   0007BA  EFF0  F003         	goto	l4898
  5247   0007BE                     l4896:
  5248                           
  5249                           ; BSR set to: 0
  5250   0007BE  518D               	movf	strtof@i& (0+255),w,b
  5251   0007C0  2579               	addwf	strtof@s& (0+255),w,b
  5252   0007C2  6ED9               	movwf	fsr2l,c
  5253   0007C4  0E00               	movlw	0
  5254   0007C6  217A               	addwfc	(strtof@s+1)& (0+255),w,b
  5255   0007C8  6EDA               	movwf	fsr2h,c
  5256   0007CA  50DF               	movf	indf2,w,c
  5257   0007CC  6F7D               	movwf	??_strtof& (0+255),b
  5258   0007CE  517D               	movf	??_strtof& (0+255),w,b
  5259   0007D0  6F64               	movwf	toupper@c& (0+255),b
  5260   0007D2  6B65               	clrf	(toupper@c+1)& (0+255),b
  5261   0007D4  EC92  F01F         	call	_toupper	;wreg free
  5262   0007D8  0100               	movlb	0	; () banked
  5263   0007DA  5164               	movf	?_toupper& (0+255),w,b
  5264   0007DC  0FC9               	addlw	201
  5265   0007DE  6F83               	movwf	strtof@digit& (0+255),b
  5266   0007E0                     l4898:
  5267                           
  5268                           ; BSR set to: 0
  5269   0007E0  BF88               	btfsc	(strtof@eexp+1)& (0+255),7,b
  5270   0007E2  EFFE  F003         	goto	u5600
  5271   0007E6  5188               	movf	(strtof@eexp+1)& (0+255),w,b
  5272   0007E8  E107               	bnz	u5601
  5273   0007EA  0E08               	movlw	8
  5274   0007EC  5D87               	subwf	strtof@eexp& (0+255),w,b
  5275   0007EE  B0D8               	btfsc	status,0,c
  5276   0007F0  EFFC  F003         	goto	u5601
  5277   0007F4  EFFE  F003         	goto	u5600
  5278   0007F8                     u5601:
  5279   0007F8  EF1D  F004         	goto	l4902
  5280   0007FC                     u5600:
  5281   0007FC                     
  5282                           ; BSR set to: 0
  5283   0007FC  5187               	movf	strtof@eexp& (0+255),w,b
  5284   0007FE  0807               	sublw	7
  5285   000800  6F7D               	movwf	??_strtof& (0+255),b
  5286   000802  90D8               	bcf	status,0,c
  5287   000804  377D               	rlcf	??_strtof& (0+255),f,b
  5288   000806  90D8               	bcf	status,0,c
  5289   000808  377D               	rlcf	??_strtof& (0+255),f,b
  5290   00080A  C083  F07E         	movff	strtof@digit,??_strtof+1
  5291   00080E  6B7F               	clrf	(??_strtof+2)& (0+255),b
  5292   000810  6B80               	clrf	(??_strtof+3)& (0+255),b
  5293   000812  6B81               	clrf	(??_strtof+4)& (0+255),b
  5294   000814  2B7D               	incf	??_strtof& (0+255),f,b
  5295   000816  EF12  F004         	goto	u5610
  5296   00081A                     u5615:
  5297   00081A  90D8               	bcf	status,0,c
  5298   00081C  377E               	rlcf	(??_strtof+1)& (0+255),f,b
  5299   00081E  377F               	rlcf	(??_strtof+2)& (0+255),f,b
  5300   000820  3780               	rlcf	(??_strtof+3)& (0+255),f,b
  5301   000822  3781               	rlcf	(??_strtof+4)& (0+255),f,b
  5302   000824                     u5610:
  5303   000824  2F7D               	decfsz	??_strtof& (0+255),f,b
  5304   000826  EF0D  F004         	goto	u5615
  5305   00082A  517E               	movf	(??_strtof+1)& (0+255),w,b
  5306   00082C  1389               	iorwf	strtof@_u& (0+255),f,b
  5307   00082E  517F               	movf	(??_strtof+2)& (0+255),w,b
  5308   000830  138A               	iorwf	(strtof@_u+1)& (0+255),f,b
  5309   000832  5180               	movf	(??_strtof+3)& (0+255),w,b
  5310   000834  138B               	iorwf	(strtof@_u+2)& (0+255),f,b
  5311   000836  5181               	movf	(??_strtof+4)& (0+255),w,b
  5312   000838  138C               	iorwf	(strtof@_u+3)& (0+255),f,b
  5313   00083A                     l4902:
  5314                           
  5315                           ; BSR set to: 0
  5316   00083A  4B87               	infsnz	strtof@eexp& (0+255),f,b
  5317   00083C  2B88               	incf	(strtof@eexp+1)& (0+255),f,b
  5318   00083E                     l4904:
  5319                           
  5320                           ; BSR set to: 0
  5321   00083E  2B8D               	incf	strtof@i& (0+255),f,b
  5322   000840                     l4906:
  5323                           
  5324                           ; BSR set to: 0
  5325   000840  B984               	btfsc	strtof@flags& (0+255),4,b
  5326   000842  EF25  F004         	goto	u5621
  5327   000846  EF27  F004         	goto	u5620
  5328   00084A                     u5621:
  5329   00084A  EF64  F003         	goto	l4874
  5330   00084E                     u5620:
  5331   00084E                     l4908:
  5332                           
  5333                           ; BSR set to: 0
  5334   00084E  518D               	movf	strtof@i& (0+255),w,b
  5335   000850  2579               	addwf	strtof@s& (0+255),w,b
  5336   000852  6ED9               	movwf	fsr2l,c
  5337   000854  0E00               	movlw	0
  5338   000856  217A               	addwfc	(strtof@s+1)& (0+255),w,b
  5339   000858  6EDA               	movwf	fsr2h,c
  5340   00085A  0E70               	movlw	112
  5341   00085C  18DE               	xorwf	postinc2,w,c
  5342   00085E  B4D8               	btfsc	status,2,c
  5343   000860  EF34  F004         	goto	u5631
  5344   000864  EF36  F004         	goto	u5630
  5345   000868                     u5631:
  5346   000868  EF4F  F004         	goto	l4916
  5347   00086C                     u5630:
  5348   00086C                     
  5349                           ; BSR set to: 0
  5350   00086C  518D               	movf	strtof@i& (0+255),w,b
  5351   00086E  2579               	addwf	strtof@s& (0+255),w,b
  5352   000870  6ED9               	movwf	fsr2l,c
  5353   000872  0E00               	movlw	0
  5354   000874  217A               	addwfc	(strtof@s+1)& (0+255),w,b
  5355   000876  6EDA               	movwf	fsr2h,c
  5356   000878  0E50               	movlw	80
  5357   00087A  18DE               	xorwf	postinc2,w,c
  5358   00087C  B4D8               	btfsc	status,2,c
  5359   00087E  EF43  F004         	goto	u5641
  5360   000882  EF45  F004         	goto	u5640
  5361   000886                     u5641:
  5362   000886  EF4F  F004         	goto	l4916
  5363   00088A                     u5640:
  5364   00088A                     
  5365                           ; BSR set to: 0
  5366   00088A  0E00               	movlw	0
  5367   00088C  6F79               	movwf	?_strtof& (0+255),b
  5368   00088E  0E00               	movlw	0
  5369   000890  6F7A               	movwf	(?_strtof+1)& (0+255),b
  5370   000892  0E00               	movlw	0
  5371   000894  6F7B               	movwf	(?_strtof+2)& (0+255),b
  5372   000896  0E00               	movlw	0
  5373   000898  6F7C               	movwf	(?_strtof+3)& (0+255),b
  5374   00089A  EFCF  F008         	goto	l1529
  5375   00089E                     l4916:
  5376                           
  5377                           ; BSR set to: 0
  5378   00089E  2B8D               	incf	strtof@i& (0+255),f,b
  5379   0008A0                     
  5380                           ; BSR set to: 0
  5381   0008A0  518D               	movf	strtof@i& (0+255),w,b
  5382   0008A2  2579               	addwf	strtof@s& (0+255),w,b
  5383   0008A4  6ED9               	movwf	fsr2l,c
  5384   0008A6  0E00               	movlw	0
  5385   0008A8  217A               	addwfc	(strtof@s+1)& (0+255),w,b
  5386   0008AA  6EDA               	movwf	fsr2h,c
  5387   0008AC  0E2B               	movlw	43
  5388   0008AE  18DE               	xorwf	postinc2,w,c
  5389   0008B0  A4D8               	btfss	status,2,c
  5390   0008B2  EF5D  F004         	goto	u5651
  5391   0008B6  EF5F  F004         	goto	u5650
  5392   0008BA                     u5651:
  5393   0008BA  EF62  F004         	goto	l4922
  5394   0008BE                     u5650:
  5395   0008BE                     
  5396                           ; BSR set to: 0
  5397   0008BE  2B8D               	incf	strtof@i& (0+255),f,b
  5398   0008C0  EF73  F004         	goto	l4926
  5399   0008C4                     l4922:
  5400                           
  5401                           ; BSR set to: 0
  5402   0008C4  518D               	movf	strtof@i& (0+255),w,b
  5403   0008C6  2579               	addwf	strtof@s& (0+255),w,b
  5404   0008C8  6ED9               	movwf	fsr2l,c
  5405   0008CA  0E00               	movlw	0
  5406   0008CC  217A               	addwfc	(strtof@s+1)& (0+255),w,b
  5407   0008CE  6EDA               	movwf	fsr2h,c
  5408   0008D0  0E2D               	movlw	45
  5409   0008D2  18DE               	xorwf	postinc2,w,c
  5410   0008D4  A4D8               	btfss	status,2,c
  5411   0008D6  EF6F  F004         	goto	u5661
  5412   0008DA  EF71  F004         	goto	u5660
  5413   0008DE                     u5661:
  5414   0008DE  EF73  F004         	goto	l4926
  5415   0008E2                     u5660:
  5416   0008E2                     
  5417                           ; BSR set to: 0
  5418   0008E2  8784               	bsf	strtof@flags& (0+255),3,b
  5419   0008E4  2B8D               	incf	strtof@i& (0+255),f,b
  5420   0008E6                     l4926:
  5421                           
  5422                           ; BSR set to: 0
  5423   0008E6  518D               	movf	strtof@i& (0+255),w,b
  5424   0008E8  2779               	addwf	strtof@s& (0+255),f,b
  5425   0008EA  0E00               	movlw	0
  5426   0008EC  237A               	addwfc	(strtof@s+1)& (0+255),f,b
  5427   0008EE                     
  5428                           ; BSR set to: 0
  5429   0008EE  0E00               	movlw	0
  5430   0008F0  6F8D               	movwf	strtof@i& (0+255),b
  5431   0008F2  EF7C  F004         	goto	l4932
  5432   0008F6                     l4930:
  5433                           
  5434                           ; BSR set to: 0
  5435   0008F6  2B8D               	incf	strtof@i& (0+255),f,b
  5436   0008F8                     l4932:
  5437                           
  5438                           ; BSR set to: 0
  5439   0008F8  518D               	movf	strtof@i& (0+255),w,b
  5440   0008FA  2579               	addwf	strtof@s& (0+255),w,b
  5441   0008FC  6ED9               	movwf	fsr2l,c
  5442   0008FE  0E00               	movlw	0
  5443   000900  217A               	addwfc	(strtof@s+1)& (0+255),w,b
  5444   000902  6EDA               	movwf	fsr2h,c
  5445   000904  0E30               	movlw	48
  5446   000906  18DE               	xorwf	postinc2,w,c
  5447   000908  B4D8               	btfsc	status,2,c
  5448   00090A  EF89  F004         	goto	u5671
  5449   00090E  EF8B  F004         	goto	u5670
  5450   000912                     u5671:
  5451   000912  EF7B  F004         	goto	l4930
  5452   000916                     u5670:
  5453   000916                     
  5454                           ; BSR set to: 0
  5455   000916  0E00               	movlw	0
  5456   000918  6F88               	movwf	(strtof@eexp+1)& (0+255),b
  5457   00091A  0E00               	movlw	0
  5458   00091C  6F87               	movwf	strtof@eexp& (0+255),b
  5459   00091E  EFBB  F004         	goto	l4946
  5460   000922                     l4936:
  5461                           
  5462                           ; BSR set to: 0
  5463   000922  518D               	movf	strtof@i& (0+255),w,b
  5464   000924  B4D8               	btfsc	status,2,c
  5465   000926  EF97  F004         	goto	u5681
  5466   00092A  EF99  F004         	goto	u5680
  5467   00092E                     u5681:
  5468   00092E  EFA7  F004         	goto	l4940
  5469   000932                     u5680:
  5470   000932                     
  5471                           ; BSR set to: 0
  5472   000932  C087  F060         	movff	strtof@eexp,___wmul@multiplier
  5473   000936  C088  F061         	movff	strtof@eexp+1,___wmul@multiplier+1
  5474   00093A  0E00               	movlw	0
  5475   00093C  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5476   00093E  0E0A               	movlw	10
  5477   000940  6F62               	movwf	___wmul@multiplicand& (0+255),b
  5478   000942  EC3D  F020         	call	___wmul	;wreg free
  5479   000946  C060  F087         	movff	?___wmul,strtof@eexp
  5480   00094A  C061  F088         	movff	?___wmul+1,strtof@eexp+1
  5481   00094E                     l4940:
  5482   00094E  0100               	movlb	0	; () banked
  5483   000950  518D               	movf	strtof@i& (0+255),w,b
  5484   000952  2579               	addwf	strtof@s& (0+255),w,b
  5485   000954  6ED9               	movwf	fsr2l,c
  5486   000956  0E00               	movlw	0
  5487   000958  217A               	addwfc	(strtof@s+1)& (0+255),w,b
  5488   00095A  6EDA               	movwf	fsr2h,c
  5489   00095C  50DF               	movf	indf2,w,c
  5490   00095E  6F7D               	movwf	??_strtof& (0+255),b
  5491   000960  0ED0               	movlw	208
  5492   000962  257D               	addwf	??_strtof& (0+255),w,b
  5493   000964  6F7E               	movwf	(??_strtof+1)& (0+255),b
  5494   000966  6B7F               	clrf	(??_strtof+2)& (0+255),b
  5495   000968  0EFF               	movlw	255
  5496   00096A  237F               	addwfc	(??_strtof+2)& (0+255),f,b
  5497   00096C  517E               	movf	(??_strtof+1)& (0+255),w,b
  5498   00096E  2787               	addwf	strtof@eexp& (0+255),f,b
  5499   000970  517F               	movf	(??_strtof+2)& (0+255),w,b
  5500   000972  2388               	addwfc	(strtof@eexp+1)& (0+255),f,b
  5501   000974                     
  5502                           ; BSR set to: 0
  5503   000974  2B8D               	incf	strtof@i& (0+255),f,b
  5504   000976                     l4946:
  5505                           
  5506                           ; BSR set to: 0
  5507   000976  518D               	movf	strtof@i& (0+255),w,b
  5508   000978  2579               	addwf	strtof@s& (0+255),w,b
  5509   00097A  6ED9               	movwf	fsr2l,c
  5510   00097C  0E00               	movlw	0
  5511   00097E  217A               	addwfc	(strtof@s+1)& (0+255),w,b
  5512   000980  6EDA               	movwf	fsr2h,c
  5513   000982  50DF               	movf	indf2,w,c
  5514   000984  6F7D               	movwf	??_strtof& (0+255),b
  5515   000986  0ED0               	movlw	208
  5516   000988  257D               	addwf	??_strtof& (0+255),w,b
  5517   00098A  6F7E               	movwf	(??_strtof+1)& (0+255),b
  5518   00098C  6B7F               	clrf	(??_strtof+2)& (0+255),b
  5519   00098E  0EFF               	movlw	255
  5520   000990  237F               	addwfc	(??_strtof+2)& (0+255),f,b
  5521   000992  517F               	movf	(??_strtof+2)& (0+255),w,b
  5522   000994  E109               	bnz	u5690
  5523   000996  0E0A               	movlw	10
  5524   000998  5D7E               	subwf	(??_strtof+1)& (0+255),w,b
  5525   00099A  A0D8               	btfss	status,0,c
  5526   00099C  EFD2  F004         	goto	u5691
  5527   0009A0  EFD4  F004         	goto	u5690
  5528   0009A4                     u5691:
  5529   0009A4  EF91  F004         	goto	l4936
  5530   0009A8                     u5690:
  5531   0009A8                     
  5532                           ; BSR set to: 0
  5533   0009A8  518D               	movf	strtof@i& (0+255),w,b
  5534   0009AA  A4D8               	btfss	status,2,c
  5535   0009AC  EFDA  F004         	goto	u5701
  5536   0009B0  EFDC  F004         	goto	u5700
  5537   0009B4                     u5701:
  5538   0009B4  EFE6  F004         	goto	l1559
  5539   0009B8                     u5700:
  5540   0009B8                     
  5541                           ; BSR set to: 0
  5542   0009B8  0E00               	movlw	0
  5543   0009BA  6F79               	movwf	?_strtof& (0+255),b
  5544   0009BC  0E00               	movlw	0
  5545   0009BE  6F7A               	movwf	(?_strtof+1)& (0+255),b
  5546   0009C0  0E00               	movlw	0
  5547   0009C2  6F7B               	movwf	(?_strtof+2)& (0+255),b
  5548   0009C4  0E00               	movlw	0
  5549   0009C6  6F7C               	movwf	(?_strtof+3)& (0+255),b
  5550   0009C8  EFCF  F008         	goto	l1529
  5551   0009CC                     l1559:
  5552                           
  5553                           ; BSR set to: 0
  5554   0009CC  A784               	btfss	strtof@flags& (0+255),3,b
  5555   0009CE  EFEB  F004         	goto	u5711
  5556   0009D2  EFED  F004         	goto	u5710
  5557   0009D6                     u5711:
  5558   0009D6  EFF1  F004         	goto	l4956
  5559   0009DA                     u5710:
  5560   0009DA                     
  5561                           ; BSR set to: 0
  5562   0009DA  6D87               	negf	strtof@eexp& (0+255),b
  5563   0009DC  1F88               	comf	(strtof@eexp+1)& (0+255),f,b
  5564   0009DE  B0D8               	btfsc	status,0,c
  5565   0009E0  2B88               	incf	(strtof@eexp+1)& (0+255),f,b
  5566   0009E2                     l4956:
  5567                           
  5568                           ; BSR set to: 0
  5569   0009E2  5187               	movf	strtof@eexp& (0+255),w,b
  5570   0009E4  2785               	addwf	strtof@expon& (0+255),f,b
  5571   0009E6  5188               	movf	(strtof@eexp+1)& (0+255),w,b
  5572   0009E8  2386               	addwfc	(strtof@expon+1)& (0+255),f,b
  5573   0009EA                     
  5574                           ; BSR set to: 0
  5575   0009EA  517B               	movf	strtof@res& (0+255),w,b
  5576   0009EC  117C               	iorwf	(strtof@res+1)& (0+255),w,b
  5577   0009EE  B4D8               	btfsc	status,2,c
  5578   0009F0  EFFC  F004         	goto	u5721
  5579   0009F4  EFFE  F004         	goto	u5720
  5580   0009F8                     u5721:
  5581   0009F8  EF0C  F005         	goto	l4962
  5582   0009FC                     u5720:
  5583   0009FC                     
  5584                           ; BSR set to: 0
  5585   0009FC  518D               	movf	strtof@i& (0+255),w,b
  5586   0009FE  2579               	addwf	strtof@s& (0+255),w,b
  5587   000A00  6F7D               	movwf	??_strtof& (0+255),b
  5588   000A02  0E00               	movlw	0
  5589   000A04  217A               	addwfc	(strtof@s+1)& (0+255),w,b
  5590   000A06  6F7E               	movwf	(??_strtof+1)& (0+255),b
  5591   000A08  C07B  FFD9         	movff	strtof@res,fsr2l
  5592   000A0C  C07C  FFDA         	movff	strtof@res+1,fsr2h
  5593   000A10  C07D  FFDE         	movff	??_strtof,postinc2
  5594   000A14  C07E  FFDD         	movff	??_strtof+1,postdec2
  5595   000A18                     l4962:
  5596                           
  5597                           ; BSR set to: 0
  5598   000A18  5189               	movf	strtof@_u& (0+255),w,b
  5599   000A1A  118A               	iorwf	(strtof@_u+1)& (0+255),w,b
  5600   000A1C  118B               	iorwf	(strtof@_u+2)& (0+255),w,b
  5601   000A1E  118C               	iorwf	(strtof@_u+3)& (0+255),w,b
  5602   000A20  A4D8               	btfss	status,2,c
  5603   000A22  EF15  F005         	goto	u5731
  5604   000A26  EF17  F005         	goto	u5730
  5605   000A2A                     u5731:
  5606   000A2A  EF21  F005         	goto	l4968
  5607   000A2E                     u5730:
  5608   000A2E                     
  5609                           ; BSR set to: 0
  5610   000A2E  0E00               	movlw	0
  5611   000A30  6F79               	movwf	?_strtof& (0+255),b
  5612   000A32  0E00               	movlw	0
  5613   000A34  6F7A               	movwf	(?_strtof+1)& (0+255),b
  5614   000A36  0E00               	movlw	0
  5615   000A38  6F7B               	movwf	(?_strtof+2)& (0+255),b
  5616   000A3A  0E00               	movlw	0
  5617   000A3C  6F7C               	movwf	(?_strtof+3)& (0+255),b
  5618   000A3E  EFCF  F008         	goto	l1529
  5619   000A42                     l4968:
  5620                           
  5621                           ; BSR set to: 0
  5622   000A42  0EFF               	movlw	255
  5623   000A44  1589               	andwf	strtof@_u& (0+255),w,b
  5624   000A46  6F7D               	movwf	??_strtof& (0+255),b
  5625   000A48  0E00               	movlw	0
  5626   000A4A  158A               	andwf	(strtof@_u+1)& (0+255),w,b
  5627   000A4C  6F7E               	movwf	(??_strtof+1)& (0+255),b
  5628   000A4E  0E00               	movlw	0
  5629   000A50  158B               	andwf	(strtof@_u+2)& (0+255),w,b
  5630   000A52  6F7F               	movwf	(??_strtof+2)& (0+255),b
  5631   000A54  0E00               	movlw	0
  5632   000A56  158C               	andwf	(strtof@_u+3)& (0+255),w,b
  5633   000A58  6F80               	movwf	(??_strtof+3)& (0+255),b
  5634   000A5A  5180               	movf	(??_strtof+3)& (0+255),w,b
  5635   000A5C  117F               	iorwf	(??_strtof+2)& (0+255),w,b
  5636   000A5E  117E               	iorwf	(??_strtof+1)& (0+255),w,b
  5637   000A60  E109               	bnz	u5740
  5638   000A62  0E81               	movlw	129
  5639   000A64  5D7D               	subwf	??_strtof& (0+255),w,b
  5640   000A66  A0D8               	btfss	status,0,c
  5641   000A68  EF38  F005         	goto	u5741
  5642   000A6C  EF3A  F005         	goto	u5740
  5643   000A70                     u5741:
  5644   000A70  EF4C  F005         	goto	l4974
  5645   000A74                     u5740:
  5646   000A74                     
  5647                           ; BSR set to: 0
  5648   000A74  0E00               	movlw	0
  5649   000A76  2789               	addwf	strtof@_u& (0+255),f,b
  5650   000A78  0E01               	movlw	1
  5651   000A7A  238A               	addwfc	(strtof@_u+1)& (0+255),f,b
  5652   000A7C  0E00               	movlw	0
  5653   000A7E  238B               	addwfc	(strtof@_u+2)& (0+255),f,b
  5654   000A80  0E00               	movlw	0
  5655   000A82  238C               	addwfc	(strtof@_u+3)& (0+255),f,b
  5656   000A84  EF4C  F005         	goto	l4974
  5657   000A88                     l4972:
  5658                           
  5659                           ; BSR set to: 0
  5660   000A88  90D8               	bcf	status,0,c
  5661   000A8A  3789               	rlcf	strtof@_u& (0+255),f,b
  5662   000A8C  378A               	rlcf	(strtof@_u+1)& (0+255),f,b
  5663   000A8E  378B               	rlcf	(strtof@_u+2)& (0+255),f,b
  5664   000A90  378C               	rlcf	(strtof@_u+3)& (0+255),f,b
  5665   000A92  0785               	decf	strtof@expon& (0+255),f,b
  5666   000A94  A0D8               	btfss	status,0,c
  5667   000A96  0786               	decf	(strtof@expon+1)& (0+255),f,b
  5668   000A98                     l4974:
  5669                           
  5670                           ; BSR set to: 0
  5671   000A98  AF8C               	btfss	(strtof@_u+3)& (0+255),7,b
  5672   000A9A  EF51  F005         	goto	u5751
  5673   000A9E  EF53  F005         	goto	u5750
  5674   000AA2                     u5751:
  5675   000AA2  EF44  F005         	goto	l4972
  5676   000AA6                     u5750:
  5677   000AA6                     
  5678                           ; BSR set to: 0
  5679   000AA6  AF86               	btfss	(strtof@expon+1)& (0+255),7,b
  5680   000AA8  EF5F  F005         	goto	u5761
  5681   000AAC  0E83               	movlw	131
  5682   000AAE  5D85               	subwf	strtof@expon& (0+255),w,b
  5683   000AB0  0EFF               	movlw	255
  5684   000AB2  5986               	subwfb	(strtof@expon+1)& (0+255),w,b
  5685   000AB4  B0D8               	btfsc	status,0,c
  5686   000AB6  EF5F  F005         	goto	u5761
  5687   000ABA  EF61  F005         	goto	u5760
  5688   000ABE                     u5761:
  5689   000ABE  EF6D  F005         	goto	l4980
  5690   000AC2                     u5760:
  5691   000AC2                     
  5692                           ; BSR set to: 0
  5693   000AC2  0EFF               	movlw	255
  5694   000AC4  6F86               	movwf	(strtof@expon+1)& (0+255),b
  5695   000AC6  0E81               	movlw	129
  5696   000AC8  6F85               	movwf	strtof@expon& (0+255),b
  5697   000ACA  0E00               	movlw	0
  5698   000ACC  6F89               	movwf	strtof@_u& (0+255),b
  5699   000ACE  0E00               	movlw	0
  5700   000AD0  6F8A               	movwf	(strtof@_u+1)& (0+255),b
  5701   000AD2  0E00               	movlw	0
  5702   000AD4  6F8B               	movwf	(strtof@_u+2)& (0+255),b
  5703   000AD6  0E00               	movlw	0
  5704   000AD8  6F8C               	movwf	(strtof@_u+3)& (0+255),b
  5705   000ADA                     l4980:
  5706                           
  5707                           ; BSR set to: 0
  5708   000ADA  0E81               	movlw	129
  5709   000ADC  1985               	xorwf	strtof@expon& (0+255),w,b
  5710   000ADE  E108               	bnz	u5770
  5711   000AE0  2986               	incf	(strtof@expon+1)& (0+255),w,b
  5712   000AE2  B4D8               	btfsc	status,2,c
  5713   000AE4  EF76  F005         	goto	u5771
  5714   000AE8  EF78  F005         	goto	u5770
  5715   000AEC                     u5771:
  5716   000AEC  EF80  F005         	goto	l4984
  5717   000AF0                     u5770:
  5718   000AF0                     
  5719                           ; BSR set to: 0
  5720   000AF0  90D8               	bcf	status,0,c
  5721   000AF2  3789               	rlcf	strtof@_u& (0+255),f,b
  5722   000AF4  378A               	rlcf	(strtof@_u+1)& (0+255),f,b
  5723   000AF6  378B               	rlcf	(strtof@_u+2)& (0+255),f,b
  5724   000AF8  378C               	rlcf	(strtof@_u+3)& (0+255),f,b
  5725   000AFA  0785               	decf	strtof@expon& (0+255),f,b
  5726   000AFC  A0D8               	btfss	status,0,c
  5727   000AFE  0786               	decf	(strtof@expon+1)& (0+255),f,b
  5728   000B00                     l4984:
  5729                           
  5730                           ; BSR set to: 0
  5731   000B00  BF86               	btfsc	(strtof@expon+1)& (0+255),7,b
  5732   000B02  EF8C  F005         	goto	u5781
  5733   000B06  5186               	movf	(strtof@expon+1)& (0+255),w,b
  5734   000B08  E109               	bnz	u5780
  5735   000B0A  0E80               	movlw	128
  5736   000B0C  5D85               	subwf	strtof@expon& (0+255),w,b
  5737   000B0E  A0D8               	btfss	status,0,c
  5738   000B10  EF8C  F005         	goto	u5781
  5739   000B14  EF8E  F005         	goto	u5780
  5740   000B18                     u5781:
  5741   000B18  EF9A  F005         	goto	l4988
  5742   000B1C                     u5780:
  5743   000B1C                     
  5744                           ; BSR set to: 0
  5745   000B1C  0E00               	movlw	0
  5746   000B1E  6F89               	movwf	strtof@_u& (0+255),b
  5747   000B20  0E00               	movlw	0
  5748   000B22  6F8A               	movwf	(strtof@_u+1)& (0+255),b
  5749   000B24  0E00               	movlw	0
  5750   000B26  6F8B               	movwf	(strtof@_u+2)& (0+255),b
  5751   000B28  0E00               	movlw	0
  5752   000B2A  6F8C               	movwf	(strtof@_u+3)& (0+255),b
  5753   000B2C  0E00               	movlw	0
  5754   000B2E  6F86               	movwf	(strtof@expon+1)& (0+255),b
  5755   000B30  0E80               	movlw	128
  5756   000B32  6F85               	movwf	strtof@expon& (0+255),b
  5757   000B34                     l4988:
  5758                           
  5759                           ; BSR set to: 0
  5760   000B34  0E09               	movlw	9
  5761   000B36  6F7D               	movwf	??_strtof& (0+255),b
  5762   000B38                     u5795:
  5763   000B38  90D8               	bcf	status,0,c
  5764   000B3A  338C               	rrcf	(strtof@_u+3)& (0+255),f,b
  5765   000B3C  338B               	rrcf	(strtof@_u+2)& (0+255),f,b
  5766   000B3E  338A               	rrcf	(strtof@_u+1)& (0+255),f,b
  5767   000B40  3389               	rrcf	strtof@_u& (0+255),f,b
  5768   000B42  2F7D               	decfsz	??_strtof& (0+255),f,b
  5769   000B44  EF9C  F005         	goto	u5795
  5770   000B48                     
  5771                           ; BSR set to: 0
  5772   000B48  0EFF               	movlw	255
  5773   000B4A  1789               	andwf	strtof@_u& (0+255),f,b
  5774   000B4C  0EFF               	movlw	255
  5775   000B4E  178A               	andwf	(strtof@_u+1)& (0+255),f,b
  5776   000B50  0E7F               	movlw	127
  5777   000B52  178B               	andwf	(strtof@_u+2)& (0+255),f,b
  5778   000B54  0E00               	movlw	0
  5779   000B56  178C               	andwf	(strtof@_u+3)& (0+255),f,b
  5780   000B58                     
  5781                           ; BSR set to: 0
  5782   000B58  0E7F               	movlw	127
  5783   000B5A  2585               	addwf	strtof@expon& (0+255),w,b
  5784   000B5C  6F7D               	movwf	??_strtof& (0+255),b
  5785   000B5E  0E00               	movlw	0
  5786   000B60  2186               	addwfc	(strtof@expon+1)& (0+255),w,b
  5787   000B62  6F7E               	movwf	(??_strtof+1)& (0+255),b
  5788   000B64  0EFF               	movlw	255
  5789   000B66  157D               	andwf	??_strtof& (0+255),w,b
  5790   000B68  6F7F               	movwf	(??_strtof+2)& (0+255),b
  5791   000B6A  6B80               	clrf	(??_strtof+3)& (0+255),b
  5792   000B6C  6B81               	clrf	(??_strtof+4)& (0+255),b
  5793   000B6E  6B82               	clrf	(??_strtof+5)& (0+255),b
  5794   000B70  0E17               	movlw	23
  5795   000B72                     u5805:
  5796   000B72  90D8               	bcf	status,0,c
  5797   000B74  377F               	rlcf	(??_strtof+2)& (0+255),f,b
  5798   000B76  3780               	rlcf	(??_strtof+3)& (0+255),f,b
  5799   000B78  3781               	rlcf	(??_strtof+4)& (0+255),f,b
  5800   000B7A  3782               	rlcf	(??_strtof+5)& (0+255),f,b
  5801   000B7C  2EE8               	decfsz	wreg,f,c
  5802   000B7E  EFB9  F005         	goto	u5805
  5803   000B82  517F               	movf	(??_strtof+2)& (0+255),w,b
  5804   000B84  1389               	iorwf	strtof@_u& (0+255),f,b
  5805   000B86  5180               	movf	(??_strtof+3)& (0+255),w,b
  5806   000B88  138A               	iorwf	(strtof@_u+1)& (0+255),f,b
  5807   000B8A  5181               	movf	(??_strtof+4)& (0+255),w,b
  5808   000B8C  138B               	iorwf	(strtof@_u+2)& (0+255),f,b
  5809   000B8E  5182               	movf	(??_strtof+5)& (0+255),w,b
  5810   000B90  138C               	iorwf	(strtof@_u+3)& (0+255),f,b
  5811   000B92  EFAE  F008         	goto	l1485
  5812   000B96                     l1570:
  5813                           
  5814                           ; BSR set to: 0
  5815   000B96  B984               	btfsc	strtof@flags& (0+255),4,b
  5816   000B98  EFD0  F005         	goto	u5811
  5817   000B9C  EFD2  F005         	goto	u5810
  5818   000BA0                     u5811:
  5819   000BA0  EFE4  F005         	goto	l5000
  5820   000BA4                     u5810:
  5821   000BA4                     
  5822                           ; BSR set to: 0
  5823   000BA4  C079  FFD9         	movff	strtof@s,fsr2l
  5824   000BA8  C07A  FFDA         	movff	strtof@s+1,fsr2h
  5825   000BAC  0E2E               	movlw	46
  5826   000BAE  18DE               	xorwf	postinc2,w,c
  5827   000BB0  A4D8               	btfss	status,2,c
  5828   000BB2  EFDD  F005         	goto	u5821
  5829   000BB6  EFDF  F005         	goto	u5820
  5830   000BBA                     u5821:
  5831   000BBA  EFE4  F005         	goto	l5000
  5832   000BBE                     u5820:
  5833   000BBE                     
  5834                           ; BSR set to: 0
  5835   000BBE  8984               	bsf	strtof@flags& (0+255),4,b
  5836   000BC0  4B79               	infsnz	strtof@s& (0+255),f,b
  5837   000BC2  2B7A               	incf	(strtof@s+1)& (0+255),f,b
  5838   000BC4  EFCB  F005         	goto	l1570
  5839   000BC8                     l5000:
  5840                           
  5841                           ; BSR set to: 0
  5842   000BC8  C079  FFD9         	movff	strtof@s,fsr2l
  5843   000BCC  C07A  FFDA         	movff	strtof@s+1,fsr2h
  5844   000BD0  50DF               	movf	indf2,w,c
  5845   000BD2  6F7D               	movwf	??_strtof& (0+255),b
  5846   000BD4  0ED0               	movlw	208
  5847   000BD6  257D               	addwf	??_strtof& (0+255),w,b
  5848   000BD8  6F7E               	movwf	(??_strtof+1)& (0+255),b
  5849   000BDA  6B7F               	clrf	(??_strtof+2)& (0+255),b
  5850   000BDC  0EFF               	movlw	255
  5851   000BDE  237F               	addwfc	(??_strtof+2)& (0+255),f,b
  5852   000BE0  517F               	movf	(??_strtof+2)& (0+255),w,b
  5853   000BE2  E109               	bnz	u5830
  5854   000BE4  0E0A               	movlw	10
  5855   000BE6  5D7E               	subwf	(??_strtof+1)& (0+255),w,b
  5856   000BE8  A0D8               	btfss	status,0,c
  5857   000BEA  EFF9  F005         	goto	u5831
  5858   000BEE  EFFB  F005         	goto	u5830
  5859   000BF2                     u5831:
  5860   000BF2  EFFD  F005         	goto	l5004
  5861   000BF6                     u5830:
  5862   000BF6  EF4C  F006         	goto	l5018
  5863   000BFA                     l5004:
  5864                           
  5865                           ; BSR set to: 0
  5866   000BFA  8384               	bsf	strtof@flags& (0+255),1,b
  5867   000BFC                     
  5868                           ; BSR set to: 0
  5869   000BFC  0E09               	movlw	9
  5870   000BFE  1987               	xorwf	strtof@eexp& (0+255),w,b
  5871   000C00  1188               	iorwf	(strtof@eexp+1)& (0+255),w,b
  5872   000C02  B4D8               	btfsc	status,2,c
  5873   000C04  EF06  F006         	goto	u5841
  5874   000C08  EF08  F006         	goto	u5840
  5875   000C0C                     u5841:
  5876   000C0C  EF3F  F006         	goto	l1577
  5877   000C10                     u5840:
  5878   000C10                     
  5879                           ; BSR set to: 0
  5880   000C10  A984               	btfss	strtof@flags& (0+255),4,b
  5881   000C12  EF0D  F006         	goto	u5851
  5882   000C16  EF0F  F006         	goto	u5850
  5883   000C1A                     u5851:
  5884   000C1A  EF12  F006         	goto	l1578
  5885   000C1E                     u5850:
  5886   000C1E                     
  5887                           ; BSR set to: 0
  5888   000C1E  0785               	decf	strtof@expon& (0+255),f,b
  5889   000C20  A0D8               	btfss	status,0,c
  5890   000C22  0786               	decf	(strtof@expon+1)& (0+255),f,b
  5891   000C24                     l1578:
  5892                           
  5893                           ; BSR set to: 0
  5894   000C24  4B87               	infsnz	strtof@eexp& (0+255),f,b
  5895   000C26  2B88               	incf	(strtof@eexp+1)& (0+255),f,b
  5896   000C28                     
  5897                           ; BSR set to: 0
  5898   000C28  C089  F060         	movff	strtof@_u,___lmul@multiplier
  5899   000C2C  C08A  F061         	movff	strtof@_u+1,___lmul@multiplier+1
  5900   000C30  C08B  F062         	movff	strtof@_u+2,___lmul@multiplier+2
  5901   000C34  C08C  F063         	movff	strtof@_u+3,___lmul@multiplier+3
  5902   000C38  0E0A               	movlw	10
  5903   000C3A  6F64               	movwf	___lmul@multiplicand& (0+255),b
  5904   000C3C  0E00               	movlw	0
  5905   000C3E  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
  5906   000C40  0E00               	movlw	0
  5907   000C42  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
  5908   000C44  0E00               	movlw	0
  5909   000C46  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
  5910   000C48  EC16  F01D         	call	___lmul	;wreg free
  5911   000C4C  C060  F089         	movff	?___lmul,strtof@_u
  5912   000C50  C061  F08A         	movff	?___lmul+1,strtof@_u+1
  5913   000C54  C062  F08B         	movff	?___lmul+2,strtof@_u+2
  5914   000C58  C063  F08C         	movff	?___lmul+3,strtof@_u+3
  5915   000C5C  C079  FFD9         	movff	strtof@s,fsr2l
  5916   000C60  C07A  FFDA         	movff	strtof@s+1,fsr2h
  5917   000C64  50DF               	movf	indf2,w,c
  5918   000C66  0100               	movlb	0	; () banked
  5919   000C68  6F7D               	movwf	??_strtof& (0+255),b
  5920   000C6A  0ED0               	movlw	208
  5921   000C6C  277D               	addwf	??_strtof& (0+255),f,b
  5922   000C6E  517D               	movf	??_strtof& (0+255),w,b
  5923   000C70  2789               	addwf	strtof@_u& (0+255),f,b
  5924   000C72  0E00               	movlw	0
  5925   000C74  238A               	addwfc	(strtof@_u+1)& (0+255),f,b
  5926   000C76  238B               	addwfc	(strtof@_u+2)& (0+255),f,b
  5927   000C78  238C               	addwfc	(strtof@_u+3)& (0+255),f,b
  5928   000C7A  EF48  F006         	goto	l1579
  5929   000C7E                     l1577:
  5930                           
  5931                           ; BSR set to: 0
  5932   000C7E  B984               	btfsc	strtof@flags& (0+255),4,b
  5933   000C80  EF44  F006         	goto	u5861
  5934   000C84  EF46  F006         	goto	u5860
  5935   000C88                     u5861:
  5936   000C88  EF48  F006         	goto	l1579
  5937   000C8C                     u5860:
  5938   000C8C                     
  5939                           ; BSR set to: 0
  5940   000C8C  4B85               	infsnz	strtof@expon& (0+255),f,b
  5941   000C8E  2B86               	incf	(strtof@expon+1)& (0+255),f,b
  5942   000C90                     l1579:
  5943                           
  5944                           ; BSR set to: 0
  5945   000C90  4B79               	infsnz	strtof@s& (0+255),f,b
  5946   000C92  2B7A               	incf	(strtof@s+1)& (0+255),f,b
  5947   000C94  EFCB  F005         	goto	l1570
  5948   000C98                     l5018:
  5949                           
  5950                           ; BSR set to: 0
  5951   000C98  0E00               	movlw	0
  5952   000C9A  6F88               	movwf	(strtof@eexp+1)& (0+255),b
  5953   000C9C  0E00               	movlw	0
  5954   000C9E  6F87               	movwf	strtof@eexp& (0+255),b
  5955   000CA0                     
  5956                           ; BSR set to: 0
  5957   000CA0  C079  FFD9         	movff	strtof@s,fsr2l
  5958   000CA4  C07A  FFDA         	movff	strtof@s+1,fsr2h
  5959   000CA8  0E65               	movlw	101
  5960   000CAA  18DE               	xorwf	postinc2,w,c
  5961   000CAC  B4D8               	btfsc	status,2,c
  5962   000CAE  EF5B  F006         	goto	u5871
  5963   000CB2  EF5D  F006         	goto	u5870
  5964   000CB6                     u5871:
  5965   000CB6  EF6A  F006         	goto	l5024
  5966   000CBA                     u5870:
  5967   000CBA                     
  5968                           ; BSR set to: 0
  5969   000CBA  C079  FFD9         	movff	strtof@s,fsr2l
  5970   000CBE  C07A  FFDA         	movff	strtof@s+1,fsr2h
  5971   000CC2  0E45               	movlw	69
  5972   000CC4  18DE               	xorwf	postinc2,w,c
  5973   000CC6  A4D8               	btfss	status,2,c
  5974   000CC8  EF68  F006         	goto	u5881
  5975   000CCC  EF6A  F006         	goto	u5880
  5976   000CD0                     u5881:
  5977   000CD0  EF2B  F007         	goto	l5062
  5978   000CD4                     u5880:
  5979   000CD4                     l5024:
  5980                           
  5981                           ; BSR set to: 0
  5982   000CD4  4B79               	infsnz	strtof@s& (0+255),f,b
  5983   000CD6  2B7A               	incf	(strtof@s+1)& (0+255),f,b
  5984   000CD8  C079  FFD9         	movff	strtof@s,fsr2l
  5985   000CDC  C07A  FFDA         	movff	strtof@s+1,fsr2h
  5986   000CE0  0E2D               	movlw	45
  5987   000CE2  18DE               	xorwf	postinc2,w,c
  5988   000CE4  A4D8               	btfss	status,2,c
  5989   000CE6  EF77  F006         	goto	u5891
  5990   000CEA  EF79  F006         	goto	u5890
  5991   000CEE                     u5891:
  5992   000CEE  EF7E  F006         	goto	l5028
  5993   000CF2                     u5890:
  5994   000CF2                     
  5995                           ; BSR set to: 0
  5996   000CF2  8784               	bsf	strtof@flags& (0+255),3,b
  5997   000CF4  4B79               	infsnz	strtof@s& (0+255),f,b
  5998   000CF6  2B7A               	incf	(strtof@s+1)& (0+255),f,b
  5999   000CF8  EF8D  F006         	goto	l5034
  6000   000CFC                     l5028:
  6001                           
  6002                           ; BSR set to: 0
  6003   000CFC  C079  FFD9         	movff	strtof@s,fsr2l
  6004   000D00  C07A  FFDA         	movff	strtof@s+1,fsr2h
  6005   000D04  0E2B               	movlw	43
  6006   000D06  18DE               	xorwf	postinc2,w,c
  6007   000D08  A4D8               	btfss	status,2,c
  6008   000D0A  EF89  F006         	goto	u5901
  6009   000D0E  EF8B  F006         	goto	u5900
  6010   000D12                     u5901:
  6011   000D12  EF8D  F006         	goto	l5034
  6012   000D16                     u5900:
  6013   000D16                     l5030:
  6014                           
  6015                           ; BSR set to: 0
  6016   000D16  4B79               	infsnz	strtof@s& (0+255),f,b
  6017   000D18  2B7A               	incf	(strtof@s+1)& (0+255),f,b
  6018   000D1A                     l5034:
  6019                           
  6020                           ; BSR set to: 0
  6021   000D1A  C079  FFD9         	movff	strtof@s,fsr2l
  6022   000D1E  C07A  FFDA         	movff	strtof@s+1,fsr2h
  6023   000D22  0E30               	movlw	48
  6024   000D24  18DE               	xorwf	postinc2,w,c
  6025   000D26  B4D8               	btfsc	status,2,c
  6026   000D28  EF98  F006         	goto	u5911
  6027   000D2C  EF9A  F006         	goto	u5910
  6028   000D30                     u5911:
  6029   000D30  EF8B  F006         	goto	l5030
  6030   000D34                     u5910:
  6031   000D34                     
  6032                           ; BSR set to: 0
  6033   000D34  C079  FFD9         	movff	strtof@s,fsr2l
  6034   000D38  C07A  FFDA         	movff	strtof@s+1,fsr2h
  6035   000D3C  50DF               	movf	indf2,w,c
  6036   000D3E  6F7D               	movwf	??_strtof& (0+255),b
  6037   000D40  0ED0               	movlw	208
  6038   000D42  257D               	addwf	??_strtof& (0+255),w,b
  6039   000D44  6F7E               	movwf	(??_strtof+1)& (0+255),b
  6040   000D46  6B7F               	clrf	(??_strtof+2)& (0+255),b
  6041   000D48  0EFF               	movlw	255
  6042   000D4A  237F               	addwfc	(??_strtof+2)& (0+255),f,b
  6043   000D4C  517F               	movf	(??_strtof+2)& (0+255),w,b
  6044   000D4E  E107               	bnz	u5921
  6045   000D50  0E0A               	movlw	10
  6046   000D52  5D7E               	subwf	(??_strtof+1)& (0+255),w,b
  6047   000D54  B0D8               	btfsc	status,0,c
  6048   000D56  EFAF  F006         	goto	u5921
  6049   000D5A  EFB1  F006         	goto	u5920
  6050   000D5E                     u5921:
  6051   000D5E  EF20  F007         	goto	l5058
  6052   000D62                     u5920:
  6053   000D62                     
  6054                           ; BSR set to: 0
  6055   000D62  C079  FFD9         	movff	strtof@s,fsr2l
  6056   000D66  C07A  FFDA         	movff	strtof@s+1,fsr2h
  6057   000D6A  50DF               	movf	indf2,w,c
  6058   000D6C  6F7D               	movwf	??_strtof& (0+255),b
  6059   000D6E  0ED0               	movlw	208
  6060   000D70  277D               	addwf	??_strtof& (0+255),f,b
  6061   000D72  517D               	movf	??_strtof& (0+255),w,b
  6062   000D74  6F87               	movwf	strtof@eexp& (0+255),b
  6063   000D76  6B88               	clrf	(strtof@eexp+1)& (0+255),b
  6064   000D78                     
  6065                           ; BSR set to: 0
  6066   000D78  4B79               	infsnz	strtof@s& (0+255),f,b
  6067   000D7A  2B7A               	incf	(strtof@s+1)& (0+255),f,b
  6068   000D7C                     
  6069                           ; BSR set to: 0
  6070   000D7C  C079  FFD9         	movff	strtof@s,fsr2l
  6071   000D80  C07A  FFDA         	movff	strtof@s+1,fsr2h
  6072   000D84  50DF               	movf	indf2,w,c
  6073   000D86  6F7D               	movwf	??_strtof& (0+255),b
  6074   000D88  0ED0               	movlw	208
  6075   000D8A  257D               	addwf	??_strtof& (0+255),w,b
  6076   000D8C  6F7E               	movwf	(??_strtof+1)& (0+255),b
  6077   000D8E  6B7F               	clrf	(??_strtof+2)& (0+255),b
  6078   000D90  0EFF               	movlw	255
  6079   000D92  237F               	addwfc	(??_strtof+2)& (0+255),f,b
  6080   000D94  517F               	movf	(??_strtof+2)& (0+255),w,b
  6081   000D96  E107               	bnz	u5931
  6082   000D98  0E0A               	movlw	10
  6083   000D9A  5D7E               	subwf	(??_strtof+1)& (0+255),w,b
  6084   000D9C  B0D8               	btfsc	status,0,c
  6085   000D9E  EFD3  F006         	goto	u5931
  6086   000DA2  EFD5  F006         	goto	u5930
  6087   000DA6                     u5931:
  6088   000DA6  EF20  F007         	goto	l5058
  6089   000DAA                     u5930:
  6090   000DAA                     
  6091                           ; BSR set to: 0
  6092   000DAA  C079  FFD9         	movff	strtof@s,fsr2l
  6093   000DAE  C07A  FFDA         	movff	strtof@s+1,fsr2h
  6094   000DB2  50DF               	movf	indf2,w,c
  6095   000DB4  6F7D               	movwf	??_strtof& (0+255),b
  6096   000DB6  0ED0               	movlw	208
  6097   000DB8  277D               	addwf	??_strtof& (0+255),f,b
  6098   000DBA  C087  F060         	movff	strtof@eexp,___wmul@multiplier
  6099   000DBE  C088  F061         	movff	strtof@eexp+1,___wmul@multiplier+1
  6100   000DC2  0E00               	movlw	0
  6101   000DC4  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6102   000DC6  0E0A               	movlw	10
  6103   000DC8  6F62               	movwf	___wmul@multiplicand& (0+255),b
  6104   000DCA  EC3D  F020         	call	___wmul	;wreg free
  6105   000DCE  0100               	movlb	0	; () banked
  6106   000DD0  517D               	movf	??_strtof& (0+255),w,b
  6107   000DD2  2560               	addwf	?___wmul& (0+255),w,b
  6108   000DD4  6F87               	movwf	strtof@eexp& (0+255),b
  6109   000DD6  0E00               	movlw	0
  6110   000DD8  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  6111   000DDA  6F88               	movwf	(strtof@eexp+1)& (0+255),b
  6112   000DDC                     
  6113                           ; BSR set to: 0
  6114   000DDC  4B79               	infsnz	strtof@s& (0+255),f,b
  6115   000DDE  2B7A               	incf	(strtof@s+1)& (0+255),f,b
  6116   000DE0                     
  6117                           ; BSR set to: 0
  6118   000DE0  C079  FFD9         	movff	strtof@s,fsr2l
  6119   000DE4  C07A  FFDA         	movff	strtof@s+1,fsr2h
  6120   000DE8  50DF               	movf	indf2,w,c
  6121   000DEA  6F7D               	movwf	??_strtof& (0+255),b
  6122   000DEC  0ED0               	movlw	208
  6123   000DEE  257D               	addwf	??_strtof& (0+255),w,b
  6124   000DF0  6F7E               	movwf	(??_strtof+1)& (0+255),b
  6125   000DF2  6B7F               	clrf	(??_strtof+2)& (0+255),b
  6126   000DF4  0EFF               	movlw	255
  6127   000DF6  237F               	addwfc	(??_strtof+2)& (0+255),f,b
  6128   000DF8  517F               	movf	(??_strtof+2)& (0+255),w,b
  6129   000DFA  E107               	bnz	u5941
  6130   000DFC  0E0A               	movlw	10
  6131   000DFE  5D7E               	subwf	(??_strtof+1)& (0+255),w,b
  6132   000E00  B0D8               	btfsc	status,0,c
  6133   000E02  EF05  F007         	goto	u5941
  6134   000E06  EF07  F007         	goto	u5940
  6135   000E0A                     u5941:
  6136   000E0A  EF20  F007         	goto	l5058
  6137   000E0E                     u5940:
  6138   000E0E                     
  6139                           ; BSR set to: 0
  6140   000E0E  C079  FFD9         	movff	strtof@s,fsr2l
  6141   000E12  C07A  FFDA         	movff	strtof@s+1,fsr2h
  6142   000E16  50DF               	movf	indf2,w,c
  6143   000E18  6F7D               	movwf	??_strtof& (0+255),b
  6144   000E1A  0ED0               	movlw	208
  6145   000E1C  277D               	addwf	??_strtof& (0+255),f,b
  6146   000E1E  C087  F060         	movff	strtof@eexp,___wmul@multiplier
  6147   000E22  C088  F061         	movff	strtof@eexp+1,___wmul@multiplier+1
  6148   000E26  0E00               	movlw	0
  6149   000E28  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6150   000E2A  0E0A               	movlw	10
  6151   000E2C  6F62               	movwf	___wmul@multiplicand& (0+255),b
  6152   000E2E  EC3D  F020         	call	___wmul	;wreg free
  6153   000E32  0100               	movlb	0	; () banked
  6154   000E34  517D               	movf	??_strtof& (0+255),w,b
  6155   000E36  2560               	addwf	?___wmul& (0+255),w,b
  6156   000E38  6F87               	movwf	strtof@eexp& (0+255),b
  6157   000E3A  0E00               	movlw	0
  6158   000E3C  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  6159   000E3E  6F88               	movwf	(strtof@eexp+1)& (0+255),b
  6160   000E40                     l5058:
  6161                           
  6162                           ; BSR set to: 0
  6163   000E40  A784               	btfss	strtof@flags& (0+255),3,b
  6164   000E42  EF25  F007         	goto	u5951
  6165   000E46  EF27  F007         	goto	u5950
  6166   000E4A                     u5951:
  6167   000E4A  EF2B  F007         	goto	l5062
  6168   000E4E                     u5950:
  6169   000E4E                     
  6170                           ; BSR set to: 0
  6171   000E4E  6D87               	negf	strtof@eexp& (0+255),b
  6172   000E50  1F88               	comf	(strtof@eexp+1)& (0+255),f,b
  6173   000E52  B0D8               	btfsc	status,0,c
  6174   000E54  2B88               	incf	(strtof@eexp+1)& (0+255),f,b
  6175   000E56                     l5062:
  6176                           
  6177                           ; BSR set to: 0
  6178   000E56  5187               	movf	strtof@eexp& (0+255),w,b
  6179   000E58  2785               	addwf	strtof@expon& (0+255),f,b
  6180   000E5A  5188               	movf	(strtof@eexp+1)& (0+255),w,b
  6181   000E5C  2386               	addwfc	(strtof@expon+1)& (0+255),f,b
  6182   000E5E                     
  6183                           ; BSR set to: 0
  6184   000E5E  517B               	movf	strtof@res& (0+255),w,b
  6185   000E60  117C               	iorwf	(strtof@res+1)& (0+255),w,b
  6186   000E62  B4D8               	btfsc	status,2,c
  6187   000E64  EF36  F007         	goto	u5961
  6188   000E68  EF38  F007         	goto	u5960
  6189   000E6C                     u5961:
  6190   000E6C  EF47  F007         	goto	l5070
  6191   000E70                     u5960:
  6192   000E70                     
  6193                           ; BSR set to: 0
  6194   000E70  A384               	btfss	strtof@flags& (0+255),1,b
  6195   000E72  EF3D  F007         	goto	u5971
  6196   000E76  EF3F  F007         	goto	u5970
  6197   000E7A                     u5971:
  6198   000E7A  EF47  F007         	goto	l5070
  6199   000E7E                     u5970:
  6200   000E7E                     
  6201                           ; BSR set to: 0
  6202   000E7E  C07B  FFD9         	movff	strtof@res,fsr2l
  6203   000E82  C07C  FFDA         	movff	strtof@res+1,fsr2h
  6204   000E86  C079  FFDE         	movff	strtof@s,postinc2
  6205   000E8A  C07A  FFDD         	movff	strtof@s+1,postdec2
  6206   000E8E                     l5070:
  6207                           
  6208                           ; BSR set to: 0
  6209   000E8E  C089  F060         	movff	strtof@_u,___xxtofl@val
  6210   000E92  C08A  F061         	movff	strtof@_u+1,___xxtofl@val+1
  6211   000E96  C08B  F062         	movff	strtof@_u+2,___xxtofl@val+2
  6212   000E9A  C08C  F063         	movff	strtof@_u+3,___xxtofl@val+3
  6213   000E9E  0E00               	movlw	0
  6214   000EA0  EC5C  F013         	call	___xxtofl
  6215   000EA4  C060  F089         	movff	?___xxtofl,strtof@_u
  6216   000EA8  C061  F08A         	movff	?___xxtofl+1,strtof@_u+1
  6217   000EAC  C062  F08B         	movff	?___xxtofl+2,strtof@_u+2
  6218   000EB0  C063  F08C         	movff	?___xxtofl+3,strtof@_u+3
  6219   000EB4  C089  F060         	movff	strtof@_u,___fleq@ff1
  6220   000EB8  C08A  F061         	movff	strtof@_u+1,___fleq@ff1+1
  6221   000EBC  C08B  F062         	movff	strtof@_u+2,___fleq@ff1+2
  6222   000EC0  C08C  F063         	movff	strtof@_u+3,___fleq@ff1+3
  6223   000EC4  0E00               	movlw	0
  6224   000EC6  0100               	movlb	0	; () banked
  6225   000EC8  6F64               	movwf	___fleq@ff2& (0+255),b
  6226   000ECA  0E00               	movlw	0
  6227   000ECC  6F65               	movwf	(___fleq@ff2+1)& (0+255),b
  6228   000ECE  0E00               	movlw	0
  6229   000ED0  6F66               	movwf	(___fleq@ff2+2)& (0+255),b
  6230   000ED2  0E00               	movlw	0
  6231   000ED4  6F67               	movwf	(___fleq@ff2+3)& (0+255),b
  6232   000ED6  EC77  F01B         	call	___fleq	;wreg free
  6233   000EDA  0100               	movlb	0	; () banked
  6234   000EDC  A0D8               	btfss	status,0,c
  6235   000EDE  EF73  F007         	goto	u5981
  6236   000EE2  EF75  F007         	goto	u5980
  6237   000EE6                     u5981:
  6238   000EE6  EF7F  F007         	goto	l5078
  6239   000EEA                     u5980:
  6240   000EEA                     
  6241                           ; BSR set to: 0
  6242   000EEA  0E00               	movlw	0
  6243   000EEC  6F79               	movwf	?_strtof& (0+255),b
  6244   000EEE  0E00               	movlw	0
  6245   000EF0  6F7A               	movwf	(?_strtof+1)& (0+255),b
  6246   000EF2  0E00               	movlw	0
  6247   000EF4  6F7B               	movwf	(?_strtof+2)& (0+255),b
  6248   000EF6  0E00               	movlw	0
  6249   000EF8  6F7C               	movwf	(?_strtof+3)& (0+255),b
  6250   000EFA  EFCF  F008         	goto	l1529
  6251   000EFE                     l5078:
  6252                           
  6253                           ; BSR set to: 0
  6254   000EFE  BF86               	btfsc	(strtof@expon+1)& (0+255),7,b
  6255   000F00  EF86  F007         	goto	u5990
  6256   000F04  EF84  F007         	goto	u5991
  6257   000F08                     u5991:
  6258   000F08  EF17  F008         	goto	l5106
  6259   000F0C                     u5990:
  6260   000F0C                     
  6261                           ; BSR set to: 0
  6262   000F0C  6D85               	negf	strtof@expon& (0+255),b
  6263   000F0E  1F86               	comf	(strtof@expon+1)& (0+255),f,b
  6264   000F10  B0D8               	btfsc	status,0,c
  6265   000F12  2B86               	incf	(strtof@expon+1)& (0+255),f,b
  6266   000F14  EFAB  F007         	goto	l5086
  6267   000F18                     l5082:
  6268                           
  6269                           ; BSR set to: 0
  6270   000F18  C089  F060         	movff	strtof@_u,___fldiv@b
  6271   000F1C  C08A  F061         	movff	strtof@_u+1,___fldiv@b+1
  6272   000F20  C08B  F062         	movff	strtof@_u+2,___fldiv@b+2
  6273   000F24  C08C  F063         	movff	strtof@_u+3,___fldiv@b+3
  6274   000F28  0EF9               	movlw	249
  6275   000F2A  6F64               	movwf	___fldiv@a& (0+255),b
  6276   000F2C  0E02               	movlw	2
  6277   000F2E  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  6278   000F30  0E15               	movlw	21
  6279   000F32  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  6280   000F34  0E50               	movlw	80
  6281   000F36  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  6282   000F38  EC69  F00F         	call	___fldiv	;wreg free
  6283   000F3C  C060  F089         	movff	?___fldiv,strtof@_u
  6284   000F40  C061  F08A         	movff	?___fldiv+1,strtof@_u+1
  6285   000F44  C062  F08B         	movff	?___fldiv+2,strtof@_u+2
  6286   000F48  C063  F08C         	movff	?___fldiv+3,strtof@_u+3
  6287   000F4C  0100               	movlb	0	; () banked
  6288   000F4E  0EF6               	movlw	246
  6289   000F50  2785               	addwf	strtof@expon& (0+255),f,b
  6290   000F52  0EFF               	movlw	255
  6291   000F54  2386               	addwfc	(strtof@expon+1)& (0+255),f,b
  6292   000F56                     l5086:
  6293                           
  6294                           ; BSR set to: 0
  6295   000F56  BF86               	btfsc	(strtof@expon+1)& (0+255),7,b
  6296   000F58  EFB9  F007         	goto	u6000
  6297   000F5C  5186               	movf	(strtof@expon+1)& (0+255),w,b
  6298   000F5E  E107               	bnz	u6001
  6299   000F60  0E0A               	movlw	10
  6300   000F62  5D85               	subwf	strtof@expon& (0+255),w,b
  6301   000F64  B0D8               	btfsc	status,0,c
  6302   000F66  EFB7  F007         	goto	u6001
  6303   000F6A  EFB9  F007         	goto	u6000
  6304   000F6E                     u6001:
  6305   000F6E  EF8C  F007         	goto	l5082
  6306   000F72                     u6000:
  6307   000F72  EFD9  F007         	goto	l5092
  6308   000F76                     l5088:
  6309                           
  6310                           ; BSR set to: 0
  6311   000F76  C089  F060         	movff	strtof@_u,___fldiv@b
  6312   000F7A  C08A  F061         	movff	strtof@_u+1,___fldiv@b+1
  6313   000F7E  C08B  F062         	movff	strtof@_u+2,___fldiv@b+2
  6314   000F82  C08C  F063         	movff	strtof@_u+3,___fldiv@b+3
  6315   000F86  0E00               	movlw	0
  6316   000F88  6F64               	movwf	___fldiv@a& (0+255),b
  6317   000F8A  0E00               	movlw	0
  6318   000F8C  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  6319   000F8E  0E20               	movlw	32
  6320   000F90  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  6321   000F92  0E41               	movlw	65
  6322   000F94  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  6323   000F96  EC69  F00F         	call	___fldiv	;wreg free
  6324   000F9A  C060  F089         	movff	?___fldiv,strtof@_u
  6325   000F9E  C061  F08A         	movff	?___fldiv+1,strtof@_u+1
  6326   000FA2  C062  F08B         	movff	?___fldiv+2,strtof@_u+2
  6327   000FA6  C063  F08C         	movff	?___fldiv+3,strtof@_u+3
  6328   000FAA  0100               	movlb	0	; () banked
  6329   000FAC  0785               	decf	strtof@expon& (0+255),f,b
  6330   000FAE  A0D8               	btfss	status,0,c
  6331   000FB0  0786               	decf	(strtof@expon+1)& (0+255),f,b
  6332   000FB2                     l5092:
  6333                           
  6334                           ; BSR set to: 0
  6335   000FB2  5185               	movf	strtof@expon& (0+255),w,b
  6336   000FB4  1186               	iorwf	(strtof@expon+1)& (0+255),w,b
  6337   000FB6  A4D8               	btfss	status,2,c
  6338   000FB8  EFE0  F007         	goto	u6011
  6339   000FBC  EFE2  F007         	goto	u6010
  6340   000FC0                     u6011:
  6341   000FC0  EFBB  F007         	goto	l5088
  6342   000FC4                     u6010:
  6343   000FC4                     
  6344                           ; BSR set to: 0
  6345   000FC4  C089  F060         	movff	strtof@_u,___flge@ff1
  6346   000FC8  C08A  F061         	movff	strtof@_u+1,___flge@ff1+1
  6347   000FCC  C08B  F062         	movff	strtof@_u+2,___flge@ff1+2
  6348   000FD0  C08C  F063         	movff	strtof@_u+3,___flge@ff1+3
  6349   000FD4  0E00               	movlw	0
  6350   000FD6  6F64               	movwf	___flge@ff2& (0+255),b
  6351   000FD8  0E00               	movlw	0
  6352   000FDA  6F65               	movwf	(___flge@ff2+1)& (0+255),b
  6353   000FDC  0E80               	movlw	128
  6354   000FDE  6F66               	movwf	(___flge@ff2+2)& (0+255),b
  6355   000FE0  0E00               	movlw	0
  6356   000FE2  6F67               	movwf	(___flge@ff2+3)& (0+255),b
  6357   000FE4  EC86  F018         	call	___flge	;wreg free
  6358   000FE8  0100               	movlb	0	; () banked
  6359   000FEA  B0D8               	btfsc	status,0,c
  6360   000FEC  EFFA  F007         	goto	u6021
  6361   000FF0  EFFC  F007         	goto	u6020
  6362   000FF4                     u6021:
  6363   000FF4  EFAE  F008         	goto	l1485
  6364   000FF8                     u6020:
  6365   000FF8                     
  6366                           ; BSR set to: 0
  6367   000FF8  A184               	btfss	strtof@flags& (0+255),0,b
  6368   000FFA  EF01  F008         	goto	u6031
  6369   000FFE  EF03  F008         	goto	u6030
  6370   001002                     u6031:
  6371   001002  EF0D  F008         	goto	l5102
  6372   001006                     u6030:
  6373   001006                     
  6374                           ; BSR set to: 0
  6375   001006  0E00               	movlw	0
  6376   001008  6F79               	movwf	?_strtof& (0+255),b
  6377   00100A  0E00               	movlw	0
  6378   00100C  6F7A               	movwf	(?_strtof+1)& (0+255),b
  6379   00100E  0E80               	movlw	128
  6380   001010  6F7B               	movwf	(?_strtof+2)& (0+255),b
  6381   001012  0E80               	movlw	128
  6382   001014  6F7C               	movwf	(?_strtof+3)& (0+255),b
  6383   001016  EFCF  F008         	goto	l1529
  6384   00101A                     l5102:
  6385                           
  6386                           ; BSR set to: 0
  6387   00101A  0E00               	movlw	0
  6388   00101C  6F79               	movwf	?_strtof& (0+255),b
  6389   00101E  0E00               	movlw	0
  6390   001020  6F7A               	movwf	(?_strtof+1)& (0+255),b
  6391   001022  0E80               	movlw	128
  6392   001024  6F7B               	movwf	(?_strtof+2)& (0+255),b
  6393   001026  0E00               	movlw	0
  6394   001028  6F7C               	movwf	(?_strtof+3)& (0+255),b
  6395   00102A  EFCF  F008         	goto	l1529
  6396   00102E                     l5106:
  6397                           
  6398                           ; BSR set to: 0
  6399   00102E  BF86               	btfsc	(strtof@expon+1)& (0+255),7,b
  6400   001030  EF22  F008         	goto	u6041
  6401   001034  5186               	movf	(strtof@expon+1)& (0+255),w,b
  6402   001036  E108               	bnz	u6040
  6403   001038  0585               	decf	strtof@expon& (0+255),w,b
  6404   00103A  A0D8               	btfss	status,0,c
  6405   00103C  EF22  F008         	goto	u6041
  6406   001040  EF24  F008         	goto	u6040
  6407   001044                     u6041:
  6408   001044  EFAE  F008         	goto	l1485
  6409   001048                     u6040:
  6410   001048  EF45  F008         	goto	l5114
  6411   00104C                     l5110:
  6412                           
  6413                           ; BSR set to: 0
  6414   00104C  C089  F060         	movff	strtof@_u,___flmul@b
  6415   001050  C08A  F061         	movff	strtof@_u+1,___flmul@b+1
  6416   001054  C08B  F062         	movff	strtof@_u+2,___flmul@b+2
  6417   001058  C08C  F063         	movff	strtof@_u+3,___flmul@b+3
  6418   00105C  0EF9               	movlw	249
  6419   00105E  6F64               	movwf	___flmul@a& (0+255),b
  6420   001060  0E02               	movlw	2
  6421   001062  6F65               	movwf	(___flmul@a+1)& (0+255),b
  6422   001064  0E15               	movlw	21
  6423   001066  6F66               	movwf	(___flmul@a+2)& (0+255),b
  6424   001068  0E50               	movlw	80
  6425   00106A  6F67               	movwf	(___flmul@a+3)& (0+255),b
  6426   00106C  EC53  F00D         	call	___flmul	;wreg free
  6427   001070  C060  F089         	movff	?___flmul,strtof@_u
  6428   001074  C061  F08A         	movff	?___flmul+1,strtof@_u+1
  6429   001078  C062  F08B         	movff	?___flmul+2,strtof@_u+2
  6430   00107C  C063  F08C         	movff	?___flmul+3,strtof@_u+3
  6431   001080  0100               	movlb	0	; () banked
  6432   001082  0EF6               	movlw	246
  6433   001084  2785               	addwf	strtof@expon& (0+255),f,b
  6434   001086  0EFF               	movlw	255
  6435   001088  2386               	addwfc	(strtof@expon+1)& (0+255),f,b
  6436   00108A                     l5114:
  6437                           
  6438                           ; BSR set to: 0
  6439   00108A  5186               	movf	(strtof@expon+1)& (0+255),w,b
  6440   00108C  E107               	bnz	u6051
  6441   00108E  0E0A               	movlw	10
  6442   001090  5D85               	subwf	strtof@expon& (0+255),w,b
  6443   001092  B0D8               	btfsc	status,0,c
  6444   001094  EF4E  F008         	goto	u6051
  6445   001098  EF50  F008         	goto	u6050
  6446   00109C                     u6051:
  6447   00109C  EF26  F008         	goto	l5110
  6448   0010A0                     u6050:
  6449   0010A0  EF70  F008         	goto	l5120
  6450   0010A4                     l5116:
  6451                           
  6452                           ; BSR set to: 0
  6453   0010A4  C089  F060         	movff	strtof@_u,___flmul@b
  6454   0010A8  C08A  F061         	movff	strtof@_u+1,___flmul@b+1
  6455   0010AC  C08B  F062         	movff	strtof@_u+2,___flmul@b+2
  6456   0010B0  C08C  F063         	movff	strtof@_u+3,___flmul@b+3
  6457   0010B4  0E00               	movlw	0
  6458   0010B6  6F64               	movwf	___flmul@a& (0+255),b
  6459   0010B8  0E00               	movlw	0
  6460   0010BA  6F65               	movwf	(___flmul@a+1)& (0+255),b
  6461   0010BC  0E20               	movlw	32
  6462   0010BE  6F66               	movwf	(___flmul@a+2)& (0+255),b
  6463   0010C0  0E41               	movlw	65
  6464   0010C2  6F67               	movwf	(___flmul@a+3)& (0+255),b
  6465   0010C4  EC53  F00D         	call	___flmul	;wreg free
  6466   0010C8  C060  F089         	movff	?___flmul,strtof@_u
  6467   0010CC  C061  F08A         	movff	?___flmul+1,strtof@_u+1
  6468   0010D0  C062  F08B         	movff	?___flmul+2,strtof@_u+2
  6469   0010D4  C063  F08C         	movff	?___flmul+3,strtof@_u+3
  6470   0010D8  0100               	movlb	0	; () banked
  6471   0010DA  0785               	decf	strtof@expon& (0+255),f,b
  6472   0010DC  A0D8               	btfss	status,0,c
  6473   0010DE  0786               	decf	(strtof@expon+1)& (0+255),f,b
  6474   0010E0                     l5120:
  6475                           
  6476                           ; BSR set to: 0
  6477   0010E0  5185               	movf	strtof@expon& (0+255),w,b
  6478   0010E2  1186               	iorwf	(strtof@expon+1)& (0+255),w,b
  6479   0010E4  A4D8               	btfss	status,2,c
  6480   0010E6  EF77  F008         	goto	u6061
  6481   0010EA  EF79  F008         	goto	u6060
  6482   0010EE                     u6061:
  6483   0010EE  EF52  F008         	goto	l5116
  6484   0010F2                     u6060:
  6485   0010F2                     
  6486                           ; BSR set to: 0
  6487   0010F2  0EFF               	movlw	255
  6488   0010F4  6F60               	movwf	___flge@ff1& (0+255),b
  6489   0010F6  0EFF               	movlw	255
  6490   0010F8  6F61               	movwf	(___flge@ff1+1)& (0+255),b
  6491   0010FA  0E7F               	movlw	127
  6492   0010FC  6F62               	movwf	(___flge@ff1+2)& (0+255),b
  6493   0010FE  0E7F               	movlw	127
  6494   001100  6F63               	movwf	(___flge@ff1+3)& (0+255),b
  6495   001102  C089  F064         	movff	strtof@_u,___flge@ff2
  6496   001106  C08A  F065         	movff	strtof@_u+1,___flge@ff2+1
  6497   00110A  C08B  F066         	movff	strtof@_u+2,___flge@ff2+2
  6498   00110E  C08C  F067         	movff	strtof@_u+3,___flge@ff2+3
  6499   001112  EC86  F018         	call	___flge	;wreg free
  6500   001116  0100               	movlb	0	; () banked
  6501   001118  B0D8               	btfsc	status,0,c
  6502   00111A  EF91  F008         	goto	u6071
  6503   00111E  EF93  F008         	goto	u6070
  6504   001122                     u6071:
  6505   001122  EFAE  F008         	goto	l1485
  6506   001126                     u6070:
  6507   001126                     
  6508                           ; BSR set to: 0
  6509   001126  A184               	btfss	strtof@flags& (0+255),0,b
  6510   001128  EF98  F008         	goto	u6081
  6511   00112C  EF9A  F008         	goto	u6080
  6512   001130                     u6081:
  6513   001130  EFA4  F008         	goto	l5130
  6514   001134                     u6080:
  6515   001134                     
  6516                           ; BSR set to: 0
  6517   001134  0E00               	movlw	0
  6518   001136  6F79               	movwf	?_strtof& (0+255),b
  6519   001138  0E00               	movlw	0
  6520   00113A  6F7A               	movwf	(?_strtof+1)& (0+255),b
  6521   00113C  0E80               	movlw	128
  6522   00113E  6F7B               	movwf	(?_strtof+2)& (0+255),b
  6523   001140  0E80               	movlw	128
  6524   001142  6F7C               	movwf	(?_strtof+3)& (0+255),b
  6525   001144  EFCF  F008         	goto	l1529
  6526   001148                     l5130:
  6527                           
  6528                           ; BSR set to: 0
  6529   001148  0E00               	movlw	0
  6530   00114A  6F79               	movwf	?_strtof& (0+255),b
  6531   00114C  0E00               	movlw	0
  6532   00114E  6F7A               	movwf	(?_strtof+1)& (0+255),b
  6533   001150  0E80               	movlw	128
  6534   001152  6F7B               	movwf	(?_strtof+2)& (0+255),b
  6535   001154  0E00               	movlw	0
  6536   001156  6F7C               	movwf	(?_strtof+3)& (0+255),b
  6537   001158  EFCF  F008         	goto	l1529
  6538   00115C                     l1485:
  6539                           
  6540                           ; BSR set to: 0
  6541   00115C  A184               	btfss	strtof@flags& (0+255),0,b
  6542   00115E  EFB3  F008         	goto	u6091
  6543   001162  EFB5  F008         	goto	u6090
  6544   001166                     u6091:
  6545   001166  EFC7  F008         	goto	l5136
  6546   00116A                     u6090:
  6547   00116A                     
  6548                           ; BSR set to: 0
  6549   00116A  C089  F060         	movff	strtof@_u,___flneg@f1
  6550   00116E  C08A  F061         	movff	strtof@_u+1,___flneg@f1+1
  6551   001172  C08B  F062         	movff	strtof@_u+2,___flneg@f1+2
  6552   001176  C08C  F063         	movff	strtof@_u+3,___flneg@f1+3
  6553   00117A  ECAF  F01F         	call	___flneg	;wreg free
  6554   00117E  C060  F089         	movff	?___flneg,strtof@_u
  6555   001182  C061  F08A         	movff	?___flneg+1,strtof@_u+1
  6556   001186  C062  F08B         	movff	?___flneg+2,strtof@_u+2
  6557   00118A  C063  F08C         	movff	?___flneg+3,strtof@_u+3
  6558   00118E                     l5136:
  6559   00118E  C089  F079         	movff	strtof@_u,?_strtof
  6560   001192  C08A  F07A         	movff	strtof@_u+1,?_strtof+1
  6561   001196  C08B  F07B         	movff	strtof@_u+2,?_strtof+2
  6562   00119A  C08C  F07C         	movff	strtof@_u+3,?_strtof+3
  6563   00119E                     l1529:
  6564   00119E  0012               	return		;funcret
  6565   0011A0                     __end_of_strtof:
  6566                           	callstack 0
  6567                           
  6568 ;; *************** function _toupper *****************
  6569 ;; Defined at:
  6570 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\toupper.c"
  6571 ;; Parameters:    Size  Location     Type
  6572 ;;  c               2    4[BANK0 ] int 
  6573 ;; Auto vars:     Size  Location     Type
  6574 ;;		None
  6575 ;; Return value:  Size  Location     Type
  6576 ;;                  2    4[BANK0 ] int 
  6577 ;; Registers used:
  6578 ;;		wreg, status,2, status,0
  6579 ;; Tracked objects:
  6580 ;;		On entry : 0/0
  6581 ;;		On exit  : 0/0
  6582 ;;		Unchanged: 0/0
  6583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6584 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6586 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6587 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6588 ;;Total ram usage:        4 bytes
  6589 ;; Hardware stack levels used: 1
  6590 ;; Hardware stack levels required when called: 4
  6591 ;; This function calls:
  6592 ;;		_islower
  6593 ;; This function is called by:
  6594 ;;		_strtof
  6595 ;; This function uses a non-reentrant model
  6596 ;;
  6597                           
  6598                           	psect	text17
  6599   003F24                     __ptext17:
  6600                           	callstack 0
  6601   003F24                     _toupper:
  6602                           	callstack 22
  6603   003F24  0E9F               	movlw	159
  6604   003F26  0100               	movlb	0	; () banked
  6605   003F28  2564               	addwf	toupper@c& (0+255),w,b
  6606   003F2A  6F66               	movwf	??_toupper& (0+255),b
  6607   003F2C  0EFF               	movlw	255
  6608   003F2E  2165               	addwfc	(toupper@c+1)& (0+255),w,b
  6609   003F30  6F67               	movwf	(??_toupper+1)& (0+255),b
  6610   003F32  5167               	movf	(??_toupper+1)& (0+255),w,b
  6611   003F34  E107               	bnz	u4771
  6612   003F36  0E1A               	movlw	26
  6613   003F38  5D66               	subwf	??_toupper& (0+255),w,b
  6614   003F3A  B0D8               	btfsc	status,0,c
  6615   003F3C  EFA2  F01F         	goto	u4771
  6616   003F40  EFA4  F01F         	goto	u4770
  6617   003F44                     u4771:
  6618   003F44  EFAA  F01F         	goto	l1650
  6619   003F48                     u4770:
  6620   003F48                     
  6621                           ; BSR set to: 0
  6622   003F48  0E5F               	movlw	95
  6623   003F4A  1564               	andwf	toupper@c& (0+255),w,b
  6624   003F4C  6F64               	movwf	?_toupper& (0+255),b
  6625   003F4E  6B65               	clrf	(?_toupper+1)& (0+255),b
  6626   003F50  EFAE  F01F         	goto	l1653
  6627   003F54                     l1650:
  6628                           
  6629                           ; BSR set to: 0
  6630   003F54  C064  F064         	movff	toupper@c,?_toupper
  6631   003F58  C065  F065         	movff	toupper@c+1,?_toupper+1
  6632   003F5C                     l1653:
  6633                           
  6634                           ; BSR set to: 0
  6635   003F5C  0012               	return		;funcret
  6636   003F5E                     __end_of_toupper:
  6637                           	callstack 0
  6638                           
  6639 ;; *************** function _islower *****************
  6640 ;; Defined at:
  6641 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\islower.c"
  6642 ;; Parameters:    Size  Location     Type
  6643 ;;  c               2    0[BANK0 ] int 
  6644 ;; Auto vars:     Size  Location     Type
  6645 ;;		None
  6646 ;; Return value:  Size  Location     Type
  6647 ;;                  2    0[BANK0 ] int 
  6648 ;; Registers used:
  6649 ;;		wreg, status,2, status,0
  6650 ;; Tracked objects:
  6651 ;;		On entry : 0/0
  6652 ;;		On exit  : 0/0
  6653 ;;		Unchanged: 0/0
  6654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6655 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6657 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6658 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6659 ;;Total ram usage:        4 bytes
  6660 ;; Hardware stack levels used: 1
  6661 ;; Hardware stack levels required when called: 3
  6662 ;; This function calls:
  6663 ;;		Nothing
  6664 ;; This function is called by:
  6665 ;;		_toupper
  6666 ;; This function uses a non-reentrant model
  6667 ;;
  6668                           
  6669                           	psect	text18
  6670   003FCE                     __ptext18:
  6671                           	callstack 0
  6672   003FCE                     _islower:
  6673                           	callstack 22
  6674   003FCE  0E9F               	movlw	159
  6675   003FD0  0100               	movlb	0	; () banked
  6676   003FD2  2560               	addwf	islower@c& (0+255),w,b
  6677   003FD4  6F62               	movwf	??_islower& (0+255),b
  6678   003FD6  0EFF               	movlw	255
  6679   003FD8  2161               	addwfc	(islower@c+1)& (0+255),w,b
  6680   003FDA  6F63               	movwf	(??_islower+1)& (0+255),b
  6681   003FDC  5163               	movf	(??_islower+1)& (0+255),w,b
  6682   003FDE  E10A               	bnz	u4050
  6683   003FE0  0E1A               	movlw	26
  6684   003FE2  5D62               	subwf	??_islower& (0+255),w,b
  6685   003FE4  A0D8               	btfss	status,0,c
  6686   003FE6  EFF7  F01F         	goto	u4051
  6687   003FEA  EFFA  F01F         	goto	u4050
  6688   003FEE                     u4051:
  6689   003FEE  0E01               	movlw	1
  6690   003FF0  EFFB  F01F         	goto	u4060
  6691   003FF4                     u4050:
  6692   003FF4  0E00               	movlw	0
  6693   003FF6                     u4060:
  6694   003FF6  6F60               	movwf	?_islower& (0+255),b
  6695   003FF8  6B61               	clrf	(?_islower+1)& (0+255),b
  6696   003FFA                     
  6697                           ; BSR set to: 0
  6698   003FFA  0012               	return		;funcret
  6699   003FFC                     __end_of_islower:
  6700                           	callstack 0
  6701                           
  6702 ;; *************** function _nanf *****************
  6703 ;; Defined at:
  6704 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nanf.c"
  6705 ;; Parameters:    Size  Location     Type
  6706 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  6707 ;;		 -> STR_79(1), 
  6708 ;; Auto vars:     Size  Location     Type
  6709 ;;  u               4    4[BANK0 ] struct .
  6710 ;; Return value:  Size  Location     Type
  6711 ;;                  4    0[BANK0 ] float 
  6712 ;; Registers used:
  6713 ;;		wreg, status,2
  6714 ;; Tracked objects:
  6715 ;;		On entry : 0/0
  6716 ;;		On exit  : 0/0
  6717 ;;		Unchanged: 0/0
  6718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6719 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6720 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6722 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6723 ;;Total ram usage:        8 bytes
  6724 ;; Hardware stack levels used: 1
  6725 ;; Hardware stack levels required when called: 3
  6726 ;; This function calls:
  6727 ;;		Nothing
  6728 ;; This function is called by:
  6729 ;;		_strtof
  6730 ;; This function uses a non-reentrant model
  6731 ;;
  6732                           
  6733                           	psect	text19
  6734   0040A2                     __ptext19:
  6735                           	callstack 0
  6736   0040A2                     _nanf:
  6737                           	callstack 23
  6738   0040A2  0EFF               	movlw	255
  6739   0040A4  0100               	movlb	0	; () banked
  6740   0040A6  6F64               	movwf	nanf@u& (0+255),b
  6741   0040A8  0EFF               	movlw	255
  6742   0040AA  6F65               	movwf	(nanf@u+1)& (0+255),b
  6743   0040AC  0EFF               	movlw	255
  6744   0040AE  6F66               	movwf	(nanf@u+2)& (0+255),b
  6745   0040B0  0E7F               	movlw	127
  6746   0040B2  6F67               	movwf	(nanf@u+3)& (0+255),b
  6747   0040B4                     
  6748                           ; BSR set to: 0
  6749   0040B4  C064  F060         	movff	nanf@u,?_nanf
  6750   0040B8  C065  F061         	movff	nanf@u+1,?_nanf+1
  6751   0040BC  C066  F062         	movff	nanf@u+2,?_nanf+2
  6752   0040C0  C067  F063         	movff	nanf@u+3,?_nanf+3
  6753   0040C4                     
  6754                           ; BSR set to: 0
  6755   0040C4  0012               	return		;funcret
  6756   0040C6                     __end_of_nanf:
  6757                           	callstack 0
  6758                           
  6759 ;; *************** function _isxdigit *****************
  6760 ;; Defined at:
  6761 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isxdigit.c"
  6762 ;; Parameters:    Size  Location     Type
  6763 ;;  c               2    4[BANK0 ] int 
  6764 ;; Auto vars:     Size  Location     Type
  6765 ;;		None
  6766 ;; Return value:  Size  Location     Type
  6767 ;;                  2    4[BANK0 ] int 
  6768 ;; Registers used:
  6769 ;;		wreg, status,2, status,0
  6770 ;; Tracked objects:
  6771 ;;		On entry : 0/0
  6772 ;;		On exit  : 0/0
  6773 ;;		Unchanged: 0/0
  6774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6775 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6776 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6777 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6778 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6779 ;;Total ram usage:        7 bytes
  6780 ;; Hardware stack levels used: 1
  6781 ;; Hardware stack levels required when called: 4
  6782 ;; This function calls:
  6783 ;;		_isdigit
  6784 ;; This function is called by:
  6785 ;;		_strtof
  6786 ;; This function uses a non-reentrant model
  6787 ;;
  6788                           
  6789                           	psect	text20
  6790   003B00                     __ptext20:
  6791                           	callstack 0
  6792   003B00                     _isxdigit:
  6793                           	callstack 22
  6794   003B00  0E01               	movlw	1
  6795   003B02  0100               	movlb	0	; () banked
  6796   003B04  6F6A               	movwf	_isxdigit$2508& (0+255),b
  6797   003B06                     
  6798                           ; BSR set to: 0
  6799   003B06  0ED0               	movlw	208
  6800   003B08  2564               	addwf	isxdigit@c& (0+255),w,b
  6801   003B0A  6F66               	movwf	??_isxdigit& (0+255),b
  6802   003B0C  0EFF               	movlw	255
  6803   003B0E  2165               	addwfc	(isxdigit@c+1)& (0+255),w,b
  6804   003B10  6F67               	movwf	(??_isxdigit+1)& (0+255),b
  6805   003B12  5167               	movf	(??_isxdigit+1)& (0+255),w,b
  6806   003B14  E109               	bnz	u4750
  6807   003B16  0E0A               	movlw	10
  6808   003B18  5D66               	subwf	??_isxdigit& (0+255),w,b
  6809   003B1A  A0D8               	btfss	status,0,c
  6810   003B1C  EF92  F01D         	goto	u4751
  6811   003B20  EF94  F01D         	goto	u4750
  6812   003B24                     u4751:
  6813   003B24  EFAD  F01D         	goto	l4498
  6814   003B28                     u4750:
  6815   003B28                     
  6816                           ; BSR set to: 0
  6817   003B28  0E20               	movlw	32
  6818   003B2A  1164               	iorwf	isxdigit@c& (0+255),w,b
  6819   003B2C  6F66               	movwf	??_isxdigit& (0+255),b
  6820   003B2E  0E00               	movlw	0
  6821   003B30  1165               	iorwf	(isxdigit@c+1)& (0+255),w,b
  6822   003B32  6F67               	movwf	(??_isxdigit+1)& (0+255),b
  6823   003B34  0E9F               	movlw	159
  6824   003B36  2566               	addwf	??_isxdigit& (0+255),w,b
  6825   003B38  6F68               	movwf	(??_isxdigit+2)& (0+255),b
  6826   003B3A  0EFF               	movlw	255
  6827   003B3C  2167               	addwfc	(??_isxdigit+1)& (0+255),w,b
  6828   003B3E  6F69               	movwf	(??_isxdigit+3)& (0+255),b
  6829   003B40  5169               	movf	(??_isxdigit+3)& (0+255),w,b
  6830   003B42  E109               	bnz	u4760
  6831   003B44  0E06               	movlw	6
  6832   003B46  5D68               	subwf	(??_isxdigit+2)& (0+255),w,b
  6833   003B48  A0D8               	btfss	status,0,c
  6834   003B4A  EFA9  F01D         	goto	u4761
  6835   003B4E  EFAB  F01D         	goto	u4760
  6836   003B52                     u4761:
  6837   003B52  EFAD  F01D         	goto	l4498
  6838   003B56                     u4760:
  6839   003B56                     
  6840                           ; BSR set to: 0
  6841   003B56  0E00               	movlw	0
  6842   003B58  6F6A               	movwf	_isxdigit$2508& (0+255),b
  6843   003B5A                     l4498:
  6844                           
  6845                           ; BSR set to: 0
  6846   003B5A  C06A  F064         	movff	_isxdigit$2508,?_isxdigit
  6847   003B5E  6B65               	clrf	(?_isxdigit+1)& (0+255),b
  6848   003B60                     
  6849                           ; BSR set to: 0
  6850   003B60  0012               	return		;funcret
  6851   003B62                     __end_of_isxdigit:
  6852                           	callstack 0
  6853                           
  6854 ;; *************** function _isdigit *****************
  6855 ;; Defined at:
  6856 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isdigit.c"
  6857 ;; Parameters:    Size  Location     Type
  6858 ;;  c               2    0[BANK0 ] int 
  6859 ;; Auto vars:     Size  Location     Type
  6860 ;;		None
  6861 ;; Return value:  Size  Location     Type
  6862 ;;                  2    0[BANK0 ] int 
  6863 ;; Registers used:
  6864 ;;		wreg, status,2, status,0
  6865 ;; Tracked objects:
  6866 ;;		On entry : 0/0
  6867 ;;		On exit  : 0/0
  6868 ;;		Unchanged: 0/0
  6869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6870 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6872 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6873 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6874 ;;Total ram usage:        4 bytes
  6875 ;; Hardware stack levels used: 1
  6876 ;; Hardware stack levels required when called: 3
  6877 ;; This function calls:
  6878 ;;		Nothing
  6879 ;; This function is called by:
  6880 ;;		_get_coords_usb
  6881 ;;		_strtof
  6882 ;;		_isxdigit
  6883 ;;		_MRF_parse_message
  6884 ;;		_atol
  6885 ;;		_atoi
  6886 ;; This function uses a non-reentrant model
  6887 ;;
  6888                           
  6889                           	psect	text21
  6890   003FFC                     __ptext21:
  6891                           	callstack 0
  6892   003FFC                     _isdigit:
  6893                           	callstack 25
  6894   003FFC  0ED0               	movlw	208
  6895   003FFE  0100               	movlb	0	; () banked
  6896   004000  2560               	addwf	isdigit@c& (0+255),w,b
  6897   004002  6F62               	movwf	??_isdigit& (0+255),b
  6898   004004  0EFF               	movlw	255
  6899   004006  2161               	addwfc	(isdigit@c+1)& (0+255),w,b
  6900   004008  6F63               	movwf	(??_isdigit+1)& (0+255),b
  6901   00400A  5163               	movf	(??_isdigit+1)& (0+255),w,b
  6902   00400C  E10A               	bnz	u3930
  6903   00400E  0E0A               	movlw	10
  6904   004010  5D62               	subwf	??_isdigit& (0+255),w,b
  6905   004012  A0D8               	btfss	status,0,c
  6906   004014  EF0E  F020         	goto	u3931
  6907   004018  EF11  F020         	goto	u3930
  6908   00401C                     u3931:
  6909   00401C  0E01               	movlw	1
  6910   00401E  EF12  F020         	goto	u3940
  6911   004022                     u3930:
  6912   004022  0E00               	movlw	0
  6913   004024                     u3940:
  6914   004024  6F60               	movwf	?_isdigit& (0+255),b
  6915   004026  6B61               	clrf	(?_isdigit+1)& (0+255),b
  6916   004028                     
  6917                           ; BSR set to: 0
  6918   004028  0012               	return		;funcret
  6919   00402A                     __end_of_isdigit:
  6920                           	callstack 0
  6921                           
  6922 ;; *************** function _isspace *****************
  6923 ;; Defined at:
  6924 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isspace.c"
  6925 ;; Parameters:    Size  Location     Type
  6926 ;;  c               2    0[BANK0 ] int 
  6927 ;; Auto vars:     Size  Location     Type
  6928 ;;		None
  6929 ;; Return value:  Size  Location     Type
  6930 ;;                  2    0[BANK0 ] int 
  6931 ;; Registers used:
  6932 ;;		wreg, status,2, status,0
  6933 ;; Tracked objects:
  6934 ;;		On entry : 0/0
  6935 ;;		On exit  : 0/0
  6936 ;;		Unchanged: 0/0
  6937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6938 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6939 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6940 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6941 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6942 ;;Total ram usage:        5 bytes
  6943 ;; Hardware stack levels used: 1
  6944 ;; Hardware stack levels required when called: 3
  6945 ;; This function calls:
  6946 ;;		Nothing
  6947 ;; This function is called by:
  6948 ;;		_strtof
  6949 ;;		_atol
  6950 ;;		_atoi
  6951 ;; This function uses a non-reentrant model
  6952 ;;
  6953                           
  6954                           	psect	text22
  6955   003DCA                     __ptext22:
  6956                           	callstack 0
  6957   003DCA                     _isspace:
  6958                           	callstack 23
  6959   003DCA  0E01               	movlw	1
  6960   003DCC  0100               	movlb	0	; () banked
  6961   003DCE  6F64               	movwf	_isspace$2268& (0+255),b
  6962   003DD0                     
  6963                           ; BSR set to: 0
  6964   003DD0  0E20               	movlw	32
  6965   003DD2  1960               	xorwf	isspace@c& (0+255),w,b
  6966   003DD4  1161               	iorwf	(isspace@c+1)& (0+255),w,b
  6967   003DD6  B4D8               	btfsc	status,2,c
  6968   003DD8  EFF0  F01E         	goto	u4701
  6969   003DDC  EFF2  F01E         	goto	u4700
  6970   003DE0                     u4701:
  6971   003DE0  EF05  F01F         	goto	l4444
  6972   003DE4                     u4700:
  6973   003DE4                     
  6974                           ; BSR set to: 0
  6975   003DE4  0EF7               	movlw	247
  6976   003DE6  2560               	addwf	isspace@c& (0+255),w,b
  6977   003DE8  6F62               	movwf	??_isspace& (0+255),b
  6978   003DEA  0EFF               	movlw	255
  6979   003DEC  2161               	addwfc	(isspace@c+1)& (0+255),w,b
  6980   003DEE  6F63               	movwf	(??_isspace+1)& (0+255),b
  6981   003DF0  5163               	movf	(??_isspace+1)& (0+255),w,b
  6982   003DF2  E109               	bnz	u4710
  6983   003DF4  0E05               	movlw	5
  6984   003DF6  5D62               	subwf	??_isspace& (0+255),w,b
  6985   003DF8  A0D8               	btfss	status,0,c
  6986   003DFA  EF01  F01F         	goto	u4711
  6987   003DFE  EF03  F01F         	goto	u4710
  6988   003E02                     u4711:
  6989   003E02  EF05  F01F         	goto	l4444
  6990   003E06                     u4710:
  6991   003E06                     
  6992                           ; BSR set to: 0
  6993   003E06  0E00               	movlw	0
  6994   003E08  6F64               	movwf	_isspace$2268& (0+255),b
  6995   003E0A                     l4444:
  6996                           
  6997                           ; BSR set to: 0
  6998   003E0A  C064  F060         	movff	_isspace$2268,?_isspace
  6999   003E0E  6B61               	clrf	(?_isspace+1)& (0+255),b
  7000   003E10                     
  7001                           ; BSR set to: 0
  7002   003E10  0012               	return		;funcret
  7003   003E12                     __end_of_isspace:
  7004                           	callstack 0
  7005                           
  7006 ;; *************** function ___wmul *****************
  7007 ;; Defined at:
  7008 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  7009 ;; Parameters:    Size  Location     Type
  7010 ;;  multiplier      2    0[BANK0 ] unsigned int 
  7011 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  7012 ;; Auto vars:     Size  Location     Type
  7013 ;;  product         2    4[BANK0 ] unsigned int 
  7014 ;; Return value:  Size  Location     Type
  7015 ;;                  2    0[BANK0 ] unsigned int 
  7016 ;; Registers used:
  7017 ;;		wreg, status,2, status,0, prodl, prodh
  7018 ;; Tracked objects:
  7019 ;;		On entry : 0/0
  7020 ;;		On exit  : 0/0
  7021 ;;		Unchanged: 0/0
  7022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7023 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7024 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7026 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7027 ;;Total ram usage:        6 bytes
  7028 ;; Hardware stack levels used: 1
  7029 ;; Hardware stack levels required when called: 3
  7030 ;; This function calls:
  7031 ;;		Nothing
  7032 ;; This function is called by:
  7033 ;;		_strtof
  7034 ;;		_atoi
  7035 ;; This function uses a non-reentrant model
  7036 ;;
  7037                           
  7038                           	psect	text23
  7039   00407A                     __ptext23:
  7040                           	callstack 0
  7041   00407A                     ___wmul:
  7042                           	callstack 23
  7043   00407A  0100               	movlb	0	; () banked
  7044   00407C  5160               	movf	___wmul@multiplier& (0+255),w,b
  7045   00407E  0362               	mulwf	___wmul@multiplicand& (0+255),b
  7046   004080  CFF3 F064          	movff	prodl,___wmul@product
  7047   004084  CFF4 F065          	movff	prodh,___wmul@product+1
  7048   004088  5160               	movf	___wmul@multiplier& (0+255),w,b
  7049   00408A  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  7050   00408C  50F3               	movf	243,w,c
  7051   00408E  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  7052   004090  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
  7053   004092  0362               	mulwf	___wmul@multiplicand& (0+255),b
  7054   004094  50F3               	movf	243,w,c
  7055   004096  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  7056   004098                     
  7057                           ; BSR set to: 0
  7058   004098  C064  F060         	movff	___wmul@product,?___wmul
  7059   00409C  C065  F061         	movff	___wmul@product+1,?___wmul+1
  7060   0040A0                     
  7061                           ; BSR set to: 0
  7062   0040A0  0012               	return		;funcret
  7063   0040A2                     __end_of___wmul:
  7064                           	callstack 0
  7065                           
  7066 ;; *************** function ___lmul *****************
  7067 ;; Defined at:
  7068 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul32.c"
  7069 ;; Parameters:    Size  Location     Type
  7070 ;;  multiplier      4    0[BANK0 ] unsigned long 
  7071 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  7072 ;; Auto vars:     Size  Location     Type
  7073 ;;  product         4    8[BANK0 ] unsigned long 
  7074 ;; Return value:  Size  Location     Type
  7075 ;;                  4    0[BANK0 ] unsigned long 
  7076 ;; Registers used:
  7077 ;;		wreg, status,2, status,0
  7078 ;; Tracked objects:
  7079 ;;		On entry : 0/0
  7080 ;;		On exit  : 0/0
  7081 ;;		Unchanged: 0/0
  7082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7083 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7084 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7086 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7087 ;;Total ram usage:       12 bytes
  7088 ;; Hardware stack levels used: 1
  7089 ;; Hardware stack levels required when called: 3
  7090 ;; This function calls:
  7091 ;;		Nothing
  7092 ;; This function is called by:
  7093 ;;		_strtof
  7094 ;;		_atol
  7095 ;; This function uses a non-reentrant model
  7096 ;;
  7097                           
  7098                           	psect	text24
  7099   003A2C                     __ptext24:
  7100                           	callstack 0
  7101   003A2C                     ___lmul:
  7102                           	callstack 23
  7103   003A2C  0E00               	movlw	0
  7104   003A2E  0100               	movlb	0	; () banked
  7105   003A30  6F68               	movwf	___lmul@product& (0+255),b
  7106   003A32  0E00               	movlw	0
  7107   003A34  6F69               	movwf	(___lmul@product+1)& (0+255),b
  7108   003A36  0E00               	movlw	0
  7109   003A38  6F6A               	movwf	(___lmul@product+2)& (0+255),b
  7110   003A3A  0E00               	movlw	0
  7111   003A3C  6F6B               	movwf	(___lmul@product+3)& (0+255),b
  7112   003A3E                     l4068:
  7113                           
  7114                           ; BSR set to: 0
  7115   003A3E  A160               	btfss	___lmul@multiplier& (0+255),0,b
  7116   003A40  EF24  F01D         	goto	u4071
  7117   003A44  EF26  F01D         	goto	u4070
  7118   003A48                     u4071:
  7119   003A48  EF2E  F01D         	goto	l4072
  7120   003A4C                     u4070:
  7121   003A4C                     
  7122                           ; BSR set to: 0
  7123   003A4C  5164               	movf	___lmul@multiplicand& (0+255),w,b
  7124   003A4E  2768               	addwf	___lmul@product& (0+255),f,b
  7125   003A50  5165               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  7126   003A52  2369               	addwfc	(___lmul@product+1)& (0+255),f,b
  7127   003A54  5166               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  7128   003A56  236A               	addwfc	(___lmul@product+2)& (0+255),f,b
  7129   003A58  5167               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  7130   003A5A  236B               	addwfc	(___lmul@product+3)& (0+255),f,b
  7131   003A5C                     l4072:
  7132                           
  7133                           ; BSR set to: 0
  7134   003A5C  90D8               	bcf	status,0,c
  7135   003A5E  3764               	rlcf	___lmul@multiplicand& (0+255),f,b
  7136   003A60  3765               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  7137   003A62  3766               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  7138   003A64  3767               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  7139   003A66                     
  7140                           ; BSR set to: 0
  7141   003A66  90D8               	bcf	status,0,c
  7142   003A68  3363               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  7143   003A6A  3362               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  7144   003A6C  3361               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  7145   003A6E  3360               	rrcf	___lmul@multiplier& (0+255),f,b
  7146   003A70  5160               	movf	___lmul@multiplier& (0+255),w,b
  7147   003A72  1161               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  7148   003A74  1162               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  7149   003A76  1163               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  7150   003A78  A4D8               	btfss	status,2,c
  7151   003A7A  EF41  F01D         	goto	u4081
  7152   003A7E  EF43  F01D         	goto	u4080
  7153   003A82                     u4081:
  7154   003A82  EF1F  F01D         	goto	l4068
  7155   003A86                     u4080:
  7156   003A86                     
  7157                           ; BSR set to: 0
  7158   003A86  C068  F060         	movff	___lmul@product,?___lmul
  7159   003A8A  C069  F061         	movff	___lmul@product+1,?___lmul+1
  7160   003A8E  C06A  F062         	movff	___lmul@product+2,?___lmul+2
  7161   003A92  C06B  F063         	movff	___lmul@product+3,?___lmul+3
  7162   003A96                     
  7163                           ; BSR set to: 0
  7164   003A96  0012               	return		;funcret
  7165   003A98                     __end_of___lmul:
  7166                           	callstack 0
  7167                           
  7168 ;; *************** function ___flneg *****************
  7169 ;; Defined at:
  7170 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flneg.c"
  7171 ;; Parameters:    Size  Location     Type
  7172 ;;  f1              4    0[BANK0 ] unsigned long 
  7173 ;; Auto vars:     Size  Location     Type
  7174 ;;		None
  7175 ;; Return value:  Size  Location     Type
  7176 ;;                  4    0[BANK0 ] unsigned long 
  7177 ;; Registers used:
  7178 ;;		wreg, status,2, status,0
  7179 ;; Tracked objects:
  7180 ;;		On entry : 0/0
  7181 ;;		On exit  : 0/0
  7182 ;;		Unchanged: 0/0
  7183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7184 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7187 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7188 ;;Total ram usage:        4 bytes
  7189 ;; Hardware stack levels used: 1
  7190 ;; Hardware stack levels required when called: 3
  7191 ;; This function calls:
  7192 ;;		Nothing
  7193 ;; This function is called by:
  7194 ;;		_strtof
  7195 ;; This function uses a non-reentrant model
  7196 ;;
  7197                           
  7198                           	psect	text25
  7199   003F5E                     __ptext25:
  7200                           	callstack 0
  7201   003F5E                     ___flneg:
  7202                           	callstack 23
  7203   003F5E  0100               	movlb	0	; () banked
  7204   003F60  5160               	movf	___flneg@f1& (0+255),w,b
  7205   003F62  1161               	iorwf	(___flneg@f1+1)& (0+255),w,b
  7206   003F64  1162               	iorwf	(___flneg@f1+2)& (0+255),w,b
  7207   003F66  1163               	iorwf	(___flneg@f1+3)& (0+255),w,b
  7208   003F68  B4D8               	btfsc	status,2,c
  7209   003F6A  EFB9  F01F         	goto	u4591
  7210   003F6E  EFBB  F01F         	goto	u4590
  7211   003F72                     u4591:
  7212   003F72  EFC3  F01F         	goto	l4386
  7213   003F76                     u4590:
  7214   003F76                     
  7215                           ; BSR set to: 0
  7216   003F76  0E00               	movlw	0
  7217   003F78  1B60               	xorwf	___flneg@f1& (0+255),f,b
  7218   003F7A  0E00               	movlw	0
  7219   003F7C  1B61               	xorwf	(___flneg@f1+1)& (0+255),f,b
  7220   003F7E  0E00               	movlw	0
  7221   003F80  1B62               	xorwf	(___flneg@f1+2)& (0+255),f,b
  7222   003F82  0E80               	movlw	128
  7223   003F84  1B63               	xorwf	(___flneg@f1+3)& (0+255),f,b
  7224   003F86                     l4386:
  7225                           
  7226                           ; BSR set to: 0
  7227   003F86  C060  F060         	movff	___flneg@f1,?___flneg
  7228   003F8A  C061  F061         	movff	___flneg@f1+1,?___flneg+1
  7229   003F8E  C062  F062         	movff	___flneg@f1+2,?___flneg+2
  7230   003F92  C063  F063         	movff	___flneg@f1+3,?___flneg+3
  7231   003F96                     
  7232                           ; BSR set to: 0
  7233   003F96  0012               	return		;funcret
  7234   003F98                     __end_of___flneg:
  7235                           	callstack 0
  7236                           
  7237 ;; *************** function ___flge *****************
  7238 ;; Defined at:
  7239 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
  7240 ;; Parameters:    Size  Location     Type
  7241 ;;  ff1             4    0[BANK0 ] unsigned long 
  7242 ;;  ff2             4    4[BANK0 ] unsigned long 
  7243 ;; Auto vars:     Size  Location     Type
  7244 ;;		None
  7245 ;; Return value:  Size  Location     Type
  7246 ;;		None               void
  7247 ;; Registers used:
  7248 ;;		wreg, status,2, status,0
  7249 ;; Tracked objects:
  7250 ;;		On entry : 0/0
  7251 ;;		On exit  : 0/0
  7252 ;;		Unchanged: 0/0
  7253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7254 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7256 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7257 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7258 ;;Total ram usage:       12 bytes
  7259 ;; Hardware stack levels used: 1
  7260 ;; Hardware stack levels required when called: 3
  7261 ;; This function calls:
  7262 ;;		Nothing
  7263 ;; This function is called by:
  7264 ;;		_strtof
  7265 ;; This function uses a non-reentrant model
  7266 ;;
  7267                           
  7268                           	psect	text26
  7269   00310C                     __ptext26:
  7270                           	callstack 0
  7271   00310C                     ___flge:
  7272                           	callstack 23
  7273   00310C  0E00               	movlw	0
  7274   00310E  0100               	movlb	0	; () banked
  7275   003110  1560               	andwf	___flge@ff1& (0+255),w,b
  7276   003112  6F68               	movwf	??___flge& (0+255),b
  7277   003114  0E00               	movlw	0
  7278   003116  1561               	andwf	(___flge@ff1+1)& (0+255),w,b
  7279   003118  6F69               	movwf	(??___flge+1)& (0+255),b
  7280   00311A  0E80               	movlw	128
  7281   00311C  1562               	andwf	(___flge@ff1+2)& (0+255),w,b
  7282   00311E  6F6A               	movwf	(??___flge+2)& (0+255),b
  7283   003120  0E7F               	movlw	127
  7284   003122  1563               	andwf	(___flge@ff1+3)& (0+255),w,b
  7285   003124  6F6B               	movwf	(??___flge+3)& (0+255),b
  7286   003126  5168               	movf	??___flge& (0+255),w,b
  7287   003128  1169               	iorwf	(??___flge+1)& (0+255),w,b
  7288   00312A  116A               	iorwf	(??___flge+2)& (0+255),w,b
  7289   00312C  116B               	iorwf	(??___flge+3)& (0+255),w,b
  7290   00312E  A4D8               	btfss	status,2,c
  7291   003130  EF9C  F018         	goto	u4541
  7292   003134  EF9E  F018         	goto	u4540
  7293   003138                     u4541:
  7294   003138  EFA6  F018         	goto	l4364
  7295   00313C                     u4540:
  7296   00313C                     
  7297                           ; BSR set to: 0
  7298   00313C  0E00               	movlw	0
  7299   00313E  6F60               	movwf	___flge@ff1& (0+255),b
  7300   003140  0E00               	movlw	0
  7301   003142  6F61               	movwf	(___flge@ff1+1)& (0+255),b
  7302   003144  0E00               	movlw	0
  7303   003146  6F62               	movwf	(___flge@ff1+2)& (0+255),b
  7304   003148  0E00               	movlw	0
  7305   00314A  6F63               	movwf	(___flge@ff1+3)& (0+255),b
  7306   00314C                     l4364:
  7307                           
  7308                           ; BSR set to: 0
  7309   00314C  0E00               	movlw	0
  7310   00314E  1564               	andwf	___flge@ff2& (0+255),w,b
  7311   003150  6F68               	movwf	??___flge& (0+255),b
  7312   003152  0E00               	movlw	0
  7313   003154  1565               	andwf	(___flge@ff2+1)& (0+255),w,b
  7314   003156  6F69               	movwf	(??___flge+1)& (0+255),b
  7315   003158  0E80               	movlw	128
  7316   00315A  1566               	andwf	(___flge@ff2+2)& (0+255),w,b
  7317   00315C  6F6A               	movwf	(??___flge+2)& (0+255),b
  7318   00315E  0E7F               	movlw	127
  7319   003160  1567               	andwf	(___flge@ff2+3)& (0+255),w,b
  7320   003162  6F6B               	movwf	(??___flge+3)& (0+255),b
  7321   003164  5168               	movf	??___flge& (0+255),w,b
  7322   003166  1169               	iorwf	(??___flge+1)& (0+255),w,b
  7323   003168  116A               	iorwf	(??___flge+2)& (0+255),w,b
  7324   00316A  116B               	iorwf	(??___flge+3)& (0+255),w,b
  7325   00316C  A4D8               	btfss	status,2,c
  7326   00316E  EFBB  F018         	goto	u4551
  7327   003172  EFBD  F018         	goto	u4550
  7328   003176                     u4551:
  7329   003176  EFC5  F018         	goto	l4368
  7330   00317A                     u4550:
  7331   00317A                     
  7332                           ; BSR set to: 0
  7333   00317A  0E00               	movlw	0
  7334   00317C  6F64               	movwf	___flge@ff2& (0+255),b
  7335   00317E  0E00               	movlw	0
  7336   003180  6F65               	movwf	(___flge@ff2+1)& (0+255),b
  7337   003182  0E00               	movlw	0
  7338   003184  6F66               	movwf	(___flge@ff2+2)& (0+255),b
  7339   003186  0E00               	movlw	0
  7340   003188  6F67               	movwf	(___flge@ff2+3)& (0+255),b
  7341   00318A                     l4368:
  7342                           
  7343                           ; BSR set to: 0
  7344   00318A  AF63               	btfss	(___flge@ff1+3)& (0+255),7,b
  7345   00318C  EFCA  F018         	goto	u4561
  7346   003190  EFCC  F018         	goto	u4560
  7347   003194                     u4561:
  7348   003194  EFD5  F018         	goto	l4372
  7349   003198                     u4560:
  7350   003198                     
  7351                           ; BSR set to: 0
  7352   003198  6D60               	negf	___flge@ff1& (0+255),b
  7353   00319A  1F61               	comf	(___flge@ff1+1)& (0+255),f,b
  7354   00319C  B0D8               	btfsc	status,0,c
  7355   00319E  2B61               	incf	(___flge@ff1+1)& (0+255),f,b
  7356   0031A0  1F62               	comf	(___flge@ff1+2)& (0+255),f,b
  7357   0031A2  B0D8               	btfsc	status,0,c
  7358   0031A4  2B62               	incf	(___flge@ff1+2)& (0+255),f,b
  7359   0031A6  0E80               	movlw	128
  7360   0031A8  5763               	subfwb	(___flge@ff1+3)& (0+255),f,b
  7361   0031AA                     l4372:
  7362                           
  7363                           ; BSR set to: 0
  7364   0031AA  AF67               	btfss	(___flge@ff2+3)& (0+255),7,b
  7365   0031AC  EFDA  F018         	goto	u4571
  7366   0031B0  EFDC  F018         	goto	u4570
  7367   0031B4                     u4571:
  7368   0031B4  EFE5  F018         	goto	l853
  7369   0031B8                     u4570:
  7370   0031B8                     
  7371                           ; BSR set to: 0
  7372   0031B8  6D64               	negf	___flge@ff2& (0+255),b
  7373   0031BA  1F65               	comf	(___flge@ff2+1)& (0+255),f,b
  7374   0031BC  B0D8               	btfsc	status,0,c
  7375   0031BE  2B65               	incf	(___flge@ff2+1)& (0+255),f,b
  7376   0031C0  1F66               	comf	(___flge@ff2+2)& (0+255),f,b
  7377   0031C2  B0D8               	btfsc	status,0,c
  7378   0031C4  2B66               	incf	(___flge@ff2+2)& (0+255),f,b
  7379   0031C6  0E80               	movlw	128
  7380   0031C8  5767               	subfwb	(___flge@ff2+3)& (0+255),f,b
  7381   0031CA                     l853:
  7382                           
  7383                           ; BSR set to: 0
  7384   0031CA  0E00               	movlw	0
  7385   0031CC  1B60               	xorwf	___flge@ff1& (0+255),f,b
  7386   0031CE  0E00               	movlw	0
  7387   0031D0  1B61               	xorwf	(___flge@ff1+1)& (0+255),f,b
  7388   0031D2  0E00               	movlw	0
  7389   0031D4  1B62               	xorwf	(___flge@ff1+2)& (0+255),f,b
  7390   0031D6  0E80               	movlw	128
  7391   0031D8  1B63               	xorwf	(___flge@ff1+3)& (0+255),f,b
  7392   0031DA  0E00               	movlw	0
  7393   0031DC  1B64               	xorwf	___flge@ff2& (0+255),f,b
  7394   0031DE  0E00               	movlw	0
  7395   0031E0  1B65               	xorwf	(___flge@ff2+1)& (0+255),f,b
  7396   0031E2  0E00               	movlw	0
  7397   0031E4  1B66               	xorwf	(___flge@ff2+2)& (0+255),f,b
  7398   0031E6  0E80               	movlw	128
  7399   0031E8  1B67               	xorwf	(___flge@ff2+3)& (0+255),f,b
  7400   0031EA  5164               	movf	___flge@ff2& (0+255),w,b
  7401   0031EC  5D60               	subwf	___flge@ff1& (0+255),w,b
  7402   0031EE  5165               	movf	(___flge@ff2+1)& (0+255),w,b
  7403   0031F0  5961               	subwfb	(___flge@ff1+1)& (0+255),w,b
  7404   0031F2  5166               	movf	(___flge@ff2+2)& (0+255),w,b
  7405   0031F4  5962               	subwfb	(___flge@ff1+2)& (0+255),w,b
  7406   0031F6  5167               	movf	(___flge@ff2+3)& (0+255),w,b
  7407   0031F8  5963               	subwfb	(___flge@ff1+3)& (0+255),w,b
  7408   0031FA  B0D8               	btfsc	status,0,c
  7409   0031FC  EF02  F019         	goto	u4581
  7410   003200  EF04  F019         	goto	u4580
  7411   003204                     u4581:
  7412   003204  EF07  F019         	goto	l4378
  7413   003208                     u4580:
  7414   003208                     
  7415                           ; BSR set to: 0
  7416   003208  90D8               	bcf	status,0,c
  7417   00320A  EF08  F019         	goto	l858
  7418   00320E                     l4378:
  7419                           
  7420                           ; BSR set to: 0
  7421   00320E  80D8               	bsf	status,0,c
  7422   003210                     l858:
  7423                           
  7424                           ; BSR set to: 0
  7425   003210  0012               	return		;funcret
  7426   003212                     __end_of___flge:
  7427                           	callstack 0
  7428                           
  7429 ;; *************** function ___fleq *****************
  7430 ;; Defined at:
  7431 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
  7432 ;; Parameters:    Size  Location     Type
  7433 ;;  ff1             4    0[BANK0 ] unsigned long 
  7434 ;;  ff2             4    4[BANK0 ] unsigned long 
  7435 ;; Auto vars:     Size  Location     Type
  7436 ;;		None
  7437 ;; Return value:  Size  Location     Type
  7438 ;;		None               void
  7439 ;; Registers used:
  7440 ;;		wreg, status,2, status,0
  7441 ;; Tracked objects:
  7442 ;;		On entry : 0/0
  7443 ;;		On exit  : 0/0
  7444 ;;		Unchanged: 0/0
  7445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7446 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7448 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7449 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7450 ;;Total ram usage:       12 bytes
  7451 ;; Hardware stack levels used: 1
  7452 ;; Hardware stack levels required when called: 3
  7453 ;; This function calls:
  7454 ;;		Nothing
  7455 ;; This function is called by:
  7456 ;;		_strtof
  7457 ;; This function uses a non-reentrant model
  7458 ;;
  7459                           
  7460                           	psect	text27
  7461   0036EE                     __ptext27:
  7462                           	callstack 0
  7463   0036EE                     ___fleq:
  7464                           	callstack 23
  7465   0036EE  0E00               	movlw	0
  7466   0036F0  0100               	movlb	0	; () banked
  7467   0036F2  1560               	andwf	___fleq@ff1& (0+255),w,b
  7468   0036F4  6F68               	movwf	??___fleq& (0+255),b
  7469   0036F6  0E00               	movlw	0
  7470   0036F8  1561               	andwf	(___fleq@ff1+1)& (0+255),w,b
  7471   0036FA  6F69               	movwf	(??___fleq+1)& (0+255),b
  7472   0036FC  0E80               	movlw	128
  7473   0036FE  1562               	andwf	(___fleq@ff1+2)& (0+255),w,b
  7474   003700  6F6A               	movwf	(??___fleq+2)& (0+255),b
  7475   003702  0E7F               	movlw	127
  7476   003704  1563               	andwf	(___fleq@ff1+3)& (0+255),w,b
  7477   003706  6F6B               	movwf	(??___fleq+3)& (0+255),b
  7478   003708  5168               	movf	??___fleq& (0+255),w,b
  7479   00370A  1169               	iorwf	(??___fleq+1)& (0+255),w,b
  7480   00370C  116A               	iorwf	(??___fleq+2)& (0+255),w,b
  7481   00370E  116B               	iorwf	(??___fleq+3)& (0+255),w,b
  7482   003710  A4D8               	btfss	status,2,c
  7483   003712  EF8D  F01B         	goto	u4511
  7484   003716  EF8F  F01B         	goto	u4510
  7485   00371A                     u4511:
  7486   00371A  EF97  F01B         	goto	l4348
  7487   00371E                     u4510:
  7488   00371E                     
  7489                           ; BSR set to: 0
  7490   00371E  0E00               	movlw	0
  7491   003720  6F60               	movwf	___fleq@ff1& (0+255),b
  7492   003722  0E00               	movlw	0
  7493   003724  6F61               	movwf	(___fleq@ff1+1)& (0+255),b
  7494   003726  0E00               	movlw	0
  7495   003728  6F62               	movwf	(___fleq@ff1+2)& (0+255),b
  7496   00372A  0E00               	movlw	0
  7497   00372C  6F63               	movwf	(___fleq@ff1+3)& (0+255),b
  7498   00372E                     l4348:
  7499                           
  7500                           ; BSR set to: 0
  7501   00372E  0E00               	movlw	0
  7502   003730  1564               	andwf	___fleq@ff2& (0+255),w,b
  7503   003732  6F68               	movwf	??___fleq& (0+255),b
  7504   003734  0E00               	movlw	0
  7505   003736  1565               	andwf	(___fleq@ff2+1)& (0+255),w,b
  7506   003738  6F69               	movwf	(??___fleq+1)& (0+255),b
  7507   00373A  0E80               	movlw	128
  7508   00373C  1566               	andwf	(___fleq@ff2+2)& (0+255),w,b
  7509   00373E  6F6A               	movwf	(??___fleq+2)& (0+255),b
  7510   003740  0E7F               	movlw	127
  7511   003742  1567               	andwf	(___fleq@ff2+3)& (0+255),w,b
  7512   003744  6F6B               	movwf	(??___fleq+3)& (0+255),b
  7513   003746  5168               	movf	??___fleq& (0+255),w,b
  7514   003748  1169               	iorwf	(??___fleq+1)& (0+255),w,b
  7515   00374A  116A               	iorwf	(??___fleq+2)& (0+255),w,b
  7516   00374C  116B               	iorwf	(??___fleq+3)& (0+255),w,b
  7517   00374E  A4D8               	btfss	status,2,c
  7518   003750  EFAC  F01B         	goto	u4521
  7519   003754  EFAE  F01B         	goto	u4520
  7520   003758                     u4521:
  7521   003758  EFB6  F01B         	goto	l4352
  7522   00375C                     u4520:
  7523   00375C                     
  7524                           ; BSR set to: 0
  7525   00375C  0E00               	movlw	0
  7526   00375E  6F64               	movwf	___fleq@ff2& (0+255),b
  7527   003760  0E00               	movlw	0
  7528   003762  6F65               	movwf	(___fleq@ff2+1)& (0+255),b
  7529   003764  0E00               	movlw	0
  7530   003766  6F66               	movwf	(___fleq@ff2+2)& (0+255),b
  7531   003768  0E00               	movlw	0
  7532   00376A  6F67               	movwf	(___fleq@ff2+3)& (0+255),b
  7533   00376C                     l4352:
  7534                           
  7535                           ; BSR set to: 0
  7536   00376C  5164               	movf	___fleq@ff2& (0+255),w,b
  7537   00376E  1960               	xorwf	___fleq@ff1& (0+255),w,b
  7538   003770  E10F               	bnz	u4530
  7539   003772  5165               	movf	(___fleq@ff2+1)& (0+255),w,b
  7540   003774  1961               	xorwf	(___fleq@ff1+1)& (0+255),w,b
  7541   003776  E10C               	bnz	u4530
  7542   003778  5166               	movf	(___fleq@ff2+2)& (0+255),w,b
  7543   00377A  1962               	xorwf	(___fleq@ff1+2)& (0+255),w,b
  7544   00377C  E109               	bnz	u4530
  7545   00377E  5167               	movf	(___fleq@ff2+3)& (0+255),w,b
  7546   003780  1963               	xorwf	(___fleq@ff1+3)& (0+255),w,b
  7547   003782  B4D8               	btfsc	status,2,c
  7548   003784  EFC6  F01B         	goto	u4531
  7549   003788  EFC8  F01B         	goto	u4530
  7550   00378C                     u4531:
  7551   00378C  EFCB  F01B         	goto	l4356
  7552   003790                     u4530:
  7553   003790                     
  7554                           ; BSR set to: 0
  7555   003790  90D8               	bcf	status,0,c
  7556   003792  EFCC  F01B         	goto	l847
  7557   003796                     l4356:
  7558                           
  7559                           ; BSR set to: 0
  7560   003796  80D8               	bsf	status,0,c
  7561   003798                     l847:
  7562                           
  7563                           ; BSR set to: 0
  7564   003798  0012               	return		;funcret
  7565   00379A                     __end_of___fleq:
  7566                           	callstack 0
  7567                           
  7568 ;; *************** function ___fldiv *****************
  7569 ;; Defined at:
  7570 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
  7571 ;; Parameters:    Size  Location     Type
  7572 ;;  b               4    0[BANK0 ] unsigned long 
  7573 ;;  a               4    4[BANK0 ] unsigned long 
  7574 ;; Auto vars:     Size  Location     Type
  7575 ;;  grs             4   19[BANK0 ] unsigned long 
  7576 ;;  rem             4   12[BANK0 ] unsigned long 
  7577 ;;  new_exp         2   17[BANK0 ] short 
  7578 ;;  aexp            1   24[BANK0 ] unsigned char 
  7579 ;;  bexp            1   23[BANK0 ] unsigned char 
  7580 ;;  sign            1   16[BANK0 ] unsigned char 
  7581 ;; Return value:  Size  Location     Type
  7582 ;;                  4    0[BANK0 ] unsigned char 
  7583 ;; Registers used:
  7584 ;;		wreg, status,2, status,0
  7585 ;; Tracked objects:
  7586 ;;		On entry : 0/0
  7587 ;;		On exit  : 0/0
  7588 ;;		Unchanged: 0/0
  7589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7590 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7591 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7592 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7593 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7594 ;;Total ram usage:       25 bytes
  7595 ;; Hardware stack levels used: 1
  7596 ;; Hardware stack levels required when called: 3
  7597 ;; This function calls:
  7598 ;;		Nothing
  7599 ;; This function is called by:
  7600 ;;		_strtof
  7601 ;; This function uses a non-reentrant model
  7602 ;;
  7603                           
  7604                           	psect	text28
  7605   001ED2                     __ptext28:
  7606                           	callstack 0
  7607   001ED2                     ___fldiv:
  7608                           	callstack 23
  7609   001ED2  0100               	movlb	0	; () banked
  7610   001ED4  5163               	movf	(___fldiv@b+3)& (0+255),w,b
  7611   001ED6  0B80               	andlw	128
  7612   001ED8  6F70               	movwf	___fldiv@sign& (0+255),b
  7613   001EDA  5163               	movf	(___fldiv@b+3)& (0+255),w,b
  7614   001EDC  2563               	addwf	(___fldiv@b+3)& (0+255),w,b
  7615   001EDE  6F77               	movwf	___fldiv@bexp& (0+255),b
  7616   001EE0                     
  7617                           ; BSR set to: 0
  7618   001EE0  AF62               	btfss	(___fldiv@b+2)& (0+255),7,b
  7619   001EE2  EF75  F00F         	goto	u4091
  7620   001EE6  EF77  F00F         	goto	u4090
  7621   001EEA                     u4091:
  7622   001EEA  EF78  F00F         	goto	l4082
  7623   001EEE                     u4090:
  7624   001EEE                     
  7625                           ; BSR set to: 0
  7626   001EEE  8177               	bsf	___fldiv@bexp& (0+255),0,b
  7627   001EF0                     l4082:
  7628                           
  7629                           ; BSR set to: 0
  7630   001EF0  5177               	movf	___fldiv@bexp& (0+255),w,b
  7631   001EF2  B4D8               	btfsc	status,2,c
  7632   001EF4  EF7E  F00F         	goto	u4101
  7633   001EF8  EF80  F00F         	goto	u4100
  7634   001EFC                     u4101:
  7635   001EFC  EF95  F00F         	goto	l4092
  7636   001F00                     u4100:
  7637   001F00                     
  7638                           ; BSR set to: 0
  7639   001F00  2977               	incf	___fldiv@bexp& (0+255),w,b
  7640   001F02  A4D8               	btfss	status,2,c
  7641   001F04  EF86  F00F         	goto	u4111
  7642   001F08  EF88  F00F         	goto	u4110
  7643   001F0C                     u4111:
  7644   001F0C  EF90  F00F         	goto	l4088
  7645   001F10                     u4110:
  7646   001F10                     
  7647                           ; BSR set to: 0
  7648   001F10  0E00               	movlw	0
  7649   001F12  6F60               	movwf	___fldiv@b& (0+255),b
  7650   001F14  0E00               	movlw	0
  7651   001F16  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  7652   001F18  0E00               	movlw	0
  7653   001F1A  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  7654   001F1C  0E00               	movlw	0
  7655   001F1E  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  7656   001F20                     l4088:
  7657                           
  7658                           ; BSR set to: 0
  7659   001F20  8F62               	bsf	(___fldiv@b+2)& (0+255),7,b
  7660   001F22                     
  7661                           ; BSR set to: 0
  7662   001F22  0E00               	movlw	0
  7663   001F24  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  7664   001F26  EF9D  F00F         	goto	l4094
  7665   001F2A                     l4092:
  7666                           
  7667                           ; BSR set to: 0
  7668   001F2A  0E00               	movlw	0
  7669   001F2C  6F60               	movwf	___fldiv@b& (0+255),b
  7670   001F2E  0E00               	movlw	0
  7671   001F30  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  7672   001F32  0E00               	movlw	0
  7673   001F34  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  7674   001F36  0E00               	movlw	0
  7675   001F38  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  7676   001F3A                     l4094:
  7677                           
  7678                           ; BSR set to: 0
  7679   001F3A  5167               	movf	(___fldiv@a+3)& (0+255),w,b
  7680   001F3C  0B80               	andlw	128
  7681   001F3E  1B70               	xorwf	___fldiv@sign& (0+255),f,b
  7682   001F40                     
  7683                           ; BSR set to: 0
  7684   001F40  5167               	movf	(___fldiv@a+3)& (0+255),w,b
  7685   001F42  2567               	addwf	(___fldiv@a+3)& (0+255),w,b
  7686   001F44  6F78               	movwf	___fldiv@aexp& (0+255),b
  7687   001F46                     
  7688                           ; BSR set to: 0
  7689   001F46  AF66               	btfss	(___fldiv@a+2)& (0+255),7,b
  7690   001F48  EFA8  F00F         	goto	u4121
  7691   001F4C  EFAA  F00F         	goto	u4120
  7692   001F50                     u4121:
  7693   001F50  EFAB  F00F         	goto	l4102
  7694   001F54                     u4120:
  7695   001F54                     
  7696                           ; BSR set to: 0
  7697   001F54  8178               	bsf	___fldiv@aexp& (0+255),0,b
  7698   001F56                     l4102:
  7699                           
  7700                           ; BSR set to: 0
  7701   001F56  5178               	movf	___fldiv@aexp& (0+255),w,b
  7702   001F58  B4D8               	btfsc	status,2,c
  7703   001F5A  EFB1  F00F         	goto	u4131
  7704   001F5E  EFB3  F00F         	goto	u4130
  7705   001F62                     u4131:
  7706   001F62  EFC8  F00F         	goto	l4112
  7707   001F66                     u4130:
  7708   001F66                     
  7709                           ; BSR set to: 0
  7710   001F66  2978               	incf	___fldiv@aexp& (0+255),w,b
  7711   001F68  A4D8               	btfss	status,2,c
  7712   001F6A  EFB9  F00F         	goto	u4141
  7713   001F6E  EFBB  F00F         	goto	u4140
  7714   001F72                     u4141:
  7715   001F72  EFC3  F00F         	goto	l4108
  7716   001F76                     u4140:
  7717   001F76                     
  7718                           ; BSR set to: 0
  7719   001F76  0E00               	movlw	0
  7720   001F78  6F64               	movwf	___fldiv@a& (0+255),b
  7721   001F7A  0E00               	movlw	0
  7722   001F7C  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  7723   001F7E  0E00               	movlw	0
  7724   001F80  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  7725   001F82  0E00               	movlw	0
  7726   001F84  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  7727   001F86                     l4108:
  7728                           
  7729                           ; BSR set to: 0
  7730   001F86  8F66               	bsf	(___fldiv@a+2)& (0+255),7,b
  7731   001F88                     
  7732                           ; BSR set to: 0
  7733   001F88  0E00               	movlw	0
  7734   001F8A  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  7735   001F8C  EFD0  F00F         	goto	l4114
  7736   001F90                     l4112:
  7737                           
  7738                           ; BSR set to: 0
  7739   001F90  0E00               	movlw	0
  7740   001F92  6F64               	movwf	___fldiv@a& (0+255),b
  7741   001F94  0E00               	movlw	0
  7742   001F96  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  7743   001F98  0E00               	movlw	0
  7744   001F9A  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  7745   001F9C  0E00               	movlw	0
  7746   001F9E  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  7747   001FA0                     l4114:
  7748                           
  7749                           ; BSR set to: 0
  7750   001FA0  5164               	movf	___fldiv@a& (0+255),w,b
  7751   001FA2  1165               	iorwf	(___fldiv@a+1)& (0+255),w,b
  7752   001FA4  1166               	iorwf	(___fldiv@a+2)& (0+255),w,b
  7753   001FA6  1167               	iorwf	(___fldiv@a+3)& (0+255),w,b
  7754   001FA8  A4D8               	btfss	status,2,c
  7755   001FAA  EFD9  F00F         	goto	u4151
  7756   001FAE  EFDB  F00F         	goto	u4150
  7757   001FB2                     u4151:
  7758   001FB2  EFF3  F00F         	goto	l4126
  7759   001FB6                     u4150:
  7760   001FB6                     
  7761                           ; BSR set to: 0
  7762   001FB6  0E00               	movlw	0
  7763   001FB8  6F60               	movwf	___fldiv@b& (0+255),b
  7764   001FBA  0E00               	movlw	0
  7765   001FBC  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  7766   001FBE  0E00               	movlw	0
  7767   001FC0  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  7768   001FC2  0E00               	movlw	0
  7769   001FC4  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  7770   001FC6                     
  7771                           ; BSR set to: 0
  7772   001FC6  0E80               	movlw	128
  7773   001FC8  1362               	iorwf	(___fldiv@b+2)& (0+255),f,b
  7774   001FCA  0E7F               	movlw	127
  7775   001FCC  1363               	iorwf	(___fldiv@b+3)& (0+255),f,b
  7776   001FCE                     l4120:
  7777                           
  7778                           ; BSR set to: 0
  7779   001FCE  5170               	movf	___fldiv@sign& (0+255),w,b
  7780   001FD0  1363               	iorwf	(___fldiv@b+3)& (0+255),f,b
  7781   001FD2                     
  7782                           ; BSR set to: 0
  7783   001FD2  C060  F060         	movff	___fldiv@b,?___fldiv
  7784   001FD6  C061  F061         	movff	___fldiv@b+1,?___fldiv+1
  7785   001FDA  C062  F062         	movff	___fldiv@b+2,?___fldiv+2
  7786   001FDE  C063  F063         	movff	___fldiv@b+3,?___fldiv+3
  7787   001FE2  EF36  F011         	goto	l1170
  7788   001FE6                     l4126:
  7789                           
  7790                           ; BSR set to: 0
  7791   001FE6  5177               	movf	___fldiv@bexp& (0+255),w,b
  7792   001FE8  A4D8               	btfss	status,2,c
  7793   001FEA  EFF9  F00F         	goto	u4161
  7794   001FEE  EFFB  F00F         	goto	u4160
  7795   001FF2                     u4161:
  7796   001FF2  EF05  F010         	goto	l4134
  7797   001FF6                     u4160:
  7798   001FF6                     
  7799                           ; BSR set to: 0
  7800   001FF6  0E00               	movlw	0
  7801   001FF8  6F60               	movwf	?___fldiv& (0+255),b
  7802   001FFA  0E00               	movlw	0
  7803   001FFC  6F61               	movwf	(?___fldiv+1)& (0+255),b
  7804   001FFE  0E00               	movlw	0
  7805   002000  6F62               	movwf	(?___fldiv+2)& (0+255),b
  7806   002002  0E00               	movlw	0
  7807   002004  6F63               	movwf	(?___fldiv+3)& (0+255),b
  7808   002006  EF36  F011         	goto	l1170
  7809   00200A                     l4134:
  7810                           
  7811                           ; BSR set to: 0
  7812   00200A  5178               	movf	___fldiv@aexp& (0+255),w,b
  7813   00200C  C077  F068         	movff	___fldiv@bexp,??___fldiv
  7814   002010  6B69               	clrf	(??___fldiv+1)& (0+255),b
  7815   002012  5F68               	subwf	??___fldiv& (0+255),f,b
  7816   002014  0E00               	movlw	0
  7817   002016  5B69               	subwfb	(??___fldiv+1)& (0+255),f,b
  7818   002018  0E7F               	movlw	127
  7819   00201A  2568               	addwf	??___fldiv& (0+255),w,b
  7820   00201C  6F71               	movwf	___fldiv@new_exp& (0+255),b
  7821   00201E  0E00               	movlw	0
  7822   002020  2169               	addwfc	(??___fldiv+1)& (0+255),w,b
  7823   002022  6F72               	movwf	(___fldiv@new_exp+1)& (0+255),b
  7824   002024                     
  7825                           ; BSR set to: 0
  7826   002024  C060  F06C         	movff	___fldiv@b,___fldiv@rem
  7827   002028  C061  F06D         	movff	___fldiv@b+1,___fldiv@rem+1
  7828   00202C  C062  F06E         	movff	___fldiv@b+2,___fldiv@rem+2
  7829   002030  C063  F06F         	movff	___fldiv@b+3,___fldiv@rem+3
  7830   002034                     
  7831                           ; BSR set to: 0
  7832   002034  0E00               	movlw	0
  7833   002036  6F60               	movwf	___fldiv@b& (0+255),b
  7834   002038  0E00               	movlw	0
  7835   00203A  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  7836   00203C  0E00               	movlw	0
  7837   00203E  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  7838   002040  0E00               	movlw	0
  7839   002042  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  7840   002044                     
  7841                           ; BSR set to: 0
  7842   002044  0E00               	movlw	0
  7843   002046  6F73               	movwf	___fldiv@grs& (0+255),b
  7844   002048  0E00               	movlw	0
  7845   00204A  6F74               	movwf	(___fldiv@grs+1)& (0+255),b
  7846   00204C  0E00               	movlw	0
  7847   00204E  6F75               	movwf	(___fldiv@grs+2)& (0+255),b
  7848   002050  0E00               	movlw	0
  7849   002052  6F76               	movwf	(___fldiv@grs+3)& (0+255),b
  7850   002054                     
  7851                           ; BSR set to: 0
  7852   002054  0E00               	movlw	0
  7853   002056  6F78               	movwf	___fldiv@aexp& (0+255),b
  7854   002058  EF66  F010         	goto	l1172
  7855   00205C                     l4144:
  7856                           
  7857                           ; BSR set to: 0
  7858   00205C  5178               	movf	___fldiv@aexp& (0+255),w,b
  7859   00205E  B4D8               	btfsc	status,2,c
  7860   002060  EF34  F010         	goto	u4171
  7861   002064  EF36  F010         	goto	u4170
  7862   002068                     u4171:
  7863   002068  EF4D  F010         	goto	l4152
  7864   00206C                     u4170:
  7865   00206C                     
  7866                           ; BSR set to: 0
  7867   00206C  90D8               	bcf	status,0,c
  7868   00206E  376C               	rlcf	___fldiv@rem& (0+255),f,b
  7869   002070  376D               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  7870   002072  376E               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  7871   002074  376F               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  7872   002076  90D8               	bcf	status,0,c
  7873   002078  3760               	rlcf	___fldiv@b& (0+255),f,b
  7874   00207A  3761               	rlcf	(___fldiv@b+1)& (0+255),f,b
  7875   00207C  3762               	rlcf	(___fldiv@b+2)& (0+255),f,b
  7876   00207E  3763               	rlcf	(___fldiv@b+3)& (0+255),f,b
  7877   002080                     
  7878                           ; BSR set to: 0
  7879   002080  AF76               	btfss	(___fldiv@grs+3)& (0+255),7,b
  7880   002082  EF45  F010         	goto	u4181
  7881   002086  EF47  F010         	goto	u4180
  7882   00208A                     u4181:
  7883   00208A  EF48  F010         	goto	l1175
  7884   00208E                     u4180:
  7885   00208E                     
  7886                           ; BSR set to: 0
  7887   00208E  8160               	bsf	___fldiv@b& (0+255),0,b
  7888   002090                     l1175:
  7889                           
  7890                           ; BSR set to: 0
  7891   002090  90D8               	bcf	status,0,c
  7892   002092  3773               	rlcf	___fldiv@grs& (0+255),f,b
  7893   002094  3774               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  7894   002096  3775               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  7895   002098  3776               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  7896   00209A                     l4152:
  7897                           
  7898                           ; BSR set to: 0
  7899   00209A  5164               	movf	___fldiv@a& (0+255),w,b
  7900   00209C  5D6C               	subwf	___fldiv@rem& (0+255),w,b
  7901   00209E  5165               	movf	(___fldiv@a+1)& (0+255),w,b
  7902   0020A0  596D               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  7903   0020A2  5166               	movf	(___fldiv@a+2)& (0+255),w,b
  7904   0020A4  596E               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  7905   0020A6  5167               	movf	(___fldiv@a+3)& (0+255),w,b
  7906   0020A8  596F               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  7907   0020AA  A0D8               	btfss	status,0,c
  7908   0020AC  EF5A  F010         	goto	u4191
  7909   0020B0  EF5C  F010         	goto	u4190
  7910   0020B4                     u4191:
  7911   0020B4  EF65  F010         	goto	l4158
  7912   0020B8                     u4190:
  7913   0020B8                     
  7914                           ; BSR set to: 0
  7915   0020B8  8D76               	bsf	(___fldiv@grs+3)& (0+255),6,b
  7916   0020BA                     
  7917                           ; BSR set to: 0
  7918   0020BA  5164               	movf	___fldiv@a& (0+255),w,b
  7919   0020BC  5F6C               	subwf	___fldiv@rem& (0+255),f,b
  7920   0020BE  5165               	movf	(___fldiv@a+1)& (0+255),w,b
  7921   0020C0  5B6D               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  7922   0020C2  5166               	movf	(___fldiv@a+2)& (0+255),w,b
  7923   0020C4  5B6E               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  7924   0020C6  5167               	movf	(___fldiv@a+3)& (0+255),w,b
  7925   0020C8  5B6F               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  7926   0020CA                     l4158:
  7927                           
  7928                           ; BSR set to: 0
  7929   0020CA  2B78               	incf	___fldiv@aexp& (0+255),f,b
  7930   0020CC                     l1172:
  7931                           
  7932                           ; BSR set to: 0
  7933   0020CC  0E19               	movlw	25
  7934   0020CE  6578               	cpfsgt	___fldiv@aexp& (0+255),b
  7935   0020D0  EF6C  F010         	goto	u4201
  7936   0020D4  EF6E  F010         	goto	u4200
  7937   0020D8                     u4201:
  7938   0020D8  EF2E  F010         	goto	l4144
  7939   0020DC                     u4200:
  7940   0020DC                     
  7941                           ; BSR set to: 0
  7942   0020DC  516C               	movf	___fldiv@rem& (0+255),w,b
  7943   0020DE  116D               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  7944   0020E0  116E               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  7945   0020E2  116F               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  7946   0020E4  B4D8               	btfsc	status,2,c
  7947   0020E6  EF77  F010         	goto	u4211
  7948   0020EA  EF79  F010         	goto	u4210
  7949   0020EE                     u4211:
  7950   0020EE  EF91  F010         	goto	l4170
  7951   0020F2                     u4210:
  7952   0020F2                     
  7953                           ; BSR set to: 0
  7954   0020F2  8173               	bsf	___fldiv@grs& (0+255),0,b
  7955   0020F4  EF91  F010         	goto	l4170
  7956   0020F8                     l4164:
  7957                           
  7958                           ; BSR set to: 0
  7959   0020F8  90D8               	bcf	status,0,c
  7960   0020FA  3760               	rlcf	___fldiv@b& (0+255),f,b
  7961   0020FC  3761               	rlcf	(___fldiv@b+1)& (0+255),f,b
  7962   0020FE  3762               	rlcf	(___fldiv@b+2)& (0+255),f,b
  7963   002100  3763               	rlcf	(___fldiv@b+3)& (0+255),f,b
  7964   002102                     
  7965                           ; BSR set to: 0
  7966   002102  AF76               	btfss	(___fldiv@grs+3)& (0+255),7,b
  7967   002104  EF86  F010         	goto	u4221
  7968   002108  EF88  F010         	goto	u4220
  7969   00210C                     u4221:
  7970   00210C  EF89  F010         	goto	l1181
  7971   002110                     u4220:
  7972   002110                     
  7973                           ; BSR set to: 0
  7974   002110  8160               	bsf	___fldiv@b& (0+255),0,b
  7975   002112                     l1181:
  7976                           
  7977                           ; BSR set to: 0
  7978   002112  90D8               	bcf	status,0,c
  7979   002114  3773               	rlcf	___fldiv@grs& (0+255),f,b
  7980   002116  3774               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  7981   002118  3775               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  7982   00211A  3776               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  7983   00211C  0771               	decf	___fldiv@new_exp& (0+255),f,b
  7984   00211E  A0D8               	btfss	status,0,c
  7985   002120  0772               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  7986   002122                     l4170:
  7987                           
  7988                           ; BSR set to: 0
  7989   002122  AF62               	btfss	(___fldiv@b+2)& (0+255),7,b
  7990   002124  EF96  F010         	goto	u4231
  7991   002128  EF98  F010         	goto	u4230
  7992   00212C                     u4231:
  7993   00212C  EF7C  F010         	goto	l4164
  7994   002130                     u4230:
  7995   002130                     
  7996                           ; BSR set to: 0
  7997   002130  0E00               	movlw	0
  7998   002132  6F78               	movwf	___fldiv@aexp& (0+255),b
  7999   002134                     
  8000                           ; BSR set to: 0
  8001   002134  AF76               	btfss	(___fldiv@grs+3)& (0+255),7,b
  8002   002136  EF9F  F010         	goto	u4241
  8003   00213A  EFA1  F010         	goto	u4240
  8004   00213E                     u4241:
  8005   00213E  EFC5  F010         	goto	l1183
  8006   002142                     u4240:
  8007   002142                     
  8008                           ; BSR set to: 0
  8009   002142  0EFF               	movlw	255
  8010   002144  1573               	andwf	___fldiv@grs& (0+255),w,b
  8011   002146  6F68               	movwf	??___fldiv& (0+255),b
  8012   002148  0EFF               	movlw	255
  8013   00214A  1574               	andwf	(___fldiv@grs+1)& (0+255),w,b
  8014   00214C  6F69               	movwf	(??___fldiv+1)& (0+255),b
  8015   00214E  0EFF               	movlw	255
  8016   002150  1575               	andwf	(___fldiv@grs+2)& (0+255),w,b
  8017   002152  6F6A               	movwf	(??___fldiv+2)& (0+255),b
  8018   002154  0E7F               	movlw	127
  8019   002156  1576               	andwf	(___fldiv@grs+3)& (0+255),w,b
  8020   002158  6F6B               	movwf	(??___fldiv+3)& (0+255),b
  8021   00215A  5168               	movf	??___fldiv& (0+255),w,b
  8022   00215C  1169               	iorwf	(??___fldiv+1)& (0+255),w,b
  8023   00215E  116A               	iorwf	(??___fldiv+2)& (0+255),w,b
  8024   002160  116B               	iorwf	(??___fldiv+3)& (0+255),w,b
  8025   002162  B4D8               	btfsc	status,2,c
  8026   002164  EFB6  F010         	goto	u4251
  8027   002168  EFB8  F010         	goto	u4250
  8028   00216C                     u4251:
  8029   00216C  EFBC  F010         	goto	l1184
  8030   002170                     u4250:
  8031   002170                     l4178:
  8032                           
  8033                           ; BSR set to: 0
  8034   002170  0E01               	movlw	1
  8035   002172  6F78               	movwf	___fldiv@aexp& (0+255),b
  8036   002174  EFC5  F010         	goto	l1183
  8037   002178                     l1184:
  8038                           
  8039                           ; BSR set to: 0
  8040   002178  A160               	btfss	___fldiv@b& (0+255),0,b
  8041   00217A  EFC1  F010         	goto	u4261
  8042   00217E  EFC3  F010         	goto	u4260
  8043   002182                     u4261:
  8044   002182  EFC5  F010         	goto	l1183
  8045   002186                     u4260:
  8046   002186  EFB8  F010         	goto	l4178
  8047   00218A                     l1183:
  8048                           
  8049                           ; BSR set to: 0
  8050   00218A  5178               	movf	___fldiv@aexp& (0+255),w,b
  8051   00218C  B4D8               	btfsc	status,2,c
  8052   00218E  EFCB  F010         	goto	u4271
  8053   002192  EFCD  F010         	goto	u4270
  8054   002196                     u4271:
  8055   002196  EFF1  F010         	goto	l4190
  8056   00219A                     u4270:
  8057   00219A                     
  8058                           ; BSR set to: 0
  8059   00219A  0E01               	movlw	1
  8060   00219C  2760               	addwf	___fldiv@b& (0+255),f,b
  8061   00219E  0E00               	movlw	0
  8062   0021A0  2361               	addwfc	(___fldiv@b+1)& (0+255),f,b
  8063   0021A2  2362               	addwfc	(___fldiv@b+2)& (0+255),f,b
  8064   0021A4  2363               	addwfc	(___fldiv@b+3)& (0+255),f,b
  8065   0021A6                     
  8066                           ; BSR set to: 0
  8067   0021A6  A163               	btfss	(___fldiv@b+3)& (0+255),0,b
  8068   0021A8  EFD8  F010         	goto	u4281
  8069   0021AC  EFDA  F010         	goto	u4280
  8070   0021B0                     u4281:
  8071   0021B0  EFF1  F010         	goto	l4190
  8072   0021B4                     u4280:
  8073   0021B4                     
  8074                           ; BSR set to: 0
  8075   0021B4  C060  F068         	movff	___fldiv@b,??___fldiv
  8076   0021B8  C061  F069         	movff	___fldiv@b+1,??___fldiv+1
  8077   0021BC  C062  F06A         	movff	___fldiv@b+2,??___fldiv+2
  8078   0021C0  C063  F06B         	movff	___fldiv@b+3,??___fldiv+3
  8079   0021C4  356B               	rlcf	(??___fldiv+3)& (0+255),w,b
  8080   0021C6  336B               	rrcf	(??___fldiv+3)& (0+255),f,b
  8081   0021C8  336A               	rrcf	(??___fldiv+2)& (0+255),f,b
  8082   0021CA  3369               	rrcf	(??___fldiv+1)& (0+255),f,b
  8083   0021CC  3368               	rrcf	??___fldiv& (0+255),f,b
  8084   0021CE  C068  F060         	movff	??___fldiv,___fldiv@b
  8085   0021D2  C069  F061         	movff	??___fldiv+1,___fldiv@b+1
  8086   0021D6  C06A  F062         	movff	??___fldiv+2,___fldiv@b+2
  8087   0021DA  C06B  F063         	movff	??___fldiv+3,___fldiv@b+3
  8088   0021DE                     
  8089                           ; BSR set to: 0
  8090   0021DE  4B71               	infsnz	___fldiv@new_exp& (0+255),f,b
  8091   0021E0  2B72               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  8092   0021E2                     l4190:
  8093                           
  8094                           ; BSR set to: 0
  8095   0021E2  BF72               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  8096   0021E4  EFFC  F010         	goto	u4291
  8097   0021E8  5172               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  8098   0021EA  E108               	bnz	u4290
  8099   0021EC  2971               	incf	___fldiv@new_exp& (0+255),w,b
  8100   0021EE  A0D8               	btfss	status,0,c
  8101   0021F0  EFFC  F010         	goto	u4291
  8102   0021F4  EFFE  F010         	goto	u4290
  8103   0021F8                     u4291:
  8104   0021F8  EF09  F011         	goto	l4194
  8105   0021FC                     u4290:
  8106   0021FC                     
  8107                           ; BSR set to: 0
  8108   0021FC  0E00               	movlw	0
  8109   0021FE  6F72               	movwf	(___fldiv@new_exp+1)& (0+255),b
  8110   002200  6971               	setf	___fldiv@new_exp& (0+255),b
  8111   002202  0E00               	movlw	0
  8112   002204  6F60               	movwf	___fldiv@b& (0+255),b
  8113   002206  0E00               	movlw	0
  8114   002208  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  8115   00220A  0E00               	movlw	0
  8116   00220C  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  8117   00220E  0E00               	movlw	0
  8118   002210  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  8119   002212                     l4194:
  8120                           
  8121                           ; BSR set to: 0
  8122   002212  BF72               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  8123   002214  EF16  F011         	goto	u4300
  8124   002218  5172               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  8125   00221A  E106               	bnz	u4301
  8126   00221C  0571               	decf	___fldiv@new_exp& (0+255),w,b
  8127   00221E  B0D8               	btfsc	status,0,c
  8128   002220  EF14  F011         	goto	u4301
  8129   002224  EF16  F011         	goto	u4300
  8130   002228                     u4301:
  8131   002228  EF24  F011         	goto	l4198
  8132   00222C                     u4300:
  8133   00222C                     
  8134                           ; BSR set to: 0
  8135   00222C  0E00               	movlw	0
  8136   00222E  6F72               	movwf	(___fldiv@new_exp+1)& (0+255),b
  8137   002230  0E00               	movlw	0
  8138   002232  6F71               	movwf	___fldiv@new_exp& (0+255),b
  8139   002234  0E00               	movlw	0
  8140   002236  6F60               	movwf	___fldiv@b& (0+255),b
  8141   002238  0E00               	movlw	0
  8142   00223A  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  8143   00223C  0E00               	movlw	0
  8144   00223E  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  8145   002240  0E00               	movlw	0
  8146   002242  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  8147   002244  0E00               	movlw	0
  8148   002246  6F70               	movwf	___fldiv@sign& (0+255),b
  8149   002248                     l4198:
  8150                           
  8151                           ; BSR set to: 0
  8152   002248  C071  F077         	movff	___fldiv@new_exp,___fldiv@bexp
  8153   00224C                     
  8154                           ; BSR set to: 0
  8155   00224C  A177               	btfss	___fldiv@bexp& (0+255),0,b
  8156   00224E  EF2B  F011         	goto	u4311
  8157   002252  EF2D  F011         	goto	u4310
  8158   002256                     u4311:
  8159   002256  EF30  F011         	goto	l4204
  8160   00225A                     u4310:
  8161   00225A                     
  8162                           ; BSR set to: 0
  8163   00225A  8F62               	bsf	(___fldiv@b+2)& (0+255),7,b
  8164   00225C  EF31  F011         	goto	l4206
  8165   002260                     l4204:
  8166                           
  8167                           ; BSR set to: 0
  8168   002260  9F62               	bcf	(___fldiv@b+2)& (0+255),7,b
  8169   002262                     l4206:
  8170                           
  8171                           ; BSR set to: 0
  8172   002262  90D8               	bcf	status,0,c
  8173   002264  3177               	rrcf	___fldiv@bexp& (0+255),w,b
  8174   002266  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  8175   002268  EFE7  F00F         	goto	l4120
  8176   00226C                     l1170:
  8177                           
  8178                           ; BSR set to: 0
  8179   00226C  0012               	return		;funcret
  8180   00226E                     __end_of___fldiv:
  8181                           	callstack 0
  8182                           
  8183 ;; *************** function _ftoa *****************
  8184 ;; Defined at:
  8185 ;;		line 87 in file "BeeBot_Globals.c"
  8186 ;; Parameters:    Size  Location     Type
  8187 ;;  num             4  107[BANK0 ] float 
  8188 ;;  str             2  111[BANK0 ] PTR unsigned char 
  8189 ;;		 -> parse_usb_message@temp_string(10), 
  8190 ;;  decimalPlace    2  113[BANK0 ] int 
  8191 ;; Auto vars:     Size  Location     Type
  8192 ;;  digit           2  119[BANK0 ] int 
  8193 ;;  i               2  121[BANK0 ] int 
  8194 ;;  decimalPart     4  123[BANK0 ] float 
  8195 ;;  wholePart       2  117[BANK0 ] int 
  8196 ;; Return value:  Size  Location     Type
  8197 ;;                  1    wreg      void 
  8198 ;; Registers used:
  8199 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8200 ;; Tracked objects:
  8201 ;;		On entry : 0/0
  8202 ;;		On exit  : 0/0
  8203 ;;		Unchanged: 0/0
  8204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8205 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8206 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8207 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8208 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8209 ;;Total ram usage:       20 bytes
  8210 ;; Hardware stack levels used: 1
  8211 ;; Hardware stack levels required when called: 11
  8212 ;; This function calls:
  8213 ;;		___flmul
  8214 ;;		___flsub
  8215 ;;		___fltol
  8216 ;;		___xxtofl
  8217 ;;		_sprintf
  8218 ;;		_strlen
  8219 ;; This function is called by:
  8220 ;;		_parse_usb_message
  8221 ;; This function uses a non-reentrant model
  8222 ;;
  8223                           
  8224                           	psect	text29
  8225   002A22                     __ptext29:
  8226                           	callstack 0
  8227   002A22                     _ftoa:
  8228                           	callstack 18
  8229   002A22                     
  8230                           ;BeeBot_Globals.c: 87: void ftoa(float num, char *str, int decimalPlaces);BeeBot_Globals
      +                          .c: 88: {;BeeBot_Globals.c: 89:     int wholePart = (int)num;
  8231   002A22  C0CB  F060         	movff	ftoa@num,___fltol@f1
  8232   002A26  C0CC  F061         	movff	ftoa@num+1,___fltol@f1+1
  8233   002A2A  C0CD  F062         	movff	ftoa@num+2,___fltol@f1+2
  8234   002A2E  C0CE  F063         	movff	ftoa@num+3,___fltol@f1+3
  8235   002A32  EC02  F018         	call	___fltol	;wreg free
  8236   002A36  C060  F0D5         	movff	?___fltol,ftoa@wholePart
  8237   002A3A  C061  F0D6         	movff	?___fltol+1,ftoa@wholePart+1
  8238                           
  8239                           ;BeeBot_Globals.c: 90:     float decimalPart = num - wholePart;
  8240   002A3E  C0CB  F070         	movff	ftoa@num,___flsub@b
  8241   002A42  C0CC  F071         	movff	ftoa@num+1,___flsub@b+1
  8242   002A46  C0CD  F072         	movff	ftoa@num+2,___flsub@b+2
  8243   002A4A  C0CE  F073         	movff	ftoa@num+3,___flsub@b+3
  8244   002A4E  C0D5  F060         	movff	ftoa@wholePart,___xxtofl@val
  8245   002A52  C0D6  F061         	movff	ftoa@wholePart+1,___xxtofl@val+1
  8246   002A56  0100               	movlb	0	; () banked
  8247   002A58  0E00               	movlw	0
  8248   002A5A  BF61               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  8249   002A5C  0EFF               	movlw	-1
  8250   002A5E  6F62               	movwf	(___xxtofl@val+2)& (0+255),b
  8251   002A60  6F63               	movwf	(___xxtofl@val+3)& (0+255),b
  8252   002A62  0E01               	movlw	1
  8253   002A64  EC5C  F013         	call	___xxtofl
  8254   002A68  C060  F074         	movff	?___xxtofl,___flsub@a
  8255   002A6C  C061  F075         	movff	?___xxtofl+1,___flsub@a+1
  8256   002A70  C062  F076         	movff	?___xxtofl+2,___flsub@a+2
  8257   002A74  C063  F077         	movff	?___xxtofl+3,___flsub@a+3
  8258   002A78  EC2D  F01F         	call	___flsub	;wreg free
  8259   002A7C  C070  F0DB         	movff	?___flsub,ftoa@decimalPart
  8260   002A80  C071  F0DC         	movff	?___flsub+1,ftoa@decimalPart+1
  8261   002A84  C072  F0DD         	movff	?___flsub+2,ftoa@decimalPart+2
  8262   002A88  C073  F0DE         	movff	?___flsub+3,ftoa@decimalPart+3
  8263   002A8C                     
  8264                           ;BeeBot_Globals.c: 93:     sprintf(str, "%d.", wholePart);
  8265   002A8C  C0CF  F0B8         	movff	ftoa@str,sprintf@s
  8266   002A90  C0D0  F0B9         	movff	ftoa@str+1,sprintf@s+1
  8267   002A94  0EDA               	movlw	low STR_40
  8268   002A96  0100               	movlb	0	; () banked
  8269   002A98  6FBA               	movwf	sprintf@fmt& (0+255),b
  8270   002A9A  0EFF               	movlw	high STR_40
  8271   002A9C  6FBB               	movwf	(sprintf@fmt+1)& (0+255),b
  8272   002A9E  C0D5  F0BC         	movff	ftoa@wholePart,?_sprintf+4
  8273   002AA2  C0D6  F0BD         	movff	ftoa@wholePart+1,?_sprintf+5
  8274   002AA6  EC6B  F01E         	call	_sprintf	;wreg free
  8275   002AAA                     
  8276                           ;BeeBot_Globals.c: 96:     for (int i = 0; i < decimalPlaces; i++) {
  8277   002AAA  0E00               	movlw	0
  8278   002AAC  0100               	movlb	0	; () banked
  8279   002AAE  6FDA               	movwf	(ftoa@i+1)& (0+255),b
  8280   002AB0  0E00               	movlw	0
  8281   002AB2  6FD9               	movwf	ftoa@i& (0+255),b
  8282   002AB4  EFC3  F015         	goto	l5392
  8283   002AB8                     l5382:
  8284                           
  8285                           ; BSR set to: 0
  8286                           ;BeeBot_Globals.c: 97:         decimalPart *= 10;
  8287   002AB8  C0DB  F060         	movff	ftoa@decimalPart,___flmul@b
  8288   002ABC  C0DC  F061         	movff	ftoa@decimalPart+1,___flmul@b+1
  8289   002AC0  C0DD  F062         	movff	ftoa@decimalPart+2,___flmul@b+2
  8290   002AC4  C0DE  F063         	movff	ftoa@decimalPart+3,___flmul@b+3
  8291   002AC8  0E00               	movlw	0
  8292   002ACA  6F64               	movwf	___flmul@a& (0+255),b
  8293   002ACC  0E00               	movlw	0
  8294   002ACE  6F65               	movwf	(___flmul@a+1)& (0+255),b
  8295   002AD0  0E20               	movlw	32
  8296   002AD2  6F66               	movwf	(___flmul@a+2)& (0+255),b
  8297   002AD4  0E41               	movlw	65
  8298   002AD6  6F67               	movwf	(___flmul@a+3)& (0+255),b
  8299   002AD8  EC53  F00D         	call	___flmul	;wreg free
  8300   002ADC  C060  F0DB         	movff	?___flmul,ftoa@decimalPart
  8301   002AE0  C061  F0DC         	movff	?___flmul+1,ftoa@decimalPart+1
  8302   002AE4  C062  F0DD         	movff	?___flmul+2,ftoa@decimalPart+2
  8303   002AE8  C063  F0DE         	movff	?___flmul+3,ftoa@decimalPart+3
  8304   002AEC                     
  8305                           ;BeeBot_Globals.c: 98:         int digit = (int)decimalPart;
  8306   002AEC  C0DB  F060         	movff	ftoa@decimalPart,___fltol@f1
  8307   002AF0  C0DC  F061         	movff	ftoa@decimalPart+1,___fltol@f1+1
  8308   002AF4  C0DD  F062         	movff	ftoa@decimalPart+2,___fltol@f1+2
  8309   002AF8  C0DE  F063         	movff	ftoa@decimalPart+3,___fltol@f1+3
  8310   002AFC  EC02  F018         	call	___fltol	;wreg free
  8311   002B00  C060  F0D7         	movff	?___fltol,ftoa@digit
  8312   002B04  C061  F0D8         	movff	?___fltol+1,ftoa@digit+1
  8313   002B08                     
  8314                           ;BeeBot_Globals.c: 99:         str[i + strlen(str)] = '0' + (char) digit;
  8315   002B08  C0CF  F060         	movff	ftoa@str,strlen@s
  8316   002B0C  C0D0  F061         	movff	ftoa@str+1,strlen@s+1
  8317   002B10  EC41  F01E         	call	_strlen	;wreg free
  8318   002B14  0100               	movlb	0	; () banked
  8319   002B16  5160               	movf	?_strlen& (0+255),w,b
  8320   002B18  25CF               	addwf	ftoa@str& (0+255),w,b
  8321   002B1A  6FD3               	movwf	??_ftoa& (0+255),b
  8322   002B1C  5161               	movf	(?_strlen+1)& (0+255),w,b
  8323   002B1E  21D0               	addwfc	(ftoa@str+1)& (0+255),w,b
  8324   002B20  6FD4               	movwf	(??_ftoa+1)& (0+255),b
  8325   002B22  51D9               	movf	ftoa@i& (0+255),w,b
  8326   002B24  25D3               	addwf	??_ftoa& (0+255),w,b
  8327   002B26  6ED9               	movwf	fsr2l,c
  8328   002B28  51DA               	movf	(ftoa@i+1)& (0+255),w,b
  8329   002B2A  21D4               	addwfc	(??_ftoa+1)& (0+255),w,b
  8330   002B2C  6EDA               	movwf	fsr2h,c
  8331   002B2E  51D7               	movf	ftoa@digit& (0+255),w,b
  8332   002B30  0F30               	addlw	48
  8333   002B32  6EDF               	movwf	indf2,c
  8334   002B34                     
  8335                           ; BSR set to: 0
  8336                           ;BeeBot_Globals.c: 100:         decimalPart -= digit;
  8337   002B34  C0DB  F070         	movff	ftoa@decimalPart,___flsub@b
  8338   002B38  C0DC  F071         	movff	ftoa@decimalPart+1,___flsub@b+1
  8339   002B3C  C0DD  F072         	movff	ftoa@decimalPart+2,___flsub@b+2
  8340   002B40  C0DE  F073         	movff	ftoa@decimalPart+3,___flsub@b+3
  8341   002B44  C0D7  F060         	movff	ftoa@digit,___xxtofl@val
  8342   002B48  C0D8  F061         	movff	ftoa@digit+1,___xxtofl@val+1
  8343   002B4C  0E00               	movlw	0
  8344   002B4E  BF61               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  8345   002B50  0EFF               	movlw	-1
  8346   002B52  6F62               	movwf	(___xxtofl@val+2)& (0+255),b
  8347   002B54  6F63               	movwf	(___xxtofl@val+3)& (0+255),b
  8348   002B56  0E01               	movlw	1
  8349   002B58  EC5C  F013         	call	___xxtofl
  8350   002B5C  C060  F074         	movff	?___xxtofl,___flsub@a
  8351   002B60  C061  F075         	movff	?___xxtofl+1,___flsub@a+1
  8352   002B64  C062  F076         	movff	?___xxtofl+2,___flsub@a+2
  8353   002B68  C063  F077         	movff	?___xxtofl+3,___flsub@a+3
  8354   002B6C  EC2D  F01F         	call	___flsub	;wreg free
  8355   002B70  C070  F0DB         	movff	?___flsub,ftoa@decimalPart
  8356   002B74  C071  F0DC         	movff	?___flsub+1,ftoa@decimalPart+1
  8357   002B78  C072  F0DD         	movff	?___flsub+2,ftoa@decimalPart+2
  8358   002B7C  C073  F0DE         	movff	?___flsub+3,ftoa@decimalPart+3
  8359   002B80                     
  8360                           ;BeeBot_Globals.c: 101:     }
  8361   002B80  0100               	movlb	0	; () banked
  8362   002B82  4BD9               	infsnz	ftoa@i& (0+255),f,b
  8363   002B84  2BDA               	incf	(ftoa@i+1)& (0+255),f,b
  8364   002B86                     l5392:
  8365                           
  8366                           ; BSR set to: 0
  8367   002B86  51D1               	movf	ftoa@decimalPlaces& (0+255),w,b
  8368   002B88  5DD9               	subwf	ftoa@i& (0+255),w,b
  8369   002B8A  51DA               	movf	(ftoa@i+1)& (0+255),w,b
  8370   002B8C  0A80               	xorlw	128
  8371   002B8E  6FD3               	movwf	??_ftoa& (0+255),b
  8372   002B90  51D2               	movf	(ftoa@decimalPlaces+1)& (0+255),w,b
  8373   002B92  0A80               	xorlw	128
  8374   002B94  59D3               	subwfb	??_ftoa& (0+255),w,b
  8375   002B96  A0D8               	btfss	status,0,c
  8376   002B98  EFD0  F015         	goto	u6411
  8377   002B9C  EFD2  F015         	goto	u6410
  8378   002BA0                     u6411:
  8379   002BA0  EF5C  F015         	goto	l5382
  8380   002BA4                     u6410:
  8381   002BA4                     
  8382                           ; BSR set to: 0
  8383                           ;BeeBot_Globals.c: 102:     str[strlen(str)] = '\0';
  8384   002BA4  C0CF  F060         	movff	ftoa@str,strlen@s
  8385   002BA8  C0D0  F061         	movff	ftoa@str+1,strlen@s+1
  8386   002BAC  EC41  F01E         	call	_strlen	;wreg free
  8387   002BB0  0100               	movlb	0	; () banked
  8388   002BB2  5160               	movf	?_strlen& (0+255),w,b
  8389   002BB4  25CF               	addwf	ftoa@str& (0+255),w,b
  8390   002BB6  6ED9               	movwf	fsr2l,c
  8391   002BB8  5161               	movf	(?_strlen+1)& (0+255),w,b
  8392   002BBA  21D0               	addwfc	(ftoa@str+1)& (0+255),w,b
  8393   002BBC  6EDA               	movwf	fsr2h,c
  8394   002BBE  0E00               	movlw	0
  8395   002BC0  6EDF               	movwf	indf2,c
  8396   002BC2                     
  8397                           ; BSR set to: 0
  8398   002BC2  0012               	return		;funcret
  8399   002BC4                     __end_of_ftoa:
  8400                           	callstack 0
  8401                           
  8402 ;; *************** function _strlen *****************
  8403 ;; Defined at:
  8404 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strlen.c"
  8405 ;; Parameters:    Size  Location     Type
  8406 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  8407 ;;		 -> parse_usb_message@temp_string(10), parse_usb_message@response(100), MRF_param2(10), MRF_param1(10), 
  8408 ;;		 -> STR_22(8), STR_18(9), STR_17(7), STR_16(7), 
  8409 ;;		 -> STR_15(7), parse_MRF_message@response(9), parse_MRF_message@temp_string(9), usb_message(100), 
  8410 ;;		 -> STR_3(3), MRF_message(40), 
  8411 ;; Auto vars:     Size  Location     Type
  8412 ;;  a               2    2[BANK0 ] PTR const unsigned char 
  8413 ;;		 -> parse_usb_message@temp_string(10), parse_usb_message@response(100), MRF_param2(10), MRF_param1(10), 
  8414 ;;		 -> STR_22(8), STR_18(9), STR_17(7), STR_16(7), 
  8415 ;;		 -> STR_15(7), parse_MRF_message@response(9), parse_MRF_message@temp_string(9), usb_message(100), 
  8416 ;;		 -> STR_3(3), MRF_message(40), 
  8417 ;; Return value:  Size  Location     Type
  8418 ;;                  2    0[BANK0 ] unsigned int 
  8419 ;; Registers used:
  8420 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  8421 ;; Tracked objects:
  8422 ;;		On entry : 0/0
  8423 ;;		On exit  : 0/0
  8424 ;;		Unchanged: 0/0
  8425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8426 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8427 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8429 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8430 ;;Total ram usage:        4 bytes
  8431 ;; Hardware stack levels used: 1
  8432 ;; Hardware stack levels required when called: 3
  8433 ;; This function calls:
  8434 ;;		Nothing
  8435 ;; This function is called by:
  8436 ;;		_transmit_string_MRF89XAM
  8437 ;;		_reverse_string
  8438 ;;		_ftoa
  8439 ;;		_transmit_string_usb
  8440 ;;		_strcat
  8441 ;;		_MRF_parse_message
  8442 ;; This function uses a non-reentrant model
  8443 ;;
  8444                           
  8445                           	psect	text30
  8446   003C82                     __ptext30:
  8447                           	callstack 0
  8448   003C82                     _strlen:
  8449                           	callstack 26
  8450   003C82  C060  F062         	movff	strlen@s,strlen@a
  8451   003C86  C061  F063         	movff	strlen@s+1,strlen@a+1
  8452   003C8A  EF4A  F01E         	goto	l4516
  8453   003C8E                     l4514:
  8454   003C8E  0100               	movlb	0	; () banked
  8455   003C90  4B60               	infsnz	strlen@s& (0+255),f,b
  8456   003C92  2B61               	incf	(strlen@s+1)& (0+255),f,b
  8457   003C94                     l4516:
  8458   003C94  C060  FFF6         	movff	strlen@s,tblptrl
  8459   003C98  C061  FFF7         	movff	strlen@s+1,tblptrh
  8460   003C9C  0E00               	movlw	low (__mediumconst shr (0+16))
  8461   003C9E  6EF8               	movwf	tblptru,c
  8462   003CA0  0E0F               	movlw	(high __ramtop+-1)
  8463   003CA2  64F7               	cpfsgt	tblptrh,c
  8464   003CA4  D003               	bra	u4787
  8465   003CA6  0008               	tblrd		*
  8466   003CA8  50F5               	movf	tablat,w,c
  8467   003CAA  D005               	bra	u4780
  8468   003CAC                     u4787:
  8469   003CAC  CFF6 FFE9          	movff	tblptrl,fsr0l
  8470   003CB0  CFF7 FFEA          	movff	tblptrh,fsr0h
  8471   003CB4  50EF               	movf	indf0,w,c
  8472   003CB6                     u4780:
  8473   003CB6  0900               	iorlw	0
  8474   003CB8  A4D8               	btfss	status,2,c
  8475   003CBA  EF61  F01E         	goto	u4791
  8476   003CBE  EF63  F01E         	goto	u4790
  8477   003CC2                     u4791:
  8478   003CC2  EF47  F01E         	goto	l4514
  8479   003CC6                     u4790:
  8480   003CC6  0100               	movlb	0	; () banked
  8481   003CC8  5162               	movf	strlen@a& (0+255),w,b
  8482   003CCA  5D60               	subwf	strlen@s& (0+255),w,b
  8483   003CCC  6F60               	movwf	?_strlen& (0+255),b
  8484   003CCE  5163               	movf	(strlen@a+1)& (0+255),w,b
  8485   003CD0  5961               	subwfb	(strlen@s+1)& (0+255),w,b
  8486   003CD2  6F61               	movwf	(?_strlen+1)& (0+255),b
  8487   003CD4                     
  8488                           ; BSR set to: 0
  8489   003CD4  0012               	return		;funcret
  8490   003CD6                     __end_of_strlen:
  8491                           	callstack 0
  8492                           
  8493 ;; *************** function _sprintf *****************
  8494 ;; Defined at:
  8495 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  8496 ;; Parameters:    Size  Location     Type
  8497 ;;  s               2   88[BANK0 ] PTR unsigned char 
  8498 ;;		 -> parse_usb_message@temp_string(10), 
  8499 ;;  fmt             2   90[BANK0 ] PTR const unsigned char 
  8500 ;;		 -> STR_40(4), 
  8501 ;; Auto vars:     Size  Location     Type
  8502 ;;  f              11   96[BANK0 ] struct _IO_FILE
  8503 ;;  ap              2   94[BANK0 ] PTR void [1]
  8504 ;;		 -> ?_sprintf(2), 
  8505 ;;  ret             2    0        int 
  8506 ;; Return value:  Size  Location     Type
  8507 ;;                  2   88[BANK0 ] int 
  8508 ;; Registers used:
  8509 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8510 ;; Tracked objects:
  8511 ;;		On entry : 0/0
  8512 ;;		On exit  : 0/0
  8513 ;;		Unchanged: 0/0
  8514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8515 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8516 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8518 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8519 ;;Total ram usage:       19 bytes
  8520 ;; Hardware stack levels used: 1
  8521 ;; Hardware stack levels required when called: 10
  8522 ;; This function calls:
  8523 ;;		_vfprintf
  8524 ;; This function is called by:
  8525 ;;		_ftoa
  8526 ;; This function uses a non-reentrant model
  8527 ;;
  8528                           
  8529                           	psect	text31
  8530   003CD6                     __ptext31:
  8531                           	callstack 0
  8532   003CD6                     _sprintf:
  8533                           	callstack 18
  8534   003CD6  0EBC               	movlw	low (?_sprintf+4)
  8535   003CD8  0100               	movlb	0	; () banked
  8536   003CDA  6FBE               	movwf	sprintf@ap& (0+255),b
  8537   003CDC  0E00               	movlw	high (?_sprintf+4)
  8538   003CDE  6FBF               	movwf	(sprintf@ap+1)& (0+255),b
  8539   003CE0  C0B8  F0C0         	movff	sprintf@s,sprintf@f
  8540   003CE4  C0B9  F0C1         	movff	sprintf@s+1,sprintf@f+1
  8541   003CE8                     
  8542                           ; BSR set to: 0
  8543   003CE8  0E00               	movlw	0
  8544   003CEA  6FC4               	movwf	(sprintf@f+4)& (0+255),b
  8545   003CEC  0E00               	movlw	0
  8546   003CEE  6FC3               	movwf	(sprintf@f+3)& (0+255),b
  8547   003CF0                     
  8548                           ; BSR set to: 0
  8549   003CF0  0E00               	movlw	0
  8550   003CF2  6FCA               	movwf	(sprintf@f+10)& (0+255),b
  8551   003CF4  0E00               	movlw	0
  8552   003CF6  6FC9               	movwf	(sprintf@f+9)& (0+255),b
  8553   003CF8                     
  8554                           ; BSR set to: 0
  8555   003CF8  0EC0               	movlw	low sprintf@f
  8556   003CFA  6FB0               	movwf	vfprintf@fp& (0+255),b
  8557   003CFC  0E00               	movlw	high sprintf@f
  8558   003CFE  6FB1               	movwf	(vfprintf@fp+1)& (0+255),b
  8559   003D00  C0BA  F0B2         	movff	sprintf@fmt,vfprintf@fmt
  8560   003D04  C0BB  F0B3         	movff	sprintf@fmt+1,vfprintf@fmt+1
  8561   003D08  0EBE               	movlw	low sprintf@ap
  8562   003D0A  6FB4               	movwf	vfprintf@ap& (0+255),b
  8563   003D0C  0E00               	movlw	high sprintf@ap
  8564   003D0E  6FB5               	movwf	(vfprintf@ap+1)& (0+255),b
  8565   003D10  EC94  F01E         	call	_vfprintf	;wreg free
  8566   003D14  0100               	movlb	0	; () banked
  8567   003D16  51C3               	movf	(sprintf@f+3)& (0+255),w,b
  8568   003D18  25B8               	addwf	sprintf@s& (0+255),w,b
  8569   003D1A  6ED9               	movwf	fsr2l,c
  8570   003D1C  51C4               	movf	(sprintf@f+4)& (0+255),w,b
  8571   003D1E  21B9               	addwfc	(sprintf@s+1)& (0+255),w,b
  8572   003D20  6EDA               	movwf	fsr2h,c
  8573   003D22  0E00               	movlw	0
  8574   003D24  6EDF               	movwf	indf2,c
  8575   003D26                     
  8576                           ; BSR set to: 0
  8577   003D26  0012               	return		;funcret
  8578   003D28                     __end_of_sprintf:
  8579                           	callstack 0
  8580                           
  8581 ;; *************** function _vfprintf *****************
  8582 ;; Defined at:
  8583 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  8584 ;; Parameters:    Size  Location     Type
  8585 ;;  fp              2   80[BANK0 ] PTR struct _IO_FILE
  8586 ;;		 -> sprintf@f(11), 
  8587 ;;  fmt             2   82[BANK0 ] PTR const unsigned char 
  8588 ;;		 -> STR_40(4), 
  8589 ;;  ap              2   84[BANK0 ] PTR PTR void 
  8590 ;;		 -> sprintf@ap(2), 
  8591 ;; Auto vars:     Size  Location     Type
  8592 ;;  cfmt            2   86[BANK0 ] PTR unsigned char 
  8593 ;;		 -> STR_40(4), 
  8594 ;; Return value:  Size  Location     Type
  8595 ;;                  2   80[BANK0 ] int 
  8596 ;; Registers used:
  8597 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8598 ;; Tracked objects:
  8599 ;;		On entry : 0/0
  8600 ;;		On exit  : 0/0
  8601 ;;		Unchanged: 0/0
  8602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8603 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8604 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8606 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8607 ;;Total ram usage:        8 bytes
  8608 ;; Hardware stack levels used: 1
  8609 ;; Hardware stack levels required when called: 9
  8610 ;; This function calls:
  8611 ;;		_vfpfcnvrt
  8612 ;; This function is called by:
  8613 ;;		_sprintf
  8614 ;; This function uses a non-reentrant model
  8615 ;;
  8616                           
  8617                           	psect	text32
  8618   003D28                     __ptext32:
  8619                           	callstack 0
  8620   003D28                     _vfprintf:
  8621                           	callstack 18
  8622   003D28                     
  8623                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  8624   003D28  C0B2  F0B6         	movff	vfprintf@fmt,vfprintf@cfmt
  8625   003D2C  C0B3  F0B7         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  8626                           
  8627                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  8628   003D30  EFA9  F01E         	goto	l4728
  8629   003D34                     l4726:
  8630                           
  8631                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  8632   003D34  C0B0  F09E         	movff	vfprintf@fp,vfpfcnvrt@fp
  8633   003D38  C0B1  F09F         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  8634   003D3C  0EB6               	movlw	low vfprintf@cfmt
  8635   003D3E  0100               	movlb	0	; () banked
  8636   003D40  6FA0               	movwf	vfpfcnvrt@fmt& (0+255),b
  8637   003D42  0E00               	movlw	high vfprintf@cfmt
  8638   003D44  6FA1               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  8639   003D46  C0B4  F0A2         	movff	vfprintf@ap,vfpfcnvrt@ap
  8640   003D4A  C0B5  F0A3         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  8641   003D4E  EC5A  F017         	call	_vfpfcnvrt	;wreg free
  8642   003D52                     l4728:
  8643                           
  8644                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  8645   003D52  C0B6  FFF6         	movff	vfprintf@cfmt,tblptrl
  8646   003D56  C0B7  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  8647   003D5A                     	if	0	;tblptru may be non-zero
  8648   003D5A                     	endif
  8649   003D5A                     	if	0	;tblptru may be non-zero
  8650   003D5A                     	endif
  8651   003D5A  0008               	tblrd		*
  8652   003D5C  50F5               	movf	tablat,w,c
  8653   003D5E  0900               	iorlw	0
  8654   003D60  A4D8               	btfss	status,2,c
  8655   003D62  EFB5  F01E         	goto	u5191
  8656   003D66  EFB7  F01E         	goto	u5190
  8657   003D6A                     u5191:
  8658   003D6A  EF9A  F01E         	goto	l4726
  8659   003D6E                     u5190:
  8660   003D6E                     
  8661                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  8662   003D6E  0E00               	movlw	0
  8663   003D70  0100               	movlb	0	; () banked
  8664   003D72  6FB1               	movwf	(?_vfprintf+1)& (0+255),b
  8665   003D74  0E00               	movlw	0
  8666   003D76  6FB0               	movwf	?_vfprintf& (0+255),b
  8667   003D78                     
  8668                           ; BSR set to: 0
  8669   003D78  0012               	return		;funcret
  8670   003D7A                     __end_of_vfprintf:
  8671                           	callstack 0
  8672                           
  8673 ;; *************** function _vfpfcnvrt *****************
  8674 ;; Defined at:
  8675 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  8676 ;; Parameters:    Size  Location     Type
  8677 ;;  fp              2   62[BANK0 ] PTR struct _IO_FILE
  8678 ;;		 -> sprintf@f(11), 
  8679 ;;  fmt             2   64[BANK0 ] PTR PTR unsigned char 
  8680 ;;		 -> vfprintf@cfmt(2), 
  8681 ;;  ap              2   66[BANK0 ] PTR PTR void 
  8682 ;;		 -> sprintf@ap(2), 
  8683 ;; Auto vars:     Size  Location     Type
  8684 ;;  convarg         8   70[BANK0 ] struct .
  8685 ;;  cp              2   78[BANK0 ] PTR unsigned char 
  8686 ;;		 -> STR_40(4), 
  8687 ;;  i               2    0        int 
  8688 ;;  done            2    0        int 
  8689 ;;  c               1    0        unsigned char 
  8690 ;; Return value:  Size  Location     Type
  8691 ;;                  1    wreg      void 
  8692 ;; Registers used:
  8693 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8694 ;; Tracked objects:
  8695 ;;		On entry : 0/0
  8696 ;;		On exit  : 0/0
  8697 ;;		Unchanged: 0/0
  8698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8699 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8700 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8701 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8702 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8703 ;;Total ram usage:       18 bytes
  8704 ;; Hardware stack levels used: 1
  8705 ;; Hardware stack levels required when called: 8
  8706 ;; This function calls:
  8707 ;;		_dtoa
  8708 ;;		_fputc
  8709 ;; This function is called by:
  8710 ;;		_vfprintf
  8711 ;; This function uses a non-reentrant model
  8712 ;;
  8713                           
  8714                           	psect	text33
  8715   002EB4                     __ptext33:
  8716                           	callstack 0
  8717   002EB4                     _vfpfcnvrt:
  8718                           	callstack 18
  8719   002EB4                     
  8720                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  8721   002EB4  C0A0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8722   002EB8  C0A1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8723   002EBC  CFDE FFF6          	movff	postinc2,tblptrl
  8724   002EC0  CFDD FFF7          	movff	postdec2,tblptrh
  8725   002EC4                     	if	0	;tblptru may be non-zero
  8726   002EC4                     	endif
  8727   002EC4                     	if	0	;tblptru may be non-zero
  8728   002EC4                     	endif
  8729   002EC4  0008               	tblrd		*
  8730   002EC6  50F5               	movf	tablat,w,c
  8731   002EC8  0A25               	xorlw	37
  8732   002ECA  A4D8               	btfss	status,2,c
  8733   002ECC  EF6A  F017         	goto	u4721
  8734   002ED0  EF6C  F017         	goto	u4720
  8735   002ED4                     u4721:
  8736   002ED4  EFEC  F017         	goto	l4472
  8737   002ED8                     u4720:
  8738   002ED8                     
  8739                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  8740   002ED8  C0A0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8741   002EDC  C0A1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8742   002EE0  2ADE               	incf	postinc2,f,c
  8743   002EE2  0E00               	movlw	0
  8744   002EE4  22DD               	addwfc	postdec2,f,c
  8745   002EE6                     
  8746                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  8747   002EE6  0E00               	movlw	0
  8748   002EE8  6E4F               	movwf	(_width+1)^0,c
  8749   002EEA  0E00               	movlw	0
  8750   002EEC  6E4E               	movwf	_width^0,c
  8751   002EEE  C04E  F0FA         	movff	_width,_flags
  8752   002EF2                     
  8753                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  8754   002EF2  0100               	movlb	0	; () banked
  8755   002EF4  69F8               	setf	_prec& (0+255),b
  8756   002EF6  69F9               	setf	(_prec+1)& (0+255),b
  8757   002EF8                     
  8758                           ; BSR set to: 0
  8759                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  8760   002EF8  C0A0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8761   002EFC  C0A1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8762   002F00  CFDE F0AE          	movff	postinc2,vfpfcnvrt@cp
  8763   002F04  CFDD F0AF          	movff	postdec2,vfpfcnvrt@cp+1
  8764   002F08                     
  8765                           ; BSR set to: 0
  8766                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  8767   002F08  C0AE  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  8768   002F0C  C0AF  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  8769   002F10                     	if	0	;tblptru may be non-zero
  8770   002F10                     	endif
  8771   002F10                     	if	0	;tblptru may be non-zero
  8772   002F10                     	endif
  8773   002F10  0008               	tblrd		*
  8774   002F12  50F5               	movf	tablat,w,c
  8775   002F14  0A64               	xorlw	100
  8776   002F16  B4D8               	btfsc	status,2,c
  8777   002F18  EF90  F017         	goto	u4731
  8778   002F1C  EF92  F017         	goto	u4730
  8779   002F20                     u4731:
  8780   002F20  EFA0  F017         	goto	l4462
  8781   002F24                     u4730:
  8782   002F24                     
  8783                           ; BSR set to: 0
  8784   002F24  C0AE  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  8785   002F28  C0AF  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  8786   002F2C                     	if	0	;tblptru may be non-zero
  8787   002F2C                     	endif
  8788   002F2C                     	if	0	;tblptru may be non-zero
  8789   002F2C                     	endif
  8790   002F2C  0008               	tblrd		*
  8791   002F2E  50F5               	movf	tablat,w,c
  8792   002F30  0A69               	xorlw	105
  8793   002F32  A4D8               	btfss	status,2,c
  8794   002F34  EF9E  F017         	goto	u4741
  8795   002F38  EFA0  F017         	goto	u4740
  8796   002F3C                     u4741:
  8797   002F3C  EFE3  F017         	goto	l4468
  8798   002F40                     u4740:
  8799   002F40                     l4462:
  8800                           
  8801                           ; BSR set to: 0
  8802                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  8803   002F40  C0A2  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8804   002F44  C0A3  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8805   002F48  CFDF F0A4          	movff	indf2,??_vfpfcnvrt
  8806   002F4C  0E02               	movlw	2
  8807   002F4E  26DE               	addwf	postinc2,f,c
  8808   002F50  CFDF F0A5          	movff	indf2,??_vfpfcnvrt+1
  8809   002F54  0E00               	movlw	0
  8810   002F56  22DD               	addwfc	postdec2,f,c
  8811   002F58  C0A4  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8812   002F5C  C0A5  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8813   002F60  CFDE F0A6          	movff	postinc2,vfpfcnvrt@convarg
  8814   002F64  CFDD F0A7          	movff	postdec2,vfpfcnvrt@convarg+1
  8815   002F68  0E00               	movlw	0
  8816   002F6A  BFA7               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  8817   002F6C  0EFF               	movlw	-1
  8818   002F6E  6FA8               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  8819   002F70  6FA9               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  8820   002F72  6FAA               	movwf	(vfpfcnvrt@convarg+4)& (0+255),b
  8821   002F74  6FAB               	movwf	(vfpfcnvrt@convarg+5)& (0+255),b
  8822   002F76  6FAC               	movwf	(vfpfcnvrt@convarg+6)& (0+255),b
  8823   002F78  6FAD               	movwf	(vfpfcnvrt@convarg+7)& (0+255),b
  8824                           
  8825                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  8826   002F7A  0E01               	movlw	1
  8827   002F7C  25AE               	addwf	vfpfcnvrt@cp& (0+255),w,b
  8828   002F7E  6FA4               	movwf	??_vfpfcnvrt& (0+255),b
  8829   002F80  0E00               	movlw	0
  8830   002F82  21AF               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  8831   002F84  6FA5               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  8832   002F86  C0A0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8833   002F8A  C0A1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8834   002F8E  C0A4  FFDE         	movff	??_vfpfcnvrt,postinc2
  8835   002F92  C0A5  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  8836   002F96                     
  8837                           ; BSR set to: 0
  8838                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  8839   002F96  C09E  F07B         	movff	vfpfcnvrt@fp,dtoa@fp
  8840   002F9A  C09F  F07C         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  8841   002F9E  C0A6  F07D         	movff	vfpfcnvrt@convarg,dtoa@d
  8842   002FA2  C0A7  F07E         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  8843   002FA6  C0A8  F07F         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  8844   002FAA  C0A9  F080         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  8845   002FAE  C0AA  F081         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  8846   002FB2  C0AB  F082         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  8847   002FB6  C0AC  F083         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  8848   002FBA  C0AD  F084         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  8849   002FBE  EC37  F011         	call	_dtoa	;wreg free
  8850   002FC2  EF01  F018         	goto	l1382
  8851   002FC6                     l4468:
  8852                           
  8853                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  8854   002FC6  C0A0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8855   002FCA  C0A1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8856   002FCE  2ADE               	incf	postinc2,f,c
  8857   002FD0  0E00               	movlw	0
  8858   002FD2  22DD               	addwfc	postdec2,f,c
  8859   002FD4  EF01  F018         	goto	l1382
  8860   002FD8                     l4472:
  8861                           
  8862                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  8863   002FD8  C0A0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8864   002FDC  C0A1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8865   002FE0  CFDE FFF6          	movff	postinc2,tblptrl
  8866   002FE4  CFDD FFF7          	movff	postdec2,tblptrh
  8867   002FE8                     	if	0	;tblptru may be non-zero
  8868   002FE8                     	endif
  8869   002FE8                     	if	0	;tblptru may be non-zero
  8870   002FE8                     	endif
  8871   002FE8  0008               	tblrd		*
  8872   002FEA  50F5               	movf	tablat,w,c
  8873   002FEC  0100               	movlb	0	; () banked
  8874   002FEE  6F60               	movwf	fputc@c& (0+255),b
  8875   002FF0  6B61               	clrf	(fputc@c+1)& (0+255),b
  8876   002FF2  C09E  F062         	movff	vfpfcnvrt@fp,fputc@fp
  8877   002FF6  C09F  F063         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  8878   002FFA  EC55  F01A         	call	_fputc	;wreg free
  8879   002FFE  EFE3  F017         	goto	l4468
  8880   003002                     l1382:
  8881   003002  0012               	return		;funcret
  8882   003004                     __end_of_vfpfcnvrt:
  8883                           	callstack 0
  8884                           
  8885 ;; *************** function _dtoa *****************
  8886 ;; Defined at:
  8887 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  8888 ;; Parameters:    Size  Location     Type
  8889 ;;  fp              2   27[BANK0 ] PTR struct _IO_FILE
  8890 ;;		 -> sprintf@f(11), 
  8891 ;;  d               8   29[BANK0 ] long long 
  8892 ;; Auto vars:     Size  Location     Type
  8893 ;;  n               8   51[BANK0 ] long long 
  8894 ;;  i               2   59[BANK0 ] int 
  8895 ;;  w               2   49[BANK0 ] int 
  8896 ;;  p               2   47[BANK0 ] int 
  8897 ;;  s               1   61[BANK0 ] unsigned char 
  8898 ;; Return value:  Size  Location     Type
  8899 ;;                  1    wreg      void 
  8900 ;; Registers used:
  8901 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8902 ;; Tracked objects:
  8903 ;;		On entry : 0/0
  8904 ;;		On exit  : 0/0
  8905 ;;		Unchanged: 0/0
  8906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8907 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8908 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8909 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8910 ;;      Totals:         0      35       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8911 ;;Total ram usage:       35 bytes
  8912 ;; Hardware stack levels used: 1
  8913 ;; Hardware stack levels required when called: 7
  8914 ;; This function calls:
  8915 ;;		___aodiv
  8916 ;;		___aomod
  8917 ;;		_abs
  8918 ;;		_pad
  8919 ;; This function is called by:
  8920 ;;		_vfpfcnvrt
  8921 ;; This function uses a non-reentrant model
  8922 ;;
  8923                           
  8924                           	psect	text34
  8925   00226E                     __ptext34:
  8926                           	callstack 0
  8927   00226E                     _dtoa:
  8928                           	callstack 18
  8929   00226E                     
  8930                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  8931   00226E  C07D  F093         	movff	dtoa@d,dtoa@n
  8932   002272  C07E  F094         	movff	dtoa@d+1,dtoa@n+1
  8933   002276  C07F  F095         	movff	dtoa@d+2,dtoa@n+2
  8934   00227A  C080  F096         	movff	dtoa@d+3,dtoa@n+3
  8935   00227E  C081  F097         	movff	dtoa@d+4,dtoa@n+4
  8936   002282  C082  F098         	movff	dtoa@d+5,dtoa@n+5
  8937   002286  C083  F099         	movff	dtoa@d+6,dtoa@n+6
  8938   00228A  C084  F09A         	movff	dtoa@d+7,dtoa@n+7
  8939   00228E                     
  8940                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  8941   00228E  0100               	movlb	0	; () banked
  8942   002290  BF9A               	btfsc	(dtoa@n+7)& (0+255),7,b
  8943   002292  EF4D  F011         	goto	u3951
  8944   002296  EF50  F011         	goto	u3950
  8945   00229A                     u3951:
  8946   00229A  0E01               	movlw	1
  8947   00229C  EF51  F011         	goto	u3960
  8948   0022A0                     u3950:
  8949   0022A0  0E00               	movlw	0
  8950   0022A2                     u3960:
  8951   0022A2  6F9D               	movwf	dtoa@s& (0+255),b
  8952   0022A4                     
  8953                           ; BSR set to: 0
  8954                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  8955   0022A4  519D               	movf	dtoa@s& (0+255),w,b
  8956   0022A6  B4D8               	btfsc	status,2,c
  8957   0022A8  EF58  F011         	goto	u3971
  8958   0022AC  EF5A  F011         	goto	u3970
  8959   0022B0                     u3971:
  8960   0022B0  EF6A  F011         	goto	l4012
  8961   0022B4                     u3970:
  8962   0022B4                     
  8963                           ; BSR set to: 0
  8964                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  8965   0022B4  1F9A               	comf	(dtoa@n+7)& (0+255),f,b
  8966   0022B6  1F99               	comf	(dtoa@n+6)& (0+255),f,b
  8967   0022B8  1F98               	comf	(dtoa@n+5)& (0+255),f,b
  8968   0022BA  1F97               	comf	(dtoa@n+4)& (0+255),f,b
  8969   0022BC  1F96               	comf	(dtoa@n+3)& (0+255),f,b
  8970   0022BE  1F95               	comf	(dtoa@n+2)& (0+255),f,b
  8971   0022C0  1F94               	comf	(dtoa@n+1)& (0+255),f,b
  8972   0022C2  6D93               	negf	dtoa@n& (0+255),b
  8973   0022C4  0E00               	movlw	0
  8974   0022C6  2394               	addwfc	(dtoa@n+1)& (0+255),f,b
  8975   0022C8  2395               	addwfc	(dtoa@n+2)& (0+255),f,b
  8976   0022CA  2396               	addwfc	(dtoa@n+3)& (0+255),f,b
  8977   0022CC  2397               	addwfc	(dtoa@n+4)& (0+255),f,b
  8978   0022CE  2398               	addwfc	(dtoa@n+5)& (0+255),f,b
  8979   0022D0  2399               	addwfc	(dtoa@n+6)& (0+255),f,b
  8980   0022D2  239A               	addwfc	(dtoa@n+7)& (0+255),f,b
  8981   0022D4                     l4012:
  8982                           
  8983                           ; BSR set to: 0
  8984                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  8985   0022D4  BFF9               	btfsc	(_prec+1)& (0+255),7,b
  8986   0022D6  EF77  F011         	goto	u3980
  8987   0022DA  51F9               	movf	(_prec+1)& (0+255),w,b
  8988   0022DC  E106               	bnz	u3981
  8989   0022DE  05F8               	decf	_prec& (0+255),w,b
  8990   0022E0  B0D8               	btfsc	status,0,c
  8991   0022E2  EF75  F011         	goto	u3981
  8992   0022E6  EF77  F011         	goto	u3980
  8993   0022EA                     u3981:
  8994   0022EA  EF7D  F011         	goto	l1361
  8995   0022EE                     u3980:
  8996   0022EE                     
  8997                           ; BSR set to: 0
  8998   0022EE  0E00               	movlw	0
  8999   0022F0  6F90               	movwf	(dtoa@p+1)& (0+255),b
  9000   0022F2  0E01               	movlw	1
  9001   0022F4  6F8F               	movwf	dtoa@p& (0+255),b
  9002   0022F6  EF81  F011         	goto	l1363
  9003   0022FA                     l1361:
  9004                           
  9005                           ; BSR set to: 0
  9006   0022FA  C0F8  F08F         	movff	_prec,dtoa@p
  9007   0022FE  C0F9  F090         	movff	_prec+1,dtoa@p+1
  9008   002302                     l1363:
  9009                           
  9010                           ; BSR set to: 0
  9011                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  9012   002302  C04E  F091         	movff	_width,dtoa@w
  9013   002306  C04F  F092         	movff	_width+1,dtoa@w+1
  9014   00230A                     
  9015                           ; BSR set to: 0
  9016                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  9017   00230A  519D               	movf	dtoa@s& (0+255),w,b
  9018   00230C  B4D8               	btfsc	status,2,c
  9019   00230E  EF8B  F011         	goto	u3991
  9020   002312  EF8D  F011         	goto	u3990
  9021   002316                     u3991:
  9022   002316  EFA4  F011         	goto	l1364
  9023   00231A                     u3990:
  9024   00231A                     
  9025                           ; BSR set to: 0
  9026                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  9027   00231A  0791               	decf	dtoa@w& (0+255),f,b
  9028   00231C  A0D8               	btfss	status,0,c
  9029   00231E  0792               	decf	(dtoa@w+1)& (0+255),f,b
  9030   002320                     
  9031                           ; BSR set to: 0
  9032                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  9033   002320  519D               	movf	dtoa@s& (0+255),w,b
  9034   002322  A4D8               	btfss	status,2,c
  9035   002324  EF96  F011         	goto	u4001
  9036   002328  EF98  F011         	goto	u4000
  9037   00232C                     u4001:
  9038   00232C  EF9E  F011         	goto	l4024
  9039   002330                     u4000:
  9040   002330                     
  9041                           ; BSR set to: 0
  9042   002330  0E00               	movlw	0
  9043   002332  6F8E               	movwf	(_dtoa$2353+1)& (0+255),b
  9044   002334  0E2B               	movlw	43
  9045   002336  6F8D               	movwf	_dtoa$2353& (0+255),b
  9046   002338  EFA2  F011         	goto	l4026
  9047   00233C                     l4024:
  9048                           
  9049                           ; BSR set to: 0
  9050   00233C  0E00               	movlw	0
  9051   00233E  6F8E               	movwf	(_dtoa$2353+1)& (0+255),b
  9052   002340  0E2D               	movlw	45
  9053   002342  6F8D               	movwf	_dtoa$2353& (0+255),b
  9054   002344                     l4026:
  9055                           
  9056                           ; BSR set to: 0
  9057   002344  C08D  F09D         	movff	_dtoa$2353,dtoa@s
  9058   002348                     l1364:
  9059                           
  9060                           ; BSR set to: 0
  9061                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  9062   002348  0E00               	movlw	0
  9063   00234A  6F9C               	movwf	(dtoa@i+1)& (0+255),b
  9064   00234C  0E1F               	movlw	31
  9065   00234E  6F9B               	movwf	dtoa@i& (0+255),b
  9066   002350                     
  9067                           ; BSR set to: 0
  9068                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  9069   002350  0E00               	movlw	0
  9070   002352  0102               	movlb	2	; () banked
  9071   002354  6FED               	movwf	(_dbuf+31)& (0+255),b
  9072                           
  9073                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  9074   002356  EF2A  F012         	goto	l4040
  9075   00235A                     l4030:
  9076                           
  9077                           ; BSR set to: 0
  9078                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  9079   00235A  079B               	decf	dtoa@i& (0+255),f,b
  9080   00235C  A0D8               	btfss	status,0,c
  9081   00235E  079C               	decf	(dtoa@i+1)& (0+255),f,b
  9082   002360                     
  9083                           ; BSR set to: 0
  9084                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  9085   002360  0ECE               	movlw	low _dbuf
  9086   002362  259B               	addwf	dtoa@i& (0+255),w,b
  9087   002364  6ED9               	movwf	fsr2l,c
  9088   002366  0E02               	movlw	high _dbuf
  9089   002368  219C               	addwfc	(dtoa@i+1)& (0+255),w,b
  9090   00236A  6EDA               	movwf	fsr2h,c
  9091   00236C  C093  F060         	movff	dtoa@n,___aomod@dividend
  9092   002370  C094  F061         	movff	dtoa@n+1,___aomod@dividend+1
  9093   002374  C095  F062         	movff	dtoa@n+2,___aomod@dividend+2
  9094   002378  C096  F063         	movff	dtoa@n+3,___aomod@dividend+3
  9095   00237C  C097  F064         	movff	dtoa@n+4,___aomod@dividend+4
  9096   002380  C098  F065         	movff	dtoa@n+5,___aomod@dividend+5
  9097   002384  C099  F066         	movff	dtoa@n+6,___aomod@dividend+6
  9098   002388  C09A  F067         	movff	dtoa@n+7,___aomod@dividend+7
  9099   00238C  0E0A               	movlw	10
  9100   00238E  6F68               	movwf	___aomod@divisor& (0+255),b
  9101   002390  0E00               	movlw	0
  9102   002392  6F69               	movwf	(___aomod@divisor+1)& (0+255),b
  9103   002394  0E00               	movlw	0
  9104   002396  6F6A               	movwf	(___aomod@divisor+2)& (0+255),b
  9105   002398  0E00               	movlw	0
  9106   00239A  6F6B               	movwf	(___aomod@divisor+3)& (0+255),b
  9107   00239C  0E00               	movlw	0
  9108   00239E  6F6C               	movwf	(___aomod@divisor+4)& (0+255),b
  9109   0023A0  0E00               	movlw	0
  9110   0023A2  6F6D               	movwf	(___aomod@divisor+5)& (0+255),b
  9111   0023A4  0E00               	movlw	0
  9112   0023A6  6F6E               	movwf	(___aomod@divisor+6)& (0+255),b
  9113   0023A8  0E00               	movlw	0
  9114   0023AA  6F6F               	movwf	(___aomod@divisor+7)& (0+255),b
  9115   0023AC  ECA7  F016         	call	___aomod	;wreg free
  9116   0023B0  C060  F085         	movff	?___aomod,??_dtoa
  9117   0023B4  C061  F086         	movff	?___aomod+1,??_dtoa+1
  9118   0023B8  C062  F087         	movff	?___aomod+2,??_dtoa+2
  9119   0023BC  C063  F088         	movff	?___aomod+3,??_dtoa+3
  9120   0023C0  C064  F089         	movff	?___aomod+4,??_dtoa+4
  9121   0023C4  C065  F08A         	movff	?___aomod+5,??_dtoa+5
  9122   0023C8  C066  F08B         	movff	?___aomod+6,??_dtoa+6
  9123   0023CC  C067  F08C         	movff	?___aomod+7,??_dtoa+7
  9124   0023D0  C085  F072         	movff	??_dtoa,abs@a
  9125   0023D4  C086  F073         	movff	??_dtoa+1,abs@a+1
  9126   0023D8  EC51  F01F         	call	_abs	;wreg free
  9127   0023DC  0100               	movlb	0	; () banked
  9128   0023DE  5172               	movf	?_abs& (0+255),w,b
  9129   0023E0  0F30               	addlw	48
  9130   0023E2  6EDF               	movwf	indf2,c
  9131   0023E4                     
  9132                           ; BSR set to: 0
  9133                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  9134   0023E4  078F               	decf	dtoa@p& (0+255),f,b
  9135   0023E6  A0D8               	btfss	status,0,c
  9136   0023E8  0790               	decf	(dtoa@p+1)& (0+255),f,b
  9137   0023EA                     
  9138                           ; BSR set to: 0
  9139                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  9140   0023EA  0791               	decf	dtoa@w& (0+255),f,b
  9141   0023EC  A0D8               	btfss	status,0,c
  9142   0023EE  0792               	decf	(dtoa@w+1)& (0+255),f,b
  9143   0023F0                     
  9144                           ; BSR set to: 0
  9145                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  9146   0023F0  C093  F060         	movff	dtoa@n,___aodiv@dividend
  9147   0023F4  C094  F061         	movff	dtoa@n+1,___aodiv@dividend+1
  9148   0023F8  C095  F062         	movff	dtoa@n+2,___aodiv@dividend+2
  9149   0023FC  C096  F063         	movff	dtoa@n+3,___aodiv@dividend+3
  9150   002400  C097  F064         	movff	dtoa@n+4,___aodiv@dividend+4
  9151   002404  C098  F065         	movff	dtoa@n+5,___aodiv@dividend+5
  9152   002408  C099  F066         	movff	dtoa@n+6,___aodiv@dividend+6
  9153   00240C  C09A  F067         	movff	dtoa@n+7,___aodiv@dividend+7
  9154   002410  0E0A               	movlw	10
  9155   002412  6F68               	movwf	___aodiv@divisor& (0+255),b
  9156   002414  0E00               	movlw	0
  9157   002416  6F69               	movwf	(___aodiv@divisor+1)& (0+255),b
  9158   002418  0E00               	movlw	0
  9159   00241A  6F6A               	movwf	(___aodiv@divisor+2)& (0+255),b
  9160   00241C  0E00               	movlw	0
  9161   00241E  6F6B               	movwf	(___aodiv@divisor+3)& (0+255),b
  9162   002420  0E00               	movlw	0
  9163   002422  6F6C               	movwf	(___aodiv@divisor+4)& (0+255),b
  9164   002424  0E00               	movlw	0
  9165   002426  6F6D               	movwf	(___aodiv@divisor+5)& (0+255),b
  9166   002428  0E00               	movlw	0
  9167   00242A  6F6E               	movwf	(___aodiv@divisor+6)& (0+255),b
  9168   00242C  0E00               	movlw	0
  9169   00242E  6F6F               	movwf	(___aodiv@divisor+7)& (0+255),b
  9170   002430  ECE2  F015         	call	___aodiv	;wreg free
  9171   002434  C060  F093         	movff	?___aodiv,dtoa@n
  9172   002438  C061  F094         	movff	?___aodiv+1,dtoa@n+1
  9173   00243C  C062  F095         	movff	?___aodiv+2,dtoa@n+2
  9174   002440  C063  F096         	movff	?___aodiv+3,dtoa@n+3
  9175   002444  C064  F097         	movff	?___aodiv+4,dtoa@n+4
  9176   002448  C065  F098         	movff	?___aodiv+5,dtoa@n+5
  9177   00244C  C066  F099         	movff	?___aodiv+6,dtoa@n+6
  9178   002450  C067  F09A         	movff	?___aodiv+7,dtoa@n+7
  9179   002454                     l4040:
  9180                           
  9181                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  9182   002454  0100               	movlb	0	; () banked
  9183   002456  BF9C               	btfsc	(dtoa@i+1)& (0+255),7,b
  9184   002458  EF36  F012         	goto	u4011
  9185   00245C  519C               	movf	(dtoa@i+1)& (0+255),w,b
  9186   00245E  E108               	bnz	u4010
  9187   002460  059B               	decf	dtoa@i& (0+255),w,b
  9188   002462  A0D8               	btfss	status,0,c
  9189   002464  EF36  F012         	goto	u4011
  9190   002468  EF38  F012         	goto	u4010
  9191   00246C                     u4011:
  9192   00246C  EF54  F012         	goto	l4046
  9193   002470                     u4010:
  9194   002470                     
  9195                           ; BSR set to: 0
  9196   002470  5193               	movf	dtoa@n& (0+255),w,b
  9197   002472  1194               	iorwf	(dtoa@n+1)& (0+255),w,b
  9198   002474  1195               	iorwf	(dtoa@n+2)& (0+255),w,b
  9199   002476  1196               	iorwf	(dtoa@n+3)& (0+255),w,b
  9200   002478  1197               	iorwf	(dtoa@n+4)& (0+255),w,b
  9201   00247A  1198               	iorwf	(dtoa@n+5)& (0+255),w,b
  9202   00247C  1199               	iorwf	(dtoa@n+6)& (0+255),w,b
  9203   00247E  119A               	iorwf	(dtoa@n+7)& (0+255),w,b
  9204   002480  A4D8               	btfss	status,2,c
  9205   002482  EF45  F012         	goto	u4021
  9206   002486  EF47  F012         	goto	u4020
  9207   00248A                     u4021:
  9208   00248A  EFAD  F011         	goto	l4030
  9209   00248E                     u4020:
  9210   00248E                     
  9211                           ; BSR set to: 0
  9212   00248E  BF90               	btfsc	(dtoa@p+1)& (0+255),7,b
  9213   002490  EF54  F012         	goto	u4030
  9214   002494  5190               	movf	(dtoa@p+1)& (0+255),w,b
  9215   002496  E106               	bnz	u4031
  9216   002498  058F               	decf	dtoa@p& (0+255),w,b
  9217   00249A  B0D8               	btfsc	status,0,c
  9218   00249C  EF52  F012         	goto	u4031
  9219   0024A0  EF54  F012         	goto	u4030
  9220   0024A4                     u4031:
  9221   0024A4  EFAD  F011         	goto	l4030
  9222   0024A8                     u4030:
  9223   0024A8                     l4046:
  9224                           
  9225                           ; BSR set to: 0
  9226                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  9227   0024A8  519D               	movf	dtoa@s& (0+255),w,b
  9228   0024AA  B4D8               	btfsc	status,2,c
  9229   0024AC  EF5A  F012         	goto	u4041
  9230   0024B0  EF5C  F012         	goto	u4040
  9231   0024B4                     u4041:
  9232   0024B4  EF67  F012         	goto	l4052
  9233   0024B8                     u4040:
  9234   0024B8                     
  9235                           ; BSR set to: 0
  9236                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  9237   0024B8  079B               	decf	dtoa@i& (0+255),f,b
  9238   0024BA  A0D8               	btfss	status,0,c
  9239   0024BC  079C               	decf	(dtoa@i+1)& (0+255),f,b
  9240   0024BE                     
  9241                           ; BSR set to: 0
  9242                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  9243   0024BE  0ECE               	movlw	low _dbuf
  9244   0024C0  259B               	addwf	dtoa@i& (0+255),w,b
  9245   0024C2  6ED9               	movwf	fsr2l,c
  9246   0024C4  0E02               	movlw	high _dbuf
  9247   0024C6  219C               	addwfc	(dtoa@i+1)& (0+255),w,b
  9248   0024C8  6EDA               	movwf	fsr2h,c
  9249   0024CA  C09D  FFDF         	movff	dtoa@s,indf2
  9250   0024CE                     l4052:
  9251                           
  9252                           ; BSR set to: 0
  9253                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  9254   0024CE  C07B  F070         	movff	dtoa@fp,pad@fp
  9255   0024D2  C07C  F071         	movff	dtoa@fp+1,pad@fp+1
  9256   0024D6  0ECE               	movlw	low _dbuf
  9257   0024D8  259B               	addwf	dtoa@i& (0+255),w,b
  9258   0024DA  6F72               	movwf	pad@buf& (0+255),b
  9259   0024DC  0E02               	movlw	high _dbuf
  9260   0024DE  219C               	addwfc	(dtoa@i+1)& (0+255),w,b
  9261   0024E0  6F73               	movwf	(pad@buf+1)& (0+255),b
  9262   0024E2  C091  F074         	movff	dtoa@w,pad@p
  9263   0024E6  C092  F075         	movff	dtoa@w+1,pad@p+1
  9264   0024EA  EC66  F01C         	call	_pad	;wreg free
  9265   0024EE  0012               	return		;funcret
  9266   0024F0                     __end_of_dtoa:
  9267                           	callstack 0
  9268                           
  9269 ;; *************** function _pad *****************
  9270 ;; Defined at:
  9271 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  9272 ;; Parameters:    Size  Location     Type
  9273 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  9274 ;;		 -> sprintf@f(11), 
  9275 ;;  buf             2   18[BANK0 ] PTR unsigned char 
  9276 ;;		 -> dbuf(32), 
  9277 ;;  p               2   20[BANK0 ] int 
  9278 ;; Auto vars:     Size  Location     Type
  9279 ;;  w               2   25[BANK0 ] int 
  9280 ;;  i               2   23[BANK0 ] int 
  9281 ;; Return value:  Size  Location     Type
  9282 ;;                  1    wreg      void 
  9283 ;; Registers used:
  9284 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9285 ;; Tracked objects:
  9286 ;;		On entry : 0/0
  9287 ;;		On exit  : 0/0
  9288 ;;		Unchanged: 0/0
  9289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9290 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9291 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9292 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9293 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9294 ;;Total ram usage:       11 bytes
  9295 ;; Hardware stack levels used: 1
  9296 ;; Hardware stack levels required when called: 6
  9297 ;; This function calls:
  9298 ;;		_fputc
  9299 ;;		_fputs
  9300 ;; This function is called by:
  9301 ;;		_dtoa
  9302 ;; This function uses a non-reentrant model
  9303 ;;
  9304                           
  9305                           	psect	text35
  9306   0038CC                     __ptext35:
  9307                           	callstack 0
  9308   0038CC                     _pad:
  9309                           	callstack 18
  9310   0038CC                     
  9311                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  9312   0038CC  0100               	movlb	0	; () banked
  9313   0038CE  BF75               	btfsc	(pad@p+1)& (0+255),7,b
  9314   0038D0  EF6C  F01C         	goto	u3901
  9315   0038D4  EF6E  F01C         	goto	u3900
  9316   0038D8                     u3901:
  9317   0038D8  EF74  F01C         	goto	l3986
  9318   0038DC                     u3900:
  9319   0038DC                     
  9320                           ; BSR set to: 0
  9321   0038DC  C074  F079         	movff	pad@p,pad@w
  9322   0038E0  C075  F07A         	movff	pad@p+1,pad@w+1
  9323   0038E4  EF78  F01C         	goto	l1352
  9324   0038E8                     l3986:
  9325                           
  9326                           ; BSR set to: 0
  9327   0038E8  0E00               	movlw	0
  9328   0038EA  6F7A               	movwf	(pad@w+1)& (0+255),b
  9329   0038EC  0E00               	movlw	0
  9330   0038EE  6F79               	movwf	pad@w& (0+255),b
  9331   0038F0                     l1352:
  9332                           
  9333                           ; BSR set to: 0
  9334                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  9335   0038F0  0E00               	movlw	0
  9336   0038F2  6F78               	movwf	(pad@i+1)& (0+255),b
  9337   0038F4  0E00               	movlw	0
  9338   0038F6  6F77               	movwf	pad@i& (0+255),b
  9339                           
  9340                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  9341   0038F8  EF8B  F01C         	goto	l3992
  9342   0038FC                     l3988:
  9343                           
  9344                           ; BSR set to: 0
  9345                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  9346   0038FC  0E00               	movlw	0
  9347   0038FE  6F61               	movwf	(fputc@c+1)& (0+255),b
  9348   003900  0E20               	movlw	32
  9349   003902  6F60               	movwf	fputc@c& (0+255),b
  9350   003904  C070  F062         	movff	pad@fp,fputc@fp
  9351   003908  C071  F063         	movff	pad@fp+1,fputc@fp+1
  9352   00390C  EC55  F01A         	call	_fputc	;wreg free
  9353   003910                     
  9354                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  9355   003910  0100               	movlb	0	; () banked
  9356   003912  4B77               	infsnz	pad@i& (0+255),f,b
  9357   003914  2B78               	incf	(pad@i+1)& (0+255),f,b
  9358   003916                     l3992:
  9359                           
  9360                           ; BSR set to: 0
  9361                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  9362   003916  5179               	movf	pad@w& (0+255),w,b
  9363   003918  5D77               	subwf	pad@i& (0+255),w,b
  9364   00391A  5178               	movf	(pad@i+1)& (0+255),w,b
  9365   00391C  0A80               	xorlw	128
  9366   00391E  6F76               	movwf	??_pad& (0+255),b
  9367   003920  517A               	movf	(pad@w+1)& (0+255),w,b
  9368   003922  0A80               	xorlw	128
  9369   003924  5976               	subwfb	??_pad& (0+255),w,b
  9370   003926  A0D8               	btfss	status,0,c
  9371   003928  EF98  F01C         	goto	u3911
  9372   00392C  EF9A  F01C         	goto	u3910
  9373   003930                     u3911:
  9374   003930  EF7E  F01C         	goto	l3988
  9375   003934                     u3910:
  9376   003934                     
  9377                           ; BSR set to: 0
  9378                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  9379   003934  C072  F069         	movff	pad@buf,fputs@s
  9380   003938  C073  F06A         	movff	pad@buf+1,fputs@s+1
  9381   00393C  C070  F06B         	movff	pad@fp,fputs@fp
  9382   003940  C071  F06C         	movff	pad@fp+1,fputs@fp+1
  9383   003944  EC09  F01F         	call	_fputs	;wreg free
  9384   003948  0012               	return		;funcret
  9385   00394A                     __end_of_pad:
  9386                           	callstack 0
  9387                           
  9388 ;; *************** function _fputs *****************
  9389 ;; Defined at:
  9390 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  9391 ;; Parameters:    Size  Location     Type
  9392 ;;  s               2    9[BANK0 ] PTR const unsigned char 
  9393 ;;		 -> dbuf(32), 
  9394 ;;  fp              2   11[BANK0 ] PTR struct _IO_FILE
  9395 ;;		 -> sprintf@f(11), 
  9396 ;; Auto vars:     Size  Location     Type
  9397 ;;  i               2   14[BANK0 ] int 
  9398 ;;  c               1   13[BANK0 ] unsigned char 
  9399 ;; Return value:  Size  Location     Type
  9400 ;;                  2    9[BANK0 ] int 
  9401 ;; Registers used:
  9402 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9403 ;; Tracked objects:
  9404 ;;		On entry : 0/0
  9405 ;;		On exit  : 0/0
  9406 ;;		Unchanged: 0/0
  9407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9408 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9409 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9411 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9412 ;;Total ram usage:        7 bytes
  9413 ;; Hardware stack levels used: 1
  9414 ;; Hardware stack levels required when called: 5
  9415 ;; This function calls:
  9416 ;;		_fputc
  9417 ;; This function is called by:
  9418 ;;		_pad
  9419 ;; This function uses a non-reentrant model
  9420 ;;
  9421                           
  9422                           	psect	text36
  9423   003E12                     __ptext36:
  9424                           	callstack 0
  9425   003E12                     _fputs:
  9426                           	callstack 18
  9427   003E12  0E00               	movlw	0
  9428   003E14  0100               	movlb	0	; () banked
  9429   003E16  6F6F               	movwf	(fputs@i+1)& (0+255),b
  9430   003E18  0E00               	movlw	0
  9431   003E1A  6F6E               	movwf	fputs@i& (0+255),b
  9432   003E1C  EF1C  F01F         	goto	l3900
  9433   003E20                     l3896:
  9434                           
  9435                           ; BSR set to: 0
  9436   003E20  C06D  F060         	movff	fputs@c,fputc@c
  9437   003E24  6B61               	clrf	(fputc@c+1)& (0+255),b
  9438   003E26  C06B  F062         	movff	fputs@fp,fputc@fp
  9439   003E2A  C06C  F063         	movff	fputs@fp+1,fputc@fp+1
  9440   003E2E  EC55  F01A         	call	_fputc	;wreg free
  9441   003E32  0100               	movlb	0	; () banked
  9442   003E34  4B6E               	infsnz	fputs@i& (0+255),f,b
  9443   003E36  2B6F               	incf	(fputs@i+1)& (0+255),f,b
  9444   003E38                     l3900:
  9445                           
  9446                           ; BSR set to: 0
  9447   003E38  516E               	movf	fputs@i& (0+255),w,b
  9448   003E3A  2569               	addwf	fputs@s& (0+255),w,b
  9449   003E3C  6ED9               	movwf	fsr2l,c
  9450   003E3E  516F               	movf	(fputs@i+1)& (0+255),w,b
  9451   003E40  216A               	addwfc	(fputs@s+1)& (0+255),w,b
  9452   003E42  6EDA               	movwf	fsr2h,c
  9453   003E44  50DF               	movf	indf2,w,c
  9454   003E46  6F6D               	movwf	fputs@c& (0+255),b
  9455   003E48  516D               	movf	fputs@c& (0+255),w,b
  9456   003E4A  A4D8               	btfss	status,2,c
  9457   003E4C  EF2A  F01F         	goto	u3761
  9458   003E50  EF2C  F01F         	goto	u3760
  9459   003E54                     u3761:
  9460   003E54  EF10  F01F         	goto	l3896
  9461   003E58                     u3760:
  9462   003E58                     
  9463                           ; BSR set to: 0
  9464   003E58  0012               	return		;funcret
  9465   003E5A                     __end_of_fputs:
  9466                           	callstack 0
  9467                           
  9468 ;; *************** function _fputc *****************
  9469 ;; Defined at:
  9470 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  9471 ;; Parameters:    Size  Location     Type
  9472 ;;  c               2    0[BANK0 ] int 
  9473 ;;  fp              2    2[BANK0 ] PTR struct _IO_FILE
  9474 ;;		 -> sprintf@f(11), 
  9475 ;; Auto vars:     Size  Location     Type
  9476 ;;		None
  9477 ;; Return value:  Size  Location     Type
  9478 ;;                  2    0[BANK0 ] int 
  9479 ;; Registers used:
  9480 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9481 ;; Tracked objects:
  9482 ;;		On entry : 0/0
  9483 ;;		On exit  : 0/0
  9484 ;;		Unchanged: 0/0
  9485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9486 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9488 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9489 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9490 ;;Total ram usage:        9 bytes
  9491 ;; Hardware stack levels used: 1
  9492 ;; Hardware stack levels required when called: 4
  9493 ;; This function calls:
  9494 ;;		_putch
  9495 ;; This function is called by:
  9496 ;;		_pad
  9497 ;;		_vfpfcnvrt
  9498 ;;		_fputs
  9499 ;; This function uses a non-reentrant model
  9500 ;;
  9501                           
  9502                           	psect	text37
  9503   0034AA                     __ptext37:
  9504                           	callstack 0
  9505   0034AA                     _fputc:
  9506                           	callstack 21
  9507   0034AA  0100               	movlb	0	; () banked
  9508   0034AC  5162               	movf	fputc@fp& (0+255),w,b
  9509   0034AE  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
  9510   0034B0  B4D8               	btfsc	status,2,c
  9511   0034B2  EF5D  F01A         	goto	u3721
  9512   0034B6  EF5F  F01A         	goto	u3720
  9513   0034BA                     u3721:
  9514   0034BA  EF68  F01A         	goto	l3884
  9515   0034BE                     u3720:
  9516   0034BE                     
  9517                           ; BSR set to: 0
  9518   0034BE  5162               	movf	fputc@fp& (0+255),w,b
  9519   0034C0  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
  9520   0034C2  A4D8               	btfss	status,2,c
  9521   0034C4  EF66  F01A         	goto	u3731
  9522   0034C8  EF68  F01A         	goto	u3730
  9523   0034CC                     u3731:
  9524   0034CC  EF6D  F01A         	goto	l3886
  9525   0034D0                     u3730:
  9526   0034D0                     l3884:
  9527                           
  9528                           ; BSR set to: 0
  9529   0034D0  5160               	movf	fputc@c& (0+255),w,b
  9530   0034D2  ECB4  F020         	call	_putch
  9531   0034D6  EFBA  F01A         	goto	l1407
  9532   0034DA                     l3886:
  9533                           
  9534                           ; BSR set to: 0
  9535   0034DA  EE20 F009          	lfsr	2,9
  9536   0034DE  5162               	movf	fputc@fp& (0+255),w,b
  9537   0034E0  26D9               	addwf	fsr2l,f,c
  9538   0034E2  5163               	movf	(fputc@fp+1)& (0+255),w,b
  9539   0034E4  22DA               	addwfc	fsr2h,f,c
  9540   0034E6  50DE               	movf	postinc2,w,c
  9541   0034E8  10DE               	iorwf	postinc2,w,c
  9542   0034EA  B4D8               	btfsc	status,2,c
  9543   0034EC  EF7A  F01A         	goto	u3741
  9544   0034F0  EF7C  F01A         	goto	u3740
  9545   0034F4                     u3741:
  9546   0034F4  EF97  F01A         	goto	l3890
  9547   0034F8                     u3740:
  9548   0034F8                     
  9549                           ; BSR set to: 0
  9550   0034F8  EE20 F009          	lfsr	2,9
  9551   0034FC  5162               	movf	fputc@fp& (0+255),w,b
  9552   0034FE  26D9               	addwf	fsr2l,f,c
  9553   003500  5163               	movf	(fputc@fp+1)& (0+255),w,b
  9554   003502  22DA               	addwfc	fsr2h,f,c
  9555   003504  EE10 F003          	lfsr	1,3
  9556   003508  5162               	movf	fputc@fp& (0+255),w,b
  9557   00350A  26E1               	addwf	fsr1l,f,c
  9558   00350C  5163               	movf	(fputc@fp+1)& (0+255),w,b
  9559   00350E  22E2               	addwfc	fsr1h,f,c
  9560   003510  50DE               	movf	postinc2,w,c
  9561   003512  5CE6               	subwf	postinc1,w,c
  9562   003514  50E6               	movf	postinc1,w,c
  9563   003516  0A80               	xorlw	128
  9564   003518  6F68               	movwf	(??_fputc+4)& (0+255),b
  9565   00351A  50DE               	movf	postinc2,w,c
  9566   00351C  0A80               	xorlw	128
  9567   00351E  5968               	subwfb	(??_fputc+4)& (0+255),w,b
  9568   003520  B0D8               	btfsc	status,0,c
  9569   003522  EF95  F01A         	goto	u3751
  9570   003526  EF97  F01A         	goto	u3750
  9571   00352A                     u3751:
  9572   00352A  EFBA  F01A         	goto	l1407
  9573   00352E                     u3750:
  9574   00352E                     l3890:
  9575                           
  9576                           ; BSR set to: 0
  9577   00352E  EE20 F003          	lfsr	2,3
  9578   003532  5162               	movf	fputc@fp& (0+255),w,b
  9579   003534  26D9               	addwf	fsr2l,f,c
  9580   003536  5163               	movf	(fputc@fp+1)& (0+255),w,b
  9581   003538  22DA               	addwfc	fsr2h,f,c
  9582   00353A  CFDE F064          	movff	postinc2,??_fputc
  9583   00353E  CFDD F065          	movff	postdec2,??_fputc+1
  9584   003542  C062  FFD9         	movff	fputc@fp,fsr2l
  9585   003546  C063  FFDA         	movff	fputc@fp+1,fsr2h
  9586   00354A  CFDE F066          	movff	postinc2,??_fputc+2
  9587   00354E  CFDD F067          	movff	postdec2,??_fputc+3
  9588   003552  5164               	movf	??_fputc& (0+255),w,b
  9589   003554  2566               	addwf	(??_fputc+2)& (0+255),w,b
  9590   003556  6ED9               	movwf	fsr2l,c
  9591   003558  5165               	movf	(??_fputc+1)& (0+255),w,b
  9592   00355A  2167               	addwfc	(??_fputc+3)& (0+255),w,b
  9593   00355C  6EDA               	movwf	fsr2h,c
  9594   00355E  C060  FFDF         	movff	fputc@c,indf2
  9595   003562  EE20 F003          	lfsr	2,3
  9596   003566  5162               	movf	fputc@fp& (0+255),w,b
  9597   003568  26D9               	addwf	fsr2l,f,c
  9598   00356A  5163               	movf	(fputc@fp+1)& (0+255),w,b
  9599   00356C  22DA               	addwfc	fsr2h,f,c
  9600   00356E  2ADE               	incf	postinc2,f,c
  9601   003570  0E00               	movlw	0
  9602   003572  22DD               	addwfc	postdec2,f,c
  9603   003574                     l1407:
  9604   003574  0012               	return		;funcret
  9605   003576                     __end_of_fputc:
  9606                           	callstack 0
  9607                           
  9608 ;; *************** function _putch *****************
  9609 ;; Defined at:
  9610 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  9611 ;; Parameters:    Size  Location     Type
  9612 ;;  c               1    wreg     unsigned char 
  9613 ;; Auto vars:     Size  Location     Type
  9614 ;;  c               1    0[COMRAM] unsigned char 
  9615 ;; Return value:  Size  Location     Type
  9616 ;;                  1    wreg      void 
  9617 ;; Registers used:
  9618 ;;		wreg
  9619 ;; Tracked objects:
  9620 ;;		On entry : 0/0
  9621 ;;		On exit  : 0/0
  9622 ;;		Unchanged: 0/0
  9623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9628 ;;Total ram usage:        0 bytes
  9629 ;; Hardware stack levels used: 1
  9630 ;; Hardware stack levels required when called: 3
  9631 ;; This function calls:
  9632 ;;		Nothing
  9633 ;; This function is called by:
  9634 ;;		_fputc
  9635 ;; This function uses a non-reentrant model
  9636 ;;
  9637                           
  9638                           	psect	text38
  9639   004168                     __ptext38:
  9640                           	callstack 0
  9641   004168                     _putch:
  9642                           	callstack 21
  9643   004168  0012               	return		;funcret
  9644   00416A                     __end_of_putch:
  9645                           	callstack 0
  9646                           
  9647 ;; *************** function _abs *****************
  9648 ;; Defined at:
  9649 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  9650 ;; Parameters:    Size  Location     Type
  9651 ;;  a               2   18[BANK0 ] int 
  9652 ;; Auto vars:     Size  Location     Type
  9653 ;;		None
  9654 ;; Return value:  Size  Location     Type
  9655 ;;                  2   18[BANK0 ] int 
  9656 ;; Registers used:
  9657 ;;		wreg, status,2, status,0
  9658 ;; Tracked objects:
  9659 ;;		On entry : 0/0
  9660 ;;		On exit  : 0/0
  9661 ;;		Unchanged: 0/0
  9662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9663 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9665 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9666 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9667 ;;Total ram usage:        4 bytes
  9668 ;; Hardware stack levels used: 1
  9669 ;; Hardware stack levels required when called: 3
  9670 ;; This function calls:
  9671 ;;		Nothing
  9672 ;; This function is called by:
  9673 ;;		_dtoa
  9674 ;; This function uses a non-reentrant model
  9675 ;;
  9676                           
  9677                           	psect	text39
  9678   003EA2                     __ptext39:
  9679                           	callstack 0
  9680   003EA2                     _abs:
  9681                           	callstack 21
  9682   003EA2  0100               	movlb	0	; () banked
  9683   003EA4  BF73               	btfsc	(abs@a+1)& (0+255),7,b
  9684   003EA6  EF5F  F01F         	goto	u3920
  9685   003EAA  5173               	movf	(abs@a+1)& (0+255),w,b
  9686   003EAC  E106               	bnz	u3921
  9687   003EAE  0572               	decf	abs@a& (0+255),w,b
  9688   003EB0  B0D8               	btfsc	status,0,c
  9689   003EB2  EF5D  F01F         	goto	u3921
  9690   003EB6  EF5F  F01F         	goto	u3920
  9691   003EBA                     u3921:
  9692   003EBA  EF6D  F01F         	goto	l1392
  9693   003EBE                     u3920:
  9694   003EBE                     
  9695                           ; BSR set to: 0
  9696   003EBE  C072  F074         	movff	abs@a,??_abs
  9697   003EC2  C073  F075         	movff	abs@a+1,??_abs+1
  9698   003EC6  1F74               	comf	??_abs& (0+255),f,b
  9699   003EC8  1F75               	comf	(??_abs+1)& (0+255),f,b
  9700   003ECA  4B74               	infsnz	??_abs& (0+255),f,b
  9701   003ECC  2B75               	incf	(??_abs+1)& (0+255),f,b
  9702   003ECE  C074  F072         	movff	??_abs,?_abs
  9703   003ED2  C075  F073         	movff	??_abs+1,?_abs+1
  9704   003ED6  EF71  F01F         	goto	l1395
  9705   003EDA                     l1392:
  9706                           
  9707                           ; BSR set to: 0
  9708   003EDA  C072  F072         	movff	abs@a,?_abs
  9709   003EDE  C073  F073         	movff	abs@a+1,?_abs+1
  9710   003EE2                     l1395:
  9711                           
  9712                           ; BSR set to: 0
  9713   003EE2  0012               	return		;funcret
  9714   003EE4                     __end_of_abs:
  9715                           	callstack 0
  9716                           
  9717 ;; *************** function ___aomod *****************
  9718 ;; Defined at:
  9719 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  9720 ;; Parameters:    Size  Location     Type
  9721 ;;  dividend        8    0[BANK0 ] long long 
  9722 ;;  divisor         8    8[BANK0 ] long long 
  9723 ;; Auto vars:     Size  Location     Type
  9724 ;;  sign            1   17[BANK0 ] unsigned char 
  9725 ;;  counter         1   16[BANK0 ] unsigned char 
  9726 ;; Return value:  Size  Location     Type
  9727 ;;                  8    0[BANK0 ] long long 
  9728 ;; Registers used:
  9729 ;;		wreg, status,2, status,0
  9730 ;; Tracked objects:
  9731 ;;		On entry : 0/0
  9732 ;;		On exit  : 0/0
  9733 ;;		Unchanged: 0/0
  9734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9735 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9736 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9738 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9739 ;;Total ram usage:       18 bytes
  9740 ;; Hardware stack levels used: 1
  9741 ;; Hardware stack levels required when called: 3
  9742 ;; This function calls:
  9743 ;;		Nothing
  9744 ;; This function is called by:
  9745 ;;		_dtoa
  9746 ;; This function uses a non-reentrant model
  9747 ;;
  9748                           
  9749                           	psect	text40
  9750   002D4E                     __ptext40:
  9751                           	callstack 0
  9752   002D4E                     ___aomod:
  9753                           	callstack 21
  9754   002D4E  0E00               	movlw	0
  9755   002D50  0100               	movlb	0	; () banked
  9756   002D52  6F71               	movwf	___aomod@sign& (0+255),b
  9757   002D54                     
  9758                           ; BSR set to: 0
  9759   002D54  BF67               	btfsc	(___aomod@dividend+7)& (0+255),7,b
  9760   002D56  EFB1  F016         	goto	u3840
  9761   002D5A  EFAF  F016         	goto	u3841
  9762   002D5E                     u3841:
  9763   002D5E  EFC3  F016         	goto	l3954
  9764   002D62                     u3840:
  9765   002D62                     
  9766                           ; BSR set to: 0
  9767   002D62  1F67               	comf	(___aomod@dividend+7)& (0+255),f,b
  9768   002D64  1F66               	comf	(___aomod@dividend+6)& (0+255),f,b
  9769   002D66  1F65               	comf	(___aomod@dividend+5)& (0+255),f,b
  9770   002D68  1F64               	comf	(___aomod@dividend+4)& (0+255),f,b
  9771   002D6A  1F63               	comf	(___aomod@dividend+3)& (0+255),f,b
  9772   002D6C  1F62               	comf	(___aomod@dividend+2)& (0+255),f,b
  9773   002D6E  1F61               	comf	(___aomod@dividend+1)& (0+255),f,b
  9774   002D70  6D60               	negf	___aomod@dividend& (0+255),b
  9775   002D72  0E00               	movlw	0
  9776   002D74  2361               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  9777   002D76  2362               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  9778   002D78  2363               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  9779   002D7A  2364               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  9780   002D7C  2365               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  9781   002D7E  2366               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  9782   002D80  2367               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  9783   002D82                     
  9784                           ; BSR set to: 0
  9785   002D82  0E01               	movlw	1
  9786   002D84  6F71               	movwf	___aomod@sign& (0+255),b
  9787   002D86                     l3954:
  9788                           
  9789                           ; BSR set to: 0
  9790   002D86  BF6F               	btfsc	(___aomod@divisor+7)& (0+255),7,b
  9791   002D88  EFCA  F016         	goto	u3850
  9792   002D8C  EFC8  F016         	goto	u3851
  9793   002D90                     u3851:
  9794   002D90  EFDA  F016         	goto	l3958
  9795   002D94                     u3850:
  9796   002D94                     
  9797                           ; BSR set to: 0
  9798   002D94  1F6F               	comf	(___aomod@divisor+7)& (0+255),f,b
  9799   002D96  1F6E               	comf	(___aomod@divisor+6)& (0+255),f,b
  9800   002D98  1F6D               	comf	(___aomod@divisor+5)& (0+255),f,b
  9801   002D9A  1F6C               	comf	(___aomod@divisor+4)& (0+255),f,b
  9802   002D9C  1F6B               	comf	(___aomod@divisor+3)& (0+255),f,b
  9803   002D9E  1F6A               	comf	(___aomod@divisor+2)& (0+255),f,b
  9804   002DA0  1F69               	comf	(___aomod@divisor+1)& (0+255),f,b
  9805   002DA2  6D68               	negf	___aomod@divisor& (0+255),b
  9806   002DA4  0E00               	movlw	0
  9807   002DA6  2369               	addwfc	(___aomod@divisor+1)& (0+255),f,b
  9808   002DA8  236A               	addwfc	(___aomod@divisor+2)& (0+255),f,b
  9809   002DAA  236B               	addwfc	(___aomod@divisor+3)& (0+255),f,b
  9810   002DAC  236C               	addwfc	(___aomod@divisor+4)& (0+255),f,b
  9811   002DAE  236D               	addwfc	(___aomod@divisor+5)& (0+255),f,b
  9812   002DB0  236E               	addwfc	(___aomod@divisor+6)& (0+255),f,b
  9813   002DB2  236F               	addwfc	(___aomod@divisor+7)& (0+255),f,b
  9814   002DB4                     l3958:
  9815                           
  9816                           ; BSR set to: 0
  9817   002DB4  5168               	movf	___aomod@divisor& (0+255),w,b
  9818   002DB6  1169               	iorwf	(___aomod@divisor+1)& (0+255),w,b
  9819   002DB8  116A               	iorwf	(___aomod@divisor+2)& (0+255),w,b
  9820   002DBA  116B               	iorwf	(___aomod@divisor+3)& (0+255),w,b
  9821   002DBC  116C               	iorwf	(___aomod@divisor+4)& (0+255),w,b
  9822   002DBE  116D               	iorwf	(___aomod@divisor+5)& (0+255),w,b
  9823   002DC0  116E               	iorwf	(___aomod@divisor+6)& (0+255),w,b
  9824   002DC2  116F               	iorwf	(___aomod@divisor+7)& (0+255),w,b
  9825   002DC4  B4D8               	btfsc	status,2,c
  9826   002DC6  EFE7  F016         	goto	u3861
  9827   002DCA  EFE9  F016         	goto	u3860
  9828   002DCE                     u3861:
  9829   002DCE  EF31  F017         	goto	l3974
  9830   002DD2                     u3860:
  9831   002DD2                     
  9832                           ; BSR set to: 0
  9833   002DD2  0E01               	movlw	1
  9834   002DD4  6F70               	movwf	___aomod@counter& (0+255),b
  9835   002DD6  EFF7  F016         	goto	l3964
  9836   002DDA                     l3962:
  9837                           
  9838                           ; BSR set to: 0
  9839   002DDA  90D8               	bcf	status,0,c
  9840   002DDC  3768               	rlcf	___aomod@divisor& (0+255),f,b
  9841   002DDE  3769               	rlcf	(___aomod@divisor+1)& (0+255),f,b
  9842   002DE0  376A               	rlcf	(___aomod@divisor+2)& (0+255),f,b
  9843   002DE2  376B               	rlcf	(___aomod@divisor+3)& (0+255),f,b
  9844   002DE4  376C               	rlcf	(___aomod@divisor+4)& (0+255),f,b
  9845   002DE6  376D               	rlcf	(___aomod@divisor+5)& (0+255),f,b
  9846   002DE8  376E               	rlcf	(___aomod@divisor+6)& (0+255),f,b
  9847   002DEA  376F               	rlcf	(___aomod@divisor+7)& (0+255),f,b
  9848   002DEC  2B70               	incf	___aomod@counter& (0+255),f,b
  9849   002DEE                     l3964:
  9850                           
  9851                           ; BSR set to: 0
  9852   002DEE  AF6F               	btfss	(___aomod@divisor+7)& (0+255),7,b
  9853   002DF0  EFFC  F016         	goto	u3871
  9854   002DF4  EFFE  F016         	goto	u3870
  9855   002DF8                     u3871:
  9856   002DF8  EFED  F016         	goto	l3962
  9857   002DFC                     u3870:
  9858   002DFC                     l3966:
  9859                           
  9860                           ; BSR set to: 0
  9861   002DFC  5168               	movf	___aomod@divisor& (0+255),w,b
  9862   002DFE  5D60               	subwf	___aomod@dividend& (0+255),w,b
  9863   002E00  5169               	movf	(___aomod@divisor+1)& (0+255),w,b
  9864   002E02  5961               	subwfb	(___aomod@dividend+1)& (0+255),w,b
  9865   002E04  516A               	movf	(___aomod@divisor+2)& (0+255),w,b
  9866   002E06  5962               	subwfb	(___aomod@dividend+2)& (0+255),w,b
  9867   002E08  516B               	movf	(___aomod@divisor+3)& (0+255),w,b
  9868   002E0A  5963               	subwfb	(___aomod@dividend+3)& (0+255),w,b
  9869   002E0C  516C               	movf	(___aomod@divisor+4)& (0+255),w,b
  9870   002E0E  5964               	subwfb	(___aomod@dividend+4)& (0+255),w,b
  9871   002E10  516D               	movf	(___aomod@divisor+5)& (0+255),w,b
  9872   002E12  5965               	subwfb	(___aomod@dividend+5)& (0+255),w,b
  9873   002E14  516E               	movf	(___aomod@divisor+6)& (0+255),w,b
  9874   002E16  5966               	subwfb	(___aomod@dividend+6)& (0+255),w,b
  9875   002E18  516F               	movf	(___aomod@divisor+7)& (0+255),w,b
  9876   002E1A  5967               	subwfb	(___aomod@dividend+7)& (0+255),w,b
  9877   002E1C  A0D8               	btfss	status,0,c
  9878   002E1E  EF13  F017         	goto	u3881
  9879   002E22  EF15  F017         	goto	u3880
  9880   002E26                     u3881:
  9881   002E26  EF25  F017         	goto	l3970
  9882   002E2A                     u3880:
  9883   002E2A                     
  9884                           ; BSR set to: 0
  9885   002E2A  5168               	movf	___aomod@divisor& (0+255),w,b
  9886   002E2C  5F60               	subwf	___aomod@dividend& (0+255),f,b
  9887   002E2E  5169               	movf	(___aomod@divisor+1)& (0+255),w,b
  9888   002E30  5B61               	subwfb	(___aomod@dividend+1)& (0+255),f,b
  9889   002E32  516A               	movf	(___aomod@divisor+2)& (0+255),w,b
  9890   002E34  5B62               	subwfb	(___aomod@dividend+2)& (0+255),f,b
  9891   002E36  516B               	movf	(___aomod@divisor+3)& (0+255),w,b
  9892   002E38  5B63               	subwfb	(___aomod@dividend+3)& (0+255),f,b
  9893   002E3A  516C               	movf	(___aomod@divisor+4)& (0+255),w,b
  9894   002E3C  5B64               	subwfb	(___aomod@dividend+4)& (0+255),f,b
  9895   002E3E  516D               	movf	(___aomod@divisor+5)& (0+255),w,b
  9896   002E40  5B65               	subwfb	(___aomod@dividend+5)& (0+255),f,b
  9897   002E42  516E               	movf	(___aomod@divisor+6)& (0+255),w,b
  9898   002E44  5B66               	subwfb	(___aomod@dividend+6)& (0+255),f,b
  9899   002E46  516F               	movf	(___aomod@divisor+7)& (0+255),w,b
  9900   002E48  5B67               	subwfb	(___aomod@dividend+7)& (0+255),f,b
  9901   002E4A                     l3970:
  9902                           
  9903                           ; BSR set to: 0
  9904   002E4A  90D8               	bcf	status,0,c
  9905   002E4C  336F               	rrcf	(___aomod@divisor+7)& (0+255),f,b
  9906   002E4E  336E               	rrcf	(___aomod@divisor+6)& (0+255),f,b
  9907   002E50  336D               	rrcf	(___aomod@divisor+5)& (0+255),f,b
  9908   002E52  336C               	rrcf	(___aomod@divisor+4)& (0+255),f,b
  9909   002E54  336B               	rrcf	(___aomod@divisor+3)& (0+255),f,b
  9910   002E56  336A               	rrcf	(___aomod@divisor+2)& (0+255),f,b
  9911   002E58  3369               	rrcf	(___aomod@divisor+1)& (0+255),f,b
  9912   002E5A  3368               	rrcf	___aomod@divisor& (0+255),f,b
  9913   002E5C                     
  9914                           ; BSR set to: 0
  9915   002E5C  2F70               	decfsz	___aomod@counter& (0+255),f,b
  9916   002E5E  EFFE  F016         	goto	l3966
  9917   002E62                     l3974:
  9918                           
  9919                           ; BSR set to: 0
  9920   002E62  5171               	movf	___aomod@sign& (0+255),w,b
  9921   002E64  B4D8               	btfsc	status,2,c
  9922   002E66  EF37  F017         	goto	u3891
  9923   002E6A  EF39  F017         	goto	u3890
  9924   002E6E                     u3891:
  9925   002E6E  EF49  F017         	goto	l3978
  9926   002E72                     u3890:
  9927   002E72                     
  9928                           ; BSR set to: 0
  9929   002E72  1F67               	comf	(___aomod@dividend+7)& (0+255),f,b
  9930   002E74  1F66               	comf	(___aomod@dividend+6)& (0+255),f,b
  9931   002E76  1F65               	comf	(___aomod@dividend+5)& (0+255),f,b
  9932   002E78  1F64               	comf	(___aomod@dividend+4)& (0+255),f,b
  9933   002E7A  1F63               	comf	(___aomod@dividend+3)& (0+255),f,b
  9934   002E7C  1F62               	comf	(___aomod@dividend+2)& (0+255),f,b
  9935   002E7E  1F61               	comf	(___aomod@dividend+1)& (0+255),f,b
  9936   002E80  6D60               	negf	___aomod@dividend& (0+255),b
  9937   002E82  0E00               	movlw	0
  9938   002E84  2361               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  9939   002E86  2362               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  9940   002E88  2363               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  9941   002E8A  2364               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  9942   002E8C  2365               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  9943   002E8E  2366               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  9944   002E90  2367               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  9945   002E92                     l3978:
  9946                           
  9947                           ; BSR set to: 0
  9948   002E92  C060  F060         	movff	___aomod@dividend,?___aomod
  9949   002E96  C061  F061         	movff	___aomod@dividend+1,?___aomod+1
  9950   002E9A  C062  F062         	movff	___aomod@dividend+2,?___aomod+2
  9951   002E9E  C063  F063         	movff	___aomod@dividend+3,?___aomod+3
  9952   002EA2  C064  F064         	movff	___aomod@dividend+4,?___aomod+4
  9953   002EA6  C065  F065         	movff	___aomod@dividend+5,?___aomod+5
  9954   002EAA  C066  F066         	movff	___aomod@dividend+6,?___aomod+6
  9955   002EAE  C067  F067         	movff	___aomod@dividend+7,?___aomod+7
  9956   002EB2                     
  9957                           ; BSR set to: 0
  9958   002EB2  0012               	return		;funcret
  9959   002EB4                     __end_of___aomod:
  9960                           	callstack 0
  9961                           
  9962 ;; *************** function ___aodiv *****************
  9963 ;; Defined at:
  9964 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  9965 ;; Parameters:    Size  Location     Type
  9966 ;;  dividend        8    0[BANK0 ] long long 
  9967 ;;  divisor         8    8[BANK0 ] long long 
  9968 ;; Auto vars:     Size  Location     Type
  9969 ;;  quotient        8   18[BANK0 ] long long 
  9970 ;;  sign            1   17[BANK0 ] unsigned char 
  9971 ;;  counter         1   16[BANK0 ] unsigned char 
  9972 ;; Return value:  Size  Location     Type
  9973 ;;                  8    0[BANK0 ] long long 
  9974 ;; Registers used:
  9975 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9976 ;; Tracked objects:
  9977 ;;		On entry : 0/0
  9978 ;;		On exit  : 0/0
  9979 ;;		Unchanged: 0/0
  9980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9981 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9982 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9984 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9985 ;;Total ram usage:       26 bytes
  9986 ;; Hardware stack levels used: 1
  9987 ;; Hardware stack levels required when called: 3
  9988 ;; This function calls:
  9989 ;;		Nothing
  9990 ;; This function is called by:
  9991 ;;		_dtoa
  9992 ;; This function uses a non-reentrant model
  9993 ;;
  9994                           
  9995                           	psect	text41
  9996   002BC4                     __ptext41:
  9997                           	callstack 0
  9998   002BC4                     ___aodiv:
  9999                           	callstack 21
 10000   002BC4  0E00               	movlw	0
 10001   002BC6  0100               	movlb	0	; () banked
 10002   002BC8  6F71               	movwf	___aodiv@sign& (0+255),b
 10003   002BCA                     
 10004                           ; BSR set to: 0
 10005   002BCA  BF6F               	btfsc	(___aodiv@divisor+7)& (0+255),7,b
 10006   002BCC  EFEC  F015         	goto	u3770
 10007   002BD0  EFEA  F015         	goto	u3771
 10008   002BD4                     u3771:
 10009   002BD4  EFFE  F015         	goto	l3910
 10010   002BD8                     u3770:
 10011   002BD8                     
 10012                           ; BSR set to: 0
 10013   002BD8  1F6F               	comf	(___aodiv@divisor+7)& (0+255),f,b
 10014   002BDA  1F6E               	comf	(___aodiv@divisor+6)& (0+255),f,b
 10015   002BDC  1F6D               	comf	(___aodiv@divisor+5)& (0+255),f,b
 10016   002BDE  1F6C               	comf	(___aodiv@divisor+4)& (0+255),f,b
 10017   002BE0  1F6B               	comf	(___aodiv@divisor+3)& (0+255),f,b
 10018   002BE2  1F6A               	comf	(___aodiv@divisor+2)& (0+255),f,b
 10019   002BE4  1F69               	comf	(___aodiv@divisor+1)& (0+255),f,b
 10020   002BE6  6D68               	negf	___aodiv@divisor& (0+255),b
 10021   002BE8  0E00               	movlw	0
 10022   002BEA  2369               	addwfc	(___aodiv@divisor+1)& (0+255),f,b
 10023   002BEC  236A               	addwfc	(___aodiv@divisor+2)& (0+255),f,b
 10024   002BEE  236B               	addwfc	(___aodiv@divisor+3)& (0+255),f,b
 10025   002BF0  236C               	addwfc	(___aodiv@divisor+4)& (0+255),f,b
 10026   002BF2  236D               	addwfc	(___aodiv@divisor+5)& (0+255),f,b
 10027   002BF4  236E               	addwfc	(___aodiv@divisor+6)& (0+255),f,b
 10028   002BF6  236F               	addwfc	(___aodiv@divisor+7)& (0+255),f,b
 10029   002BF8                     
 10030                           ; BSR set to: 0
 10031   002BF8  0E01               	movlw	1
 10032   002BFA  6F71               	movwf	___aodiv@sign& (0+255),b
 10033   002BFC                     l3910:
 10034                           
 10035                           ; BSR set to: 0
 10036   002BFC  BF67               	btfsc	(___aodiv@dividend+7)& (0+255),7,b
 10037   002BFE  EF05  F016         	goto	u3780
 10038   002C02  EF03  F016         	goto	u3781
 10039   002C06                     u3781:
 10040   002C06  EF17  F016         	goto	l3916
 10041   002C0A                     u3780:
 10042   002C0A                     
 10043                           ; BSR set to: 0
 10044   002C0A  1F67               	comf	(___aodiv@dividend+7)& (0+255),f,b
 10045   002C0C  1F66               	comf	(___aodiv@dividend+6)& (0+255),f,b
 10046   002C0E  1F65               	comf	(___aodiv@dividend+5)& (0+255),f,b
 10047   002C10  1F64               	comf	(___aodiv@dividend+4)& (0+255),f,b
 10048   002C12  1F63               	comf	(___aodiv@dividend+3)& (0+255),f,b
 10049   002C14  1F62               	comf	(___aodiv@dividend+2)& (0+255),f,b
 10050   002C16  1F61               	comf	(___aodiv@dividend+1)& (0+255),f,b
 10051   002C18  6D60               	negf	___aodiv@dividend& (0+255),b
 10052   002C1A  0E00               	movlw	0
 10053   002C1C  2361               	addwfc	(___aodiv@dividend+1)& (0+255),f,b
 10054   002C1E  2362               	addwfc	(___aodiv@dividend+2)& (0+255),f,b
 10055   002C20  2363               	addwfc	(___aodiv@dividend+3)& (0+255),f,b
 10056   002C22  2364               	addwfc	(___aodiv@dividend+4)& (0+255),f,b
 10057   002C24  2365               	addwfc	(___aodiv@dividend+5)& (0+255),f,b
 10058   002C26  2366               	addwfc	(___aodiv@dividend+6)& (0+255),f,b
 10059   002C28  2367               	addwfc	(___aodiv@dividend+7)& (0+255),f,b
 10060   002C2A                     
 10061                           ; BSR set to: 0
 10062   002C2A  0E01               	movlw	1
 10063   002C2C  1B71               	xorwf	___aodiv@sign& (0+255),f,b
 10064   002C2E                     l3916:
 10065                           
 10066                           ; BSR set to: 0
 10067   002C2E  EE20  F072         	lfsr	2,___aodiv@quotient
 10068   002C32  0E07               	movlw	7
 10069   002C34                     u3791:
 10070   002C34  6ADE               	clrf	postinc2,c
 10071   002C36  06E8               	decf	wreg,f,c
 10072   002C38  E2FD               	bc	u3791
 10073   002C3A                     
 10074                           ; BSR set to: 0
 10075   002C3A  5168               	movf	___aodiv@divisor& (0+255),w,b
 10076   002C3C  1169               	iorwf	(___aodiv@divisor+1)& (0+255),w,b
 10077   002C3E  116A               	iorwf	(___aodiv@divisor+2)& (0+255),w,b
 10078   002C40  116B               	iorwf	(___aodiv@divisor+3)& (0+255),w,b
 10079   002C42  116C               	iorwf	(___aodiv@divisor+4)& (0+255),w,b
 10080   002C44  116D               	iorwf	(___aodiv@divisor+5)& (0+255),w,b
 10081   002C46  116E               	iorwf	(___aodiv@divisor+6)& (0+255),w,b
 10082   002C48  116F               	iorwf	(___aodiv@divisor+7)& (0+255),w,b
 10083   002C4A  B4D8               	btfsc	status,2,c
 10084   002C4C  EF2A  F016         	goto	u3801
 10085   002C50  EF2C  F016         	goto	u3800
 10086   002C54                     u3801:
 10087   002C54  EF7E  F016         	goto	l3938
 10088   002C58                     u3800:
 10089   002C58                     
 10090                           ; BSR set to: 0
 10091   002C58  0E01               	movlw	1
 10092   002C5A  6F70               	movwf	___aodiv@counter& (0+255),b
 10093   002C5C  EF3A  F016         	goto	l3924
 10094   002C60                     l3922:
 10095                           
 10096                           ; BSR set to: 0
 10097   002C60  90D8               	bcf	status,0,c
 10098   002C62  3768               	rlcf	___aodiv@divisor& (0+255),f,b
 10099   002C64  3769               	rlcf	(___aodiv@divisor+1)& (0+255),f,b
 10100   002C66  376A               	rlcf	(___aodiv@divisor+2)& (0+255),f,b
 10101   002C68  376B               	rlcf	(___aodiv@divisor+3)& (0+255),f,b
 10102   002C6A  376C               	rlcf	(___aodiv@divisor+4)& (0+255),f,b
 10103   002C6C  376D               	rlcf	(___aodiv@divisor+5)& (0+255),f,b
 10104   002C6E  376E               	rlcf	(___aodiv@divisor+6)& (0+255),f,b
 10105   002C70  376F               	rlcf	(___aodiv@divisor+7)& (0+255),f,b
 10106   002C72  2B70               	incf	___aodiv@counter& (0+255),f,b
 10107   002C74                     l3924:
 10108                           
 10109                           ; BSR set to: 0
 10110   002C74  AF6F               	btfss	(___aodiv@divisor+7)& (0+255),7,b
 10111   002C76  EF3F  F016         	goto	u3811
 10112   002C7A  EF41  F016         	goto	u3810
 10113   002C7E                     u3811:
 10114   002C7E  EF30  F016         	goto	l3922
 10115   002C82                     u3810:
 10116   002C82                     l3926:
 10117                           
 10118                           ; BSR set to: 0
 10119   002C82  90D8               	bcf	status,0,c
 10120   002C84  3772               	rlcf	___aodiv@quotient& (0+255),f,b
 10121   002C86  3773               	rlcf	(___aodiv@quotient+1)& (0+255),f,b
 10122   002C88  3774               	rlcf	(___aodiv@quotient+2)& (0+255),f,b
 10123   002C8A  3775               	rlcf	(___aodiv@quotient+3)& (0+255),f,b
 10124   002C8C  3776               	rlcf	(___aodiv@quotient+4)& (0+255),f,b
 10125   002C8E  3777               	rlcf	(___aodiv@quotient+5)& (0+255),f,b
 10126   002C90  3778               	rlcf	(___aodiv@quotient+6)& (0+255),f,b
 10127   002C92  3779               	rlcf	(___aodiv@quotient+7)& (0+255),f,b
 10128   002C94                     
 10129                           ; BSR set to: 0
 10130   002C94  5168               	movf	___aodiv@divisor& (0+255),w,b
 10131   002C96  5D60               	subwf	___aodiv@dividend& (0+255),w,b
 10132   002C98  5169               	movf	(___aodiv@divisor+1)& (0+255),w,b
 10133   002C9A  5961               	subwfb	(___aodiv@dividend+1)& (0+255),w,b
 10134   002C9C  516A               	movf	(___aodiv@divisor+2)& (0+255),w,b
 10135   002C9E  5962               	subwfb	(___aodiv@dividend+2)& (0+255),w,b
 10136   002CA0  516B               	movf	(___aodiv@divisor+3)& (0+255),w,b
 10137   002CA2  5963               	subwfb	(___aodiv@dividend+3)& (0+255),w,b
 10138   002CA4  516C               	movf	(___aodiv@divisor+4)& (0+255),w,b
 10139   002CA6  5964               	subwfb	(___aodiv@dividend+4)& (0+255),w,b
 10140   002CA8  516D               	movf	(___aodiv@divisor+5)& (0+255),w,b
 10141   002CAA  5965               	subwfb	(___aodiv@dividend+5)& (0+255),w,b
 10142   002CAC  516E               	movf	(___aodiv@divisor+6)& (0+255),w,b
 10143   002CAE  5966               	subwfb	(___aodiv@dividend+6)& (0+255),w,b
 10144   002CB0  516F               	movf	(___aodiv@divisor+7)& (0+255),w,b
 10145   002CB2  5967               	subwfb	(___aodiv@dividend+7)& (0+255),w,b
 10146   002CB4  A0D8               	btfss	status,0,c
 10147   002CB6  EF5F  F016         	goto	u3821
 10148   002CBA  EF61  F016         	goto	u3820
 10149   002CBE                     u3821:
 10150   002CBE  EF72  F016         	goto	l3934
 10151   002CC2                     u3820:
 10152   002CC2                     
 10153                           ; BSR set to: 0
 10154   002CC2  5168               	movf	___aodiv@divisor& (0+255),w,b
 10155   002CC4  5F60               	subwf	___aodiv@dividend& (0+255),f,b
 10156   002CC6  5169               	movf	(___aodiv@divisor+1)& (0+255),w,b
 10157   002CC8  5B61               	subwfb	(___aodiv@dividend+1)& (0+255),f,b
 10158   002CCA  516A               	movf	(___aodiv@divisor+2)& (0+255),w,b
 10159   002CCC  5B62               	subwfb	(___aodiv@dividend+2)& (0+255),f,b
 10160   002CCE  516B               	movf	(___aodiv@divisor+3)& (0+255),w,b
 10161   002CD0  5B63               	subwfb	(___aodiv@dividend+3)& (0+255),f,b
 10162   002CD2  516C               	movf	(___aodiv@divisor+4)& (0+255),w,b
 10163   002CD4  5B64               	subwfb	(___aodiv@dividend+4)& (0+255),f,b
 10164   002CD6  516D               	movf	(___aodiv@divisor+5)& (0+255),w,b
 10165   002CD8  5B65               	subwfb	(___aodiv@dividend+5)& (0+255),f,b
 10166   002CDA  516E               	movf	(___aodiv@divisor+6)& (0+255),w,b
 10167   002CDC  5B66               	subwfb	(___aodiv@dividend+6)& (0+255),f,b
 10168   002CDE  516F               	movf	(___aodiv@divisor+7)& (0+255),w,b
 10169   002CE0  5B67               	subwfb	(___aodiv@dividend+7)& (0+255),f,b
 10170   002CE2                     
 10171                           ; BSR set to: 0
 10172   002CE2  8172               	bsf	___aodiv@quotient& (0+255),0,b
 10173   002CE4                     l3934:
 10174                           
 10175                           ; BSR set to: 0
 10176   002CE4  90D8               	bcf	status,0,c
 10177   002CE6  336F               	rrcf	(___aodiv@divisor+7)& (0+255),f,b
 10178   002CE8  336E               	rrcf	(___aodiv@divisor+6)& (0+255),f,b
 10179   002CEA  336D               	rrcf	(___aodiv@divisor+5)& (0+255),f,b
 10180   002CEC  336C               	rrcf	(___aodiv@divisor+4)& (0+255),f,b
 10181   002CEE  336B               	rrcf	(___aodiv@divisor+3)& (0+255),f,b
 10182   002CF0  336A               	rrcf	(___aodiv@divisor+2)& (0+255),f,b
 10183   002CF2  3369               	rrcf	(___aodiv@divisor+1)& (0+255),f,b
 10184   002CF4  3368               	rrcf	___aodiv@divisor& (0+255),f,b
 10185   002CF6                     
 10186                           ; BSR set to: 0
 10187   002CF6  2F70               	decfsz	___aodiv@counter& (0+255),f,b
 10188   002CF8  EF41  F016         	goto	l3926
 10189   002CFC                     l3938:
 10190                           
 10191                           ; BSR set to: 0
 10192   002CFC  5171               	movf	___aodiv@sign& (0+255),w,b
 10193   002CFE  B4D8               	btfsc	status,2,c
 10194   002D00  EF84  F016         	goto	u3831
 10195   002D04  EF86  F016         	goto	u3830
 10196   002D08                     u3831:
 10197   002D08  EF96  F016         	goto	l3942
 10198   002D0C                     u3830:
 10199   002D0C                     
 10200                           ; BSR set to: 0
 10201   002D0C  1F79               	comf	(___aodiv@quotient+7)& (0+255),f,b
 10202   002D0E  1F78               	comf	(___aodiv@quotient+6)& (0+255),f,b
 10203   002D10  1F77               	comf	(___aodiv@quotient+5)& (0+255),f,b
 10204   002D12  1F76               	comf	(___aodiv@quotient+4)& (0+255),f,b
 10205   002D14  1F75               	comf	(___aodiv@quotient+3)& (0+255),f,b
 10206   002D16  1F74               	comf	(___aodiv@quotient+2)& (0+255),f,b
 10207   002D18  1F73               	comf	(___aodiv@quotient+1)& (0+255),f,b
 10208   002D1A  6D72               	negf	___aodiv@quotient& (0+255),b
 10209   002D1C  0E00               	movlw	0
 10210   002D1E  2373               	addwfc	(___aodiv@quotient+1)& (0+255),f,b
 10211   002D20  2374               	addwfc	(___aodiv@quotient+2)& (0+255),f,b
 10212   002D22  2375               	addwfc	(___aodiv@quotient+3)& (0+255),f,b
 10213   002D24  2376               	addwfc	(___aodiv@quotient+4)& (0+255),f,b
 10214   002D26  2377               	addwfc	(___aodiv@quotient+5)& (0+255),f,b
 10215   002D28  2378               	addwfc	(___aodiv@quotient+6)& (0+255),f,b
 10216   002D2A  2379               	addwfc	(___aodiv@quotient+7)& (0+255),f,b
 10217   002D2C                     l3942:
 10218                           
 10219                           ; BSR set to: 0
 10220   002D2C  C072  F060         	movff	___aodiv@quotient,?___aodiv
 10221   002D30  C073  F061         	movff	___aodiv@quotient+1,?___aodiv+1
 10222   002D34  C074  F062         	movff	___aodiv@quotient+2,?___aodiv+2
 10223   002D38  C075  F063         	movff	___aodiv@quotient+3,?___aodiv+3
 10224   002D3C  C076  F064         	movff	___aodiv@quotient+4,?___aodiv+4
 10225   002D40  C077  F065         	movff	___aodiv@quotient+5,?___aodiv+5
 10226   002D44  C078  F066         	movff	___aodiv@quotient+6,?___aodiv+6
 10227   002D48  C079  F067         	movff	___aodiv@quotient+7,?___aodiv+7
 10228   002D4C                     
 10229                           ; BSR set to: 0
 10230   002D4C  0012               	return		;funcret
 10231   002D4E                     __end_of___aodiv:
 10232                           	callstack 0
 10233                           
 10234 ;; *************** function ___xxtofl *****************
 10235 ;; Defined at:
 10236 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
 10237 ;; Parameters:    Size  Location     Type
 10238 ;;  sign            1    wreg     unsigned char 
 10239 ;;  val             4    0[BANK0 ] long 
 10240 ;; Auto vars:     Size  Location     Type
 10241 ;;  sign            1    8[BANK0 ] unsigned char 
 10242 ;;  arg             4   10[BANK0 ] unsigned long 
 10243 ;;  exp             1    9[BANK0 ] unsigned char 
 10244 ;; Return value:  Size  Location     Type
 10245 ;;                  4    0[BANK0 ] unsigned char 
 10246 ;; Registers used:
 10247 ;;		wreg, status,2, status,0
 10248 ;; Tracked objects:
 10249 ;;		On entry : 0/0
 10250 ;;		On exit  : 0/0
 10251 ;;		Unchanged: 0/0
 10252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10253 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10254 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10255 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10256 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10257 ;;Total ram usage:       14 bytes
 10258 ;; Hardware stack levels used: 1
 10259 ;; Hardware stack levels required when called: 3
 10260 ;; This function calls:
 10261 ;;		Nothing
 10262 ;; This function is called by:
 10263 ;;		_ftoa
 10264 ;;		_strtof
 10265 ;;		_parse_MRF_message
 10266 ;; This function uses a non-reentrant model
 10267 ;;
 10268                           
 10269                           	psect	text42
 10270   0026B8                     __ptext42:
 10271                           	callstack 0
 10272   0026B8                     ___xxtofl:
 10273                           	callstack 23
 10274                           
 10275                           ; BSR set to: 0
 10276                           ;incstack = 0
 10277                           ;___xxtofl@sign stored from wreg
 10278   0026B8  0100               	movlb	0	; () banked
 10279   0026BA  6F68               	movwf	___xxtofl@sign& (0+255),b
 10280   0026BC  0100               	movlb	0	; () banked
 10281   0026BE  5168               	movf	___xxtofl@sign& (0+255),w,b
 10282   0026C0  B4D8               	btfsc	status,2,c
 10283   0026C2  EF65  F013         	goto	u4601
 10284   0026C6  EF67  F013         	goto	u4600
 10285   0026CA                     u4601:
 10286   0026CA  EF89  F013         	goto	l1243
 10287   0026CE                     u4600:
 10288   0026CE                     
 10289                           ; BSR set to: 0
 10290   0026CE  BF63               	btfsc	(___xxtofl@val+3)& (0+255),7,b
 10291   0026D0  EF6E  F013         	goto	u4610
 10292   0026D4  EF6C  F013         	goto	u4611
 10293   0026D8                     u4611:
 10294   0026D8  EF89  F013         	goto	l1243
 10295   0026DC                     u4610:
 10296   0026DC                     
 10297                           ; BSR set to: 0
 10298   0026DC  C060  F064         	movff	___xxtofl@val,??___xxtofl
 10299   0026E0  C061  F065         	movff	___xxtofl@val+1,??___xxtofl+1
 10300   0026E4  C062  F066         	movff	___xxtofl@val+2,??___xxtofl+2
 10301   0026E8  C063  F067         	movff	___xxtofl@val+3,??___xxtofl+3
 10302   0026EC  1F64               	comf	??___xxtofl& (0+255),f,b
 10303   0026EE  1F65               	comf	(??___xxtofl+1)& (0+255),f,b
 10304   0026F0  1F66               	comf	(??___xxtofl+2)& (0+255),f,b
 10305   0026F2  1F67               	comf	(??___xxtofl+3)& (0+255),f,b
 10306   0026F4  2B64               	incf	??___xxtofl& (0+255),f,b
 10307   0026F6  0E00               	movlw	0
 10308   0026F8  2365               	addwfc	(??___xxtofl+1)& (0+255),f,b
 10309   0026FA  2366               	addwfc	(??___xxtofl+2)& (0+255),f,b
 10310   0026FC  2367               	addwfc	(??___xxtofl+3)& (0+255),f,b
 10311   0026FE  C064  F06A         	movff	??___xxtofl,___xxtofl@arg
 10312   002702  C065  F06B         	movff	??___xxtofl+1,___xxtofl@arg+1
 10313   002706  C066  F06C         	movff	??___xxtofl+2,___xxtofl@arg+2
 10314   00270A  C067  F06D         	movff	??___xxtofl+3,___xxtofl@arg+3
 10315   00270E  EF91  F013         	goto	l4396
 10316   002712                     l1243:
 10317                           
 10318                           ; BSR set to: 0
 10319   002712  C060  F06A         	movff	___xxtofl@val,___xxtofl@arg
 10320   002716  C061  F06B         	movff	___xxtofl@val+1,___xxtofl@arg+1
 10321   00271A  C062  F06C         	movff	___xxtofl@val+2,___xxtofl@arg+2
 10322   00271E  C063  F06D         	movff	___xxtofl@val+3,___xxtofl@arg+3
 10323   002722                     l4396:
 10324                           
 10325                           ; BSR set to: 0
 10326   002722  5160               	movf	___xxtofl@val& (0+255),w,b
 10327   002724  1161               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 10328   002726  1162               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 10329   002728  1163               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 10330   00272A  A4D8               	btfss	status,2,c
 10331   00272C  EF9A  F013         	goto	u4621
 10332   002730  EF9C  F013         	goto	u4620
 10333   002734                     u4621:
 10334   002734  EFA6  F013         	goto	l4402
 10335   002738                     u4620:
 10336   002738                     
 10337                           ; BSR set to: 0
 10338   002738  0E00               	movlw	0
 10339   00273A  6F60               	movwf	?___xxtofl& (0+255),b
 10340   00273C  0E00               	movlw	0
 10341   00273E  6F61               	movwf	(?___xxtofl+1)& (0+255),b
 10342   002740  0E00               	movlw	0
 10343   002742  6F62               	movwf	(?___xxtofl+2)& (0+255),b
 10344   002744  0E00               	movlw	0
 10345   002746  6F63               	movwf	(?___xxtofl+3)& (0+255),b
 10346   002748  EF37  F014         	goto	l1246
 10347   00274C                     l4402:
 10348                           
 10349                           ; BSR set to: 0
 10350   00274C  0E96               	movlw	150
 10351   00274E  6F69               	movwf	___xxtofl@exp& (0+255),b
 10352   002750  EFB0  F013         	goto	l4406
 10353   002754                     l4404:
 10354                           
 10355                           ; BSR set to: 0
 10356   002754  2B69               	incf	___xxtofl@exp& (0+255),f,b
 10357   002756  90D8               	bcf	status,0,c
 10358   002758  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 10359   00275A  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 10360   00275C  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 10361   00275E  336A               	rrcf	___xxtofl@arg& (0+255),f,b
 10362   002760                     l4406:
 10363                           
 10364                           ; BSR set to: 0
 10365   002760  0E00               	movlw	0
 10366   002762  156A               	andwf	___xxtofl@arg& (0+255),w,b
 10367   002764  6F64               	movwf	??___xxtofl& (0+255),b
 10368   002766  0E00               	movlw	0
 10369   002768  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 10370   00276A  6F65               	movwf	(??___xxtofl+1)& (0+255),b
 10371   00276C  0E00               	movlw	0
 10372   00276E  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 10373   002770  6F66               	movwf	(??___xxtofl+2)& (0+255),b
 10374   002772  0EFE               	movlw	254
 10375   002774  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 10376   002776  6F67               	movwf	(??___xxtofl+3)& (0+255),b
 10377   002778  5164               	movf	??___xxtofl& (0+255),w,b
 10378   00277A  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
 10379   00277C  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
 10380   00277E  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
 10381   002780  A4D8               	btfss	status,2,c
 10382   002782  EFC5  F013         	goto	u4631
 10383   002786  EFC7  F013         	goto	u4630
 10384   00278A                     u4631:
 10385   00278A  EFAA  F013         	goto	l4404
 10386   00278E                     u4630:
 10387   00278E  EFD5  F013         	goto	l1250
 10388   002792                     l4408:
 10389                           
 10390                           ; BSR set to: 0
 10391   002792  2B69               	incf	___xxtofl@exp& (0+255),f,b
 10392   002794                     
 10393                           ; BSR set to: 0
 10394   002794  0E01               	movlw	1
 10395   002796  276A               	addwf	___xxtofl@arg& (0+255),f,b
 10396   002798  0E00               	movlw	0
 10397   00279A  236B               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 10398   00279C  236C               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 10399   00279E  236D               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 10400   0027A0                     
 10401                           ; BSR set to: 0
 10402   0027A0  90D8               	bcf	status,0,c
 10403   0027A2  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 10404   0027A4  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 10405   0027A6  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 10406   0027A8  336A               	rrcf	___xxtofl@arg& (0+255),f,b
 10407   0027AA                     l1250:
 10408                           
 10409                           ; BSR set to: 0
 10410   0027AA  0E00               	movlw	0
 10411   0027AC  156A               	andwf	___xxtofl@arg& (0+255),w,b
 10412   0027AE  6F64               	movwf	??___xxtofl& (0+255),b
 10413   0027B0  0E00               	movlw	0
 10414   0027B2  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 10415   0027B4  6F65               	movwf	(??___xxtofl+1)& (0+255),b
 10416   0027B6  0E00               	movlw	0
 10417   0027B8  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 10418   0027BA  6F66               	movwf	(??___xxtofl+2)& (0+255),b
 10419   0027BC  0EFF               	movlw	255
 10420   0027BE  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 10421   0027C0  6F67               	movwf	(??___xxtofl+3)& (0+255),b
 10422   0027C2  5164               	movf	??___xxtofl& (0+255),w,b
 10423   0027C4  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
 10424   0027C6  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
 10425   0027C8  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
 10426   0027CA  A4D8               	btfss	status,2,c
 10427   0027CC  EFEA  F013         	goto	u4641
 10428   0027D0  EFEC  F013         	goto	u4640
 10429   0027D4                     u4641:
 10430   0027D4  EFC9  F013         	goto	l4408
 10431   0027D8                     u4640:
 10432   0027D8  EFF4  F013         	goto	l4416
 10433   0027DC                     l4414:
 10434                           
 10435                           ; BSR set to: 0
 10436   0027DC  0769               	decf	___xxtofl@exp& (0+255),f,b
 10437   0027DE  90D8               	bcf	status,0,c
 10438   0027E0  376A               	rlcf	___xxtofl@arg& (0+255),f,b
 10439   0027E2  376B               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 10440   0027E4  376C               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 10441   0027E6  376D               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 10442   0027E8                     l4416:
 10443                           
 10444                           ; BSR set to: 0
 10445   0027E8  BF6C               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 10446   0027EA  EFF9  F013         	goto	u4651
 10447   0027EE  EFFB  F013         	goto	u4650
 10448   0027F2                     u4651:
 10449   0027F2  EF03  F014         	goto	l1257
 10450   0027F6                     u4650:
 10451   0027F6                     
 10452                           ; BSR set to: 0
 10453   0027F6  0E02               	movlw	2
 10454   0027F8  6169               	cpfslt	___xxtofl@exp& (0+255),b
 10455   0027FA  EF01  F014         	goto	u4661
 10456   0027FE  EF03  F014         	goto	u4660
 10457   002802                     u4661:
 10458   002802  EFEE  F013         	goto	l4414
 10459   002806                     u4660:
 10460   002806                     l1257:
 10461                           
 10462                           ; BSR set to: 0
 10463   002806  B169               	btfsc	___xxtofl@exp& (0+255),0,b
 10464   002808  EF08  F014         	goto	u4671
 10465   00280C  EF0A  F014         	goto	u4670
 10466   002810                     u4671:
 10467   002810  EF0B  F014         	goto	l4422
 10468   002814                     u4670:
 10469   002814                     
 10470                           ; BSR set to: 0
 10471   002814  9F6C               	bcf	(___xxtofl@arg+2)& (0+255),7,b
 10472   002816                     l4422:
 10473                           
 10474                           ; BSR set to: 0
 10475   002816  90D8               	bcf	status,0,c
 10476   002818  3369               	rrcf	___xxtofl@exp& (0+255),f,b
 10477   00281A                     
 10478                           ; BSR set to: 0
 10479   00281A  C069  F064         	movff	___xxtofl@exp,??___xxtofl
 10480   00281E  6B65               	clrf	(??___xxtofl+1)& (0+255),b
 10481   002820  6B66               	clrf	(??___xxtofl+2)& (0+255),b
 10482   002822  6B67               	clrf	(??___xxtofl+3)& (0+255),b
 10483   002824  C064  F067         	movff	??___xxtofl,??___xxtofl+3
 10484   002828  6B66               	clrf	(??___xxtofl+2)& (0+255),b
 10485   00282A  6B65               	clrf	(??___xxtofl+1)& (0+255),b
 10486   00282C  6B64               	clrf	??___xxtofl& (0+255),b
 10487   00282E  5164               	movf	??___xxtofl& (0+255),w,b
 10488   002830  136A               	iorwf	___xxtofl@arg& (0+255),f,b
 10489   002832  5165               	movf	(??___xxtofl+1)& (0+255),w,b
 10490   002834  136B               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 10491   002836  5166               	movf	(??___xxtofl+2)& (0+255),w,b
 10492   002838  136C               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 10493   00283A  5167               	movf	(??___xxtofl+3)& (0+255),w,b
 10494   00283C  136D               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 10495   00283E                     
 10496                           ; BSR set to: 0
 10497   00283E  5168               	movf	___xxtofl@sign& (0+255),w,b
 10498   002840  B4D8               	btfsc	status,2,c
 10499   002842  EF25  F014         	goto	u4681
 10500   002846  EF27  F014         	goto	u4680
 10501   00284A                     u4681:
 10502   00284A  EF2F  F014         	goto	l4432
 10503   00284E                     u4680:
 10504   00284E                     
 10505                           ; BSR set to: 0
 10506   00284E  BF63               	btfsc	(___xxtofl@val+3)& (0+255),7,b
 10507   002850  EF2E  F014         	goto	u4690
 10508   002854  EF2C  F014         	goto	u4691
 10509   002858                     u4691:
 10510   002858  EF2F  F014         	goto	l4432
 10511   00285C                     u4690:
 10512   00285C                     
 10513                           ; BSR set to: 0
 10514   00285C  8F6D               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 10515   00285E                     l4432:
 10516                           
 10517                           ; BSR set to: 0
 10518   00285E  C06A  F060         	movff	___xxtofl@arg,?___xxtofl
 10519   002862  C06B  F061         	movff	___xxtofl@arg+1,?___xxtofl+1
 10520   002866  C06C  F062         	movff	___xxtofl@arg+2,?___xxtofl+2
 10521   00286A  C06D  F063         	movff	___xxtofl@arg+3,?___xxtofl+3
 10522   00286E                     l1246:
 10523                           
 10524                           ; BSR set to: 0
 10525   00286E  0012               	return		;funcret
 10526   002870                     __end_of___xxtofl:
 10527                           	callstack 0
 10528                           
 10529 ;; *************** function ___fltol *****************
 10530 ;; Defined at:
 10531 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
 10532 ;; Parameters:    Size  Location     Type
 10533 ;;  f1              4    0[BANK0 ] unsigned char 
 10534 ;; Auto vars:     Size  Location     Type
 10535 ;;  exp1            1    9[BANK0 ] unsigned char 
 10536 ;;  sign1           1    8[BANK0 ] unsigned char 
 10537 ;; Return value:  Size  Location     Type
 10538 ;;                  4    0[BANK0 ] long 
 10539 ;; Registers used:
 10540 ;;		wreg, status,2, status,0
 10541 ;; Tracked objects:
 10542 ;;		On entry : 0/0
 10543 ;;		On exit  : 0/0
 10544 ;;		Unchanged: 0/0
 10545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10546 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10547 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10548 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10549 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10550 ;;Total ram usage:       10 bytes
 10551 ;; Hardware stack levels used: 1
 10552 ;; Hardware stack levels required when called: 3
 10553 ;; This function calls:
 10554 ;;		Nothing
 10555 ;; This function is called by:
 10556 ;;		_ftoa
 10557 ;;		_parse_MRF_message
 10558 ;; This function uses a non-reentrant model
 10559 ;;
 10560                           
 10561                           	psect	text43
 10562   003004                     __ptext43:
 10563                           	callstack 0
 10564   003004                     ___fltol:
 10565                           	callstack 25
 10566   003004  0100               	movlb	0	; () banked
 10567   003006  3562               	rlcf	(___fltol@f1+2)& (0+255),w,b
 10568   003008  3563               	rlcf	(___fltol@f1+3)& (0+255),w,b
 10569   00300A  6F69               	movwf	___fltol@exp1& (0+255),b
 10570   00300C  5169               	movf	___fltol@exp1& (0+255),w,b
 10571   00300E  A4D8               	btfss	status,2,c
 10572   003010  EF0C  F018         	goto	u6251
 10573   003014  EF0E  F018         	goto	u6250
 10574   003018                     u6251:
 10575   003018  EF18  F018         	goto	l5272
 10576   00301C                     u6250:
 10577   00301C                     l5268:
 10578                           
 10579                           ; BSR set to: 0
 10580   00301C  0E00               	movlw	0
 10581   00301E  6F60               	movwf	?___fltol& (0+255),b
 10582   003020  0E00               	movlw	0
 10583   003022  6F61               	movwf	(?___fltol+1)& (0+255),b
 10584   003024  0E00               	movlw	0
 10585   003026  6F62               	movwf	(?___fltol+2)& (0+255),b
 10586   003028  0E00               	movlw	0
 10587   00302A  6F63               	movwf	(?___fltol+3)& (0+255),b
 10588   00302C  EF85  F018         	goto	l885
 10589   003030                     l5272:
 10590                           
 10591                           ; BSR set to: 0
 10592   003030  C060  F064         	movff	___fltol@f1,??___fltol
 10593   003034  C061  F065         	movff	___fltol@f1+1,??___fltol+1
 10594   003038  C062  F066         	movff	___fltol@f1+2,??___fltol+2
 10595   00303C  C063  F067         	movff	___fltol@f1+3,??___fltol+3
 10596   003040  0E20               	movlw	32
 10597   003042  EF28  F018         	goto	u6260
 10598   003046                     u6265:
 10599   003046  90D8               	bcf	status,0,c
 10600   003048  3367               	rrcf	(??___fltol+3)& (0+255),f,b
 10601   00304A  3366               	rrcf	(??___fltol+2)& (0+255),f,b
 10602   00304C  3365               	rrcf	(??___fltol+1)& (0+255),f,b
 10603   00304E  3364               	rrcf	??___fltol& (0+255),f,b
 10604   003050                     u6260:
 10605   003050  2EE8               	decfsz	wreg,f,c
 10606   003052  EF23  F018         	goto	u6265
 10607   003056  5164               	movf	??___fltol& (0+255),w,b
 10608   003058  6F68               	movwf	___fltol@sign1& (0+255),b
 10609   00305A                     
 10610                           ; BSR set to: 0
 10611   00305A  8F62               	bsf	(___fltol@f1+2)& (0+255),7,b
 10612   00305C                     
 10613                           ; BSR set to: 0
 10614   00305C  0EFF               	movlw	255
 10615   00305E  1760               	andwf	___fltol@f1& (0+255),f,b
 10616   003060  0EFF               	movlw	255
 10617   003062  1761               	andwf	(___fltol@f1+1)& (0+255),f,b
 10618   003064  0EFF               	movlw	255
 10619   003066  1762               	andwf	(___fltol@f1+2)& (0+255),f,b
 10620   003068  0E00               	movlw	0
 10621   00306A  1763               	andwf	(___fltol@f1+3)& (0+255),f,b
 10622   00306C                     
 10623                           ; BSR set to: 0
 10624   00306C  0E96               	movlw	150
 10625   00306E  5F69               	subwf	___fltol@exp1& (0+255),f,b
 10626   003070                     
 10627                           ; BSR set to: 0
 10628   003070  BF69               	btfsc	___fltol@exp1& (0+255),7,b
 10629   003072  EF3F  F018         	goto	u6270
 10630   003076  EF3D  F018         	goto	u6271
 10631   00307A                     u6271:
 10632   00307A  EF55  F018         	goto	l5292
 10633   00307E                     u6270:
 10634   00307E                     
 10635                           ; BSR set to: 0
 10636   00307E  5169               	movf	___fltol@exp1& (0+255),w,b
 10637   003080  0A80               	xorlw	128
 10638   003082  0F97               	addlw	151
 10639   003084  B0D8               	btfsc	status,0,c
 10640   003086  EF47  F018         	goto	u6281
 10641   00308A  EF49  F018         	goto	u6280
 10642   00308E                     u6281:
 10643   00308E  EF4B  F018         	goto	l5288
 10644   003092                     u6280:
 10645   003092  EF0E  F018         	goto	l5268
 10646   003096                     l5288:
 10647                           
 10648                           ; BSR set to: 0
 10649   003096  90D8               	bcf	status,0,c
 10650   003098  3363               	rrcf	(___fltol@f1+3)& (0+255),f,b
 10651   00309A  3362               	rrcf	(___fltol@f1+2)& (0+255),f,b
 10652   00309C  3361               	rrcf	(___fltol@f1+1)& (0+255),f,b
 10653   00309E  3360               	rrcf	___fltol@f1& (0+255),f,b
 10654   0030A0                     
 10655                           ; BSR set to: 0
 10656   0030A0  3F69               	incfsz	___fltol@exp1& (0+255),f,b
 10657   0030A2  EF4B  F018         	goto	l5288
 10658   0030A6  EF6D  F018         	goto	l5302
 10659   0030AA                     l5292:
 10660                           
 10661                           ; BSR set to: 0
 10662   0030AA  0E1F               	movlw	31
 10663   0030AC  6569               	cpfsgt	___fltol@exp1& (0+255),b
 10664   0030AE  EF5B  F018         	goto	u6291
 10665   0030B2  EF5D  F018         	goto	u6290
 10666   0030B6                     u6291:
 10667   0030B6  EF65  F018         	goto	l5300
 10668   0030BA                     u6290:
 10669   0030BA  EF0E  F018         	goto	l5268
 10670   0030BE                     l5298:
 10671                           
 10672                           ; BSR set to: 0
 10673   0030BE  90D8               	bcf	status,0,c
 10674   0030C0  3760               	rlcf	___fltol@f1& (0+255),f,b
 10675   0030C2  3761               	rlcf	(___fltol@f1+1)& (0+255),f,b
 10676   0030C4  3762               	rlcf	(___fltol@f1+2)& (0+255),f,b
 10677   0030C6  3763               	rlcf	(___fltol@f1+3)& (0+255),f,b
 10678   0030C8  0769               	decf	___fltol@exp1& (0+255),f,b
 10679   0030CA                     l5300:
 10680                           
 10681                           ; BSR set to: 0
 10682   0030CA  5169               	movf	___fltol@exp1& (0+255),w,b
 10683   0030CC  A4D8               	btfss	status,2,c
 10684   0030CE  EF6B  F018         	goto	u6301
 10685   0030D2  EF6D  F018         	goto	u6300
 10686   0030D6                     u6301:
 10687   0030D6  EF5F  F018         	goto	l5298
 10688   0030DA                     u6300:
 10689   0030DA                     l5302:
 10690                           
 10691                           ; BSR set to: 0
 10692   0030DA  5168               	movf	___fltol@sign1& (0+255),w,b
 10693   0030DC  B4D8               	btfsc	status,2,c
 10694   0030DE  EF73  F018         	goto	u6311
 10695   0030E2  EF75  F018         	goto	u6310
 10696   0030E6                     u6311:
 10697   0030E6  EF7D  F018         	goto	l5306
 10698   0030EA                     u6310:
 10699   0030EA                     
 10700                           ; BSR set to: 0
 10701   0030EA  1F63               	comf	(___fltol@f1+3)& (0+255),f,b
 10702   0030EC  1F62               	comf	(___fltol@f1+2)& (0+255),f,b
 10703   0030EE  1F61               	comf	(___fltol@f1+1)& (0+255),f,b
 10704   0030F0  6D60               	negf	___fltol@f1& (0+255),b
 10705   0030F2  0E00               	movlw	0
 10706   0030F4  2361               	addwfc	(___fltol@f1+1)& (0+255),f,b
 10707   0030F6  2362               	addwfc	(___fltol@f1+2)& (0+255),f,b
 10708   0030F8  2363               	addwfc	(___fltol@f1+3)& (0+255),f,b
 10709   0030FA                     l5306:
 10710                           
 10711                           ; BSR set to: 0
 10712   0030FA  C060  F060         	movff	___fltol@f1,?___fltol
 10713   0030FE  C061  F061         	movff	___fltol@f1+1,?___fltol+1
 10714   003102  C062  F062         	movff	___fltol@f1+2,?___fltol+2
 10715   003106  C063  F063         	movff	___fltol@f1+3,?___fltol+3
 10716   00310A                     l885:
 10717                           
 10718                           ; BSR set to: 0
 10719   00310A  0012               	return		;funcret
 10720   00310C                     __end_of___fltol:
 10721                           	callstack 0
 10722                           
 10723 ;; *************** function ___flsub *****************
 10724 ;; Defined at:
 10725 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
 10726 ;; Parameters:    Size  Location     Type
 10727 ;;  b               4   16[BANK0 ] long 
 10728 ;;  a               4   20[BANK0 ] long 
 10729 ;; Auto vars:     Size  Location     Type
 10730 ;;		None
 10731 ;; Return value:  Size  Location     Type
 10732 ;;                  4   16[BANK0 ] long 
 10733 ;; Registers used:
 10734 ;;		wreg, status,2, status,0, cstack
 10735 ;; Tracked objects:
 10736 ;;		On entry : 0/0
 10737 ;;		On exit  : 0/0
 10738 ;;		Unchanged: 0/0
 10739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10740 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10743 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10744 ;;Total ram usage:        8 bytes
 10745 ;; Hardware stack levels used: 1
 10746 ;; Hardware stack levels required when called: 4
 10747 ;; This function calls:
 10748 ;;		___fladd
 10749 ;; This function is called by:
 10750 ;;		_ftoa
 10751 ;; This function uses a non-reentrant model
 10752 ;;
 10753                           
 10754                           	psect	text44
 10755   003E5A                     __ptext44:
 10756                           	callstack 0
 10757   003E5A                     ___flsub:
 10758                           	callstack 24
 10759   003E5A  0E00               	movlw	0
 10760   003E5C  0100               	movlb	0	; () banked
 10761   003E5E  1B74               	xorwf	___flsub@a& (0+255),f,b
 10762   003E60  0E00               	movlw	0
 10763   003E62  1B75               	xorwf	(___flsub@a+1)& (0+255),f,b
 10764   003E64  0E00               	movlw	0
 10765   003E66  1B76               	xorwf	(___flsub@a+2)& (0+255),f,b
 10766   003E68  0E80               	movlw	128
 10767   003E6A  1B77               	xorwf	(___flsub@a+3)& (0+255),f,b
 10768   003E6C                     
 10769                           ; BSR set to: 0
 10770   003E6C  C070  F060         	movff	___flsub@b,___fladd@b
 10771   003E70  C071  F061         	movff	___flsub@b+1,___fladd@b+1
 10772   003E74  C072  F062         	movff	___flsub@b+2,___fladd@b+2
 10773   003E78  C073  F063         	movff	___flsub@b+3,___fladd@b+3
 10774   003E7C  C074  F064         	movff	___flsub@a,___fladd@a
 10775   003E80  C075  F065         	movff	___flsub@a+1,___fladd@a+1
 10776   003E84  C076  F066         	movff	___flsub@a+2,___fladd@a+2
 10777   003E88  C077  F067         	movff	___flsub@a+3,___fladd@a+3
 10778   003E8C  ECD0  F008         	call	___fladd	;wreg free
 10779   003E90  C060  F070         	movff	?___fladd,?___flsub
 10780   003E94  C061  F071         	movff	?___fladd+1,?___flsub+1
 10781   003E98  C062  F072         	movff	?___fladd+2,?___flsub+2
 10782   003E9C  C063  F073         	movff	?___fladd+3,?___flsub+3
 10783   003EA0  0012               	return		;funcret
 10784   003EA2                     __end_of___flsub:
 10785                           	callstack 0
 10786                           
 10787 ;; *************** function ___fladd *****************
 10788 ;; Defined at:
 10789 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
 10790 ;; Parameters:    Size  Location     Type
 10791 ;;  b               4    0[BANK0 ] long 
 10792 ;;  a               4    4[BANK0 ] long 
 10793 ;; Auto vars:     Size  Location     Type
 10794 ;;  grs             1   15[BANK0 ] unsigned char 
 10795 ;;  bexp            1   14[BANK0 ] unsigned char 
 10796 ;;  aexp            1   13[BANK0 ] unsigned char 
 10797 ;;  signs           1   12[BANK0 ] unsigned char 
 10798 ;; Return value:  Size  Location     Type
 10799 ;;                  4    0[BANK0 ] unsigned char 
 10800 ;; Registers used:
 10801 ;;		wreg, status,2, status,0
 10802 ;; Tracked objects:
 10803 ;;		On entry : 0/0
 10804 ;;		On exit  : 0/0
 10805 ;;		Unchanged: 0/0
 10806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10807 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10808 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10809 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10810 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10811 ;;Total ram usage:       16 bytes
 10812 ;; Hardware stack levels used: 1
 10813 ;; Hardware stack levels required when called: 3
 10814 ;; This function calls:
 10815 ;;		Nothing
 10816 ;; This function is called by:
 10817 ;;		___flsub
 10818 ;; This function uses a non-reentrant model
 10819 ;;
 10820                           
 10821                           	psect	text45
 10822   0011A0                     __ptext45:
 10823                           	callstack 0
 10824   0011A0                     ___fladd:
 10825                           	callstack 24
 10826   0011A0  0100               	movlb	0	; () banked
 10827   0011A2  5163               	movf	(___fladd@b+3)& (0+255),w,b
 10828   0011A4  0B80               	andlw	128
 10829   0011A6  6F6C               	movwf	___fladd@signs& (0+255),b
 10830   0011A8  5163               	movf	(___fladd@b+3)& (0+255),w,b
 10831   0011AA  2563               	addwf	(___fladd@b+3)& (0+255),w,b
 10832   0011AC  6F6E               	movwf	___fladd@bexp& (0+255),b
 10833   0011AE                     
 10834                           ; BSR set to: 0
 10835   0011AE  AF62               	btfss	(___fladd@b+2)& (0+255),7,b
 10836   0011B0  EFDC  F008         	goto	u4801
 10837   0011B4  EFDE  F008         	goto	u4800
 10838   0011B8                     u4801:
 10839   0011B8  EFDF  F008         	goto	l4528
 10840   0011BC                     u4800:
 10841   0011BC                     
 10842                           ; BSR set to: 0
 10843   0011BC  816E               	bsf	___fladd@bexp& (0+255),0,b
 10844   0011BE                     l4528:
 10845                           
 10846                           ; BSR set to: 0
 10847   0011BE  516E               	movf	___fladd@bexp& (0+255),w,b
 10848   0011C0  B4D8               	btfsc	status,2,c
 10849   0011C2  EFE5  F008         	goto	u4811
 10850   0011C6  EFE7  F008         	goto	u4810
 10851   0011CA                     u4811:
 10852   0011CA  EFFC  F008         	goto	l4538
 10853   0011CE                     u4810:
 10854   0011CE                     
 10855                           ; BSR set to: 0
 10856   0011CE  296E               	incf	___fladd@bexp& (0+255),w,b
 10857   0011D0  A4D8               	btfss	status,2,c
 10858   0011D2  EFED  F008         	goto	u4821
 10859   0011D6  EFEF  F008         	goto	u4820
 10860   0011DA                     u4821:
 10861   0011DA  EFF7  F008         	goto	l4534
 10862   0011DE                     u4820:
 10863   0011DE                     
 10864                           ; BSR set to: 0
 10865   0011DE  0E00               	movlw	0
 10866   0011E0  6F60               	movwf	___fladd@b& (0+255),b
 10867   0011E2  0E00               	movlw	0
 10868   0011E4  6F61               	movwf	(___fladd@b+1)& (0+255),b
 10869   0011E6  0E00               	movlw	0
 10870   0011E8  6F62               	movwf	(___fladd@b+2)& (0+255),b
 10871   0011EA  0E00               	movlw	0
 10872   0011EC  6F63               	movwf	(___fladd@b+3)& (0+255),b
 10873   0011EE                     l4534:
 10874                           
 10875                           ; BSR set to: 0
 10876   0011EE  8F62               	bsf	(___fladd@b+2)& (0+255),7,b
 10877   0011F0                     
 10878                           ; BSR set to: 0
 10879   0011F0  0E00               	movlw	0
 10880   0011F2  6F63               	movwf	(___fladd@b+3)& (0+255),b
 10881   0011F4  EF04  F009         	goto	l4540
 10882   0011F8                     l4538:
 10883                           
 10884                           ; BSR set to: 0
 10885   0011F8  0E00               	movlw	0
 10886   0011FA  6F60               	movwf	___fladd@b& (0+255),b
 10887   0011FC  0E00               	movlw	0
 10888   0011FE  6F61               	movwf	(___fladd@b+1)& (0+255),b
 10889   001200  0E00               	movlw	0
 10890   001202  6F62               	movwf	(___fladd@b+2)& (0+255),b
 10891   001204  0E00               	movlw	0
 10892   001206  6F63               	movwf	(___fladd@b+3)& (0+255),b
 10893   001208                     l4540:
 10894                           
 10895                           ; BSR set to: 0
 10896   001208  5167               	movf	(___fladd@a+3)& (0+255),w,b
 10897   00120A  0B80               	andlw	128
 10898   00120C  6F6D               	movwf	___fladd@aexp& (0+255),b
 10899   00120E                     
 10900                           ; BSR set to: 0
 10901   00120E  516C               	movf	___fladd@signs& (0+255),w,b
 10902   001210  196D               	xorwf	___fladd@aexp& (0+255),w,b
 10903   001212  B4D8               	btfsc	status,2,c
 10904   001214  EF0E  F009         	goto	u4831
 10905   001218  EF10  F009         	goto	u4830
 10906   00121C                     u4831:
 10907   00121C  EF11  F009         	goto	l4546
 10908   001220                     u4830:
 10909   001220                     
 10910                           ; BSR set to: 0
 10911   001220  8D6C               	bsf	___fladd@signs& (0+255),6,b
 10912   001222                     l4546:
 10913                           
 10914                           ; BSR set to: 0
 10915   001222  5167               	movf	(___fladd@a+3)& (0+255),w,b
 10916   001224  2567               	addwf	(___fladd@a+3)& (0+255),w,b
 10917   001226  6F6D               	movwf	___fladd@aexp& (0+255),b
 10918   001228                     
 10919                           ; BSR set to: 0
 10920   001228  AF66               	btfss	(___fladd@a+2)& (0+255),7,b
 10921   00122A  EF19  F009         	goto	u4841
 10922   00122E  EF1B  F009         	goto	u4840
 10923   001232                     u4841:
 10924   001232  EF1C  F009         	goto	l4552
 10925   001236                     u4840:
 10926   001236                     
 10927                           ; BSR set to: 0
 10928   001236  816D               	bsf	___fladd@aexp& (0+255),0,b
 10929   001238                     l4552:
 10930                           
 10931                           ; BSR set to: 0
 10932   001238  516D               	movf	___fladd@aexp& (0+255),w,b
 10933   00123A  B4D8               	btfsc	status,2,c
 10934   00123C  EF22  F009         	goto	u4851
 10935   001240  EF24  F009         	goto	u4850
 10936   001244                     u4851:
 10937   001244  EF39  F009         	goto	l4562
 10938   001248                     u4850:
 10939   001248                     
 10940                           ; BSR set to: 0
 10941   001248  296D               	incf	___fladd@aexp& (0+255),w,b
 10942   00124A  A4D8               	btfss	status,2,c
 10943   00124C  EF2A  F009         	goto	u4861
 10944   001250  EF2C  F009         	goto	u4860
 10945   001254                     u4861:
 10946   001254  EF34  F009         	goto	l4558
 10947   001258                     u4860:
 10948   001258                     
 10949                           ; BSR set to: 0
 10950   001258  0E00               	movlw	0
 10951   00125A  6F64               	movwf	___fladd@a& (0+255),b
 10952   00125C  0E00               	movlw	0
 10953   00125E  6F65               	movwf	(___fladd@a+1)& (0+255),b
 10954   001260  0E00               	movlw	0
 10955   001262  6F66               	movwf	(___fladd@a+2)& (0+255),b
 10956   001264  0E00               	movlw	0
 10957   001266  6F67               	movwf	(___fladd@a+3)& (0+255),b
 10958   001268                     l4558:
 10959                           
 10960                           ; BSR set to: 0
 10961   001268  8F66               	bsf	(___fladd@a+2)& (0+255),7,b
 10962   00126A                     
 10963                           ; BSR set to: 0
 10964   00126A  0E00               	movlw	0
 10965   00126C  6F67               	movwf	(___fladd@a+3)& (0+255),b
 10966   00126E  EF41  F009         	goto	l4564
 10967   001272                     l4562:
 10968                           
 10969                           ; BSR set to: 0
 10970   001272  0E00               	movlw	0
 10971   001274  6F64               	movwf	___fladd@a& (0+255),b
 10972   001276  0E00               	movlw	0
 10973   001278  6F65               	movwf	(___fladd@a+1)& (0+255),b
 10974   00127A  0E00               	movlw	0
 10975   00127C  6F66               	movwf	(___fladd@a+2)& (0+255),b
 10976   00127E  0E00               	movlw	0
 10977   001280  6F67               	movwf	(___fladd@a+3)& (0+255),b
 10978   001282                     l4564:
 10979                           
 10980                           ; BSR set to: 0
 10981   001282  516E               	movf	___fladd@bexp& (0+255),w,b
 10982   001284  5D6D               	subwf	___fladd@aexp& (0+255),w,b
 10983   001286  B0D8               	btfsc	status,0,c
 10984   001288  EF48  F009         	goto	u4871
 10985   00128C  EF4A  F009         	goto	u4870
 10986   001290                     u4871:
 10987   001290  EF71  F009         	goto	l4600
 10988   001294                     u4870:
 10989   001294                     
 10990                           ; BSR set to: 0
 10991   001294  AD6C               	btfss	___fladd@signs& (0+255),6,b
 10992   001296  EF4F  F009         	goto	u4881
 10993   00129A  EF51  F009         	goto	u4880
 10994   00129E                     u4881:
 10995   00129E  EF53  F009         	goto	l4570
 10996   0012A2                     u4880:
 10997   0012A2                     
 10998                           ; BSR set to: 0
 10999   0012A2  0E80               	movlw	128
 11000   0012A4  1B6C               	xorwf	___fladd@signs& (0+255),f,b
 11001   0012A6                     l4570:
 11002                           
 11003                           ; BSR set to: 0
 11004   0012A6  C06E  F06F         	movff	___fladd@bexp,___fladd@grs
 11005   0012AA                     
 11006                           ; BSR set to: 0
 11007   0012AA  C06D  F06E         	movff	___fladd@aexp,___fladd@bexp
 11008   0012AE                     
 11009                           ; BSR set to: 0
 11010   0012AE  C06F  F06D         	movff	___fladd@grs,___fladd@aexp
 11011   0012B2                     
 11012                           ; BSR set to: 0
 11013   0012B2  C060  F06F         	movff	___fladd@b,___fladd@grs
 11014   0012B6                     
 11015                           ; BSR set to: 0
 11016   0012B6  C064  F060         	movff	___fladd@a,___fladd@b
 11017   0012BA                     
 11018                           ; BSR set to: 0
 11019   0012BA  C06F  F064         	movff	___fladd@grs,___fladd@a
 11020   0012BE                     
 11021                           ; BSR set to: 0
 11022   0012BE  C061  F06F         	movff	___fladd@b+1,___fladd@grs
 11023   0012C2                     
 11024                           ; BSR set to: 0
 11025   0012C2  C065  F061         	movff	___fladd@a+1,___fladd@b+1
 11026   0012C6                     
 11027                           ; BSR set to: 0
 11028   0012C6  C06F  F065         	movff	___fladd@grs,___fladd@a+1
 11029   0012CA                     
 11030                           ; BSR set to: 0
 11031   0012CA  C062  F06F         	movff	___fladd@b+2,___fladd@grs
 11032   0012CE                     
 11033                           ; BSR set to: 0
 11034   0012CE  C066  F062         	movff	___fladd@a+2,___fladd@b+2
 11035   0012D2                     
 11036                           ; BSR set to: 0
 11037   0012D2  C06F  F066         	movff	___fladd@grs,___fladd@a+2
 11038   0012D6                     
 11039                           ; BSR set to: 0
 11040   0012D6  C063  F06F         	movff	___fladd@b+3,___fladd@grs
 11041   0012DA                     
 11042                           ; BSR set to: 0
 11043   0012DA  C067  F063         	movff	___fladd@a+3,___fladd@b+3
 11044   0012DE                     
 11045                           ; BSR set to: 0
 11046   0012DE  C06F  F067         	movff	___fladd@grs,___fladd@a+3
 11047   0012E2                     l4600:
 11048                           
 11049                           ; BSR set to: 0
 11050   0012E2  0E00               	movlw	0
 11051   0012E4  6F6F               	movwf	___fladd@grs& (0+255),b
 11052   0012E6                     
 11053                           ; BSR set to: 0
 11054   0012E6  516E               	movf	___fladd@bexp& (0+255),w,b
 11055   0012E8  C06D  F068         	movff	___fladd@aexp,??___fladd
 11056   0012EC  6B69               	clrf	(??___fladd+1)& (0+255),b
 11057   0012EE  5F68               	subwf	??___fladd& (0+255),f,b
 11058   0012F0  0E00               	movlw	0
 11059   0012F2  5B69               	subwfb	(??___fladd+1)& (0+255),f,b
 11060   0012F4  BF69               	btfsc	(??___fladd+1)& (0+255),7,b
 11061   0012F6  EF86  F009         	goto	u4891
 11062   0012FA  5169               	movf	(??___fladd+1)& (0+255),w,b
 11063   0012FC  E109               	bnz	u4890
 11064   0012FE  0E1A               	movlw	26
 11065   001300  5D68               	subwf	??___fladd& (0+255),w,b
 11066   001302  A0D8               	btfss	status,0,c
 11067   001304  EF86  F009         	goto	u4891
 11068   001308  EF88  F009         	goto	u4890
 11069   00130C                     u4891:
 11070   00130C  EFBF  F009         	goto	l1117
 11071   001310                     u4890:
 11072   001310                     
 11073                           ; BSR set to: 0
 11074   001310  5160               	movf	___fladd@b& (0+255),w,b
 11075   001312  1161               	iorwf	(___fladd@b+1)& (0+255),w,b
 11076   001314  1162               	iorwf	(___fladd@b+2)& (0+255),w,b
 11077   001316  1163               	iorwf	(___fladd@b+3)& (0+255),w,b
 11078   001318  A4D8               	btfss	status,2,c
 11079   00131A  EF91  F009         	goto	u4901
 11080   00131E  EF94  F009         	goto	u4900
 11081   001322                     u4901:
 11082   001322  0E01               	movlw	1
 11083   001324  EF95  F009         	goto	u4910
 11084   001328                     u4900:
 11085   001328  0E00               	movlw	0
 11086   00132A                     u4910:
 11087   00132A  6F6F               	movwf	___fladd@grs& (0+255),b
 11088   00132C                     
 11089                           ; BSR set to: 0
 11090   00132C  0E00               	movlw	0
 11091   00132E  6F60               	movwf	___fladd@b& (0+255),b
 11092   001330  0E00               	movlw	0
 11093   001332  6F61               	movwf	(___fladd@b+1)& (0+255),b
 11094   001334  0E00               	movlw	0
 11095   001336  6F62               	movwf	(___fladd@b+2)& (0+255),b
 11096   001338  0E00               	movlw	0
 11097   00133A  6F63               	movwf	(___fladd@b+3)& (0+255),b
 11098   00133C                     
 11099                           ; BSR set to: 0
 11100   00133C  C06D  F06E         	movff	___fladd@aexp,___fladd@bexp
 11101   001340  EFC8  F009         	goto	l1116
 11102   001344                     l1118:
 11103                           
 11104                           ; BSR set to: 0
 11105   001344  A16F               	btfss	___fladd@grs& (0+255),0,b
 11106   001346  EFA7  F009         	goto	u4921
 11107   00134A  EFA9  F009         	goto	u4920
 11108   00134E                     u4921:
 11109   00134E  EFAF  F009         	goto	l4612
 11110   001352                     u4920:
 11111   001352                     
 11112                           ; BSR set to: 0
 11113   001352  90D8               	bcf	status,0,c
 11114   001354  316F               	rrcf	___fladd@grs& (0+255),w,b
 11115   001356  0901               	iorlw	1
 11116   001358  6F6F               	movwf	___fladd@grs& (0+255),b
 11117   00135A  EFB1  F009         	goto	l4614
 11118   00135E                     l4612:
 11119                           
 11120                           ; BSR set to: 0
 11121   00135E  90D8               	bcf	status,0,c
 11122   001360  336F               	rrcf	___fladd@grs& (0+255),f,b
 11123   001362                     l4614:
 11124                           
 11125                           ; BSR set to: 0
 11126   001362  A160               	btfss	___fladd@b& (0+255),0,b
 11127   001364  EFB6  F009         	goto	u4931
 11128   001368  EFB8  F009         	goto	u4930
 11129   00136C                     u4931:
 11130   00136C  EFB9  F009         	goto	l4618
 11131   001370                     u4930:
 11132   001370                     
 11133                           ; BSR set to: 0
 11134   001370  8F6F               	bsf	___fladd@grs& (0+255),7,b
 11135   001372                     l4618:
 11136                           
 11137                           ; BSR set to: 0
 11138   001372  3563               	rlcf	(___fladd@b+3)& (0+255),w,b
 11139   001374  3363               	rrcf	(___fladd@b+3)& (0+255),f,b
 11140   001376  3362               	rrcf	(___fladd@b+2)& (0+255),f,b
 11141   001378  3361               	rrcf	(___fladd@b+1)& (0+255),f,b
 11142   00137A  3360               	rrcf	___fladd@b& (0+255),f,b
 11143   00137C                     
 11144                           ; BSR set to: 0
 11145   00137C  2B6E               	incf	___fladd@bexp& (0+255),f,b
 11146   00137E                     l1117:
 11147                           
 11148                           ; BSR set to: 0
 11149   00137E  516D               	movf	___fladd@aexp& (0+255),w,b
 11150   001380  5D6E               	subwf	___fladd@bexp& (0+255),w,b
 11151   001382  A0D8               	btfss	status,0,c
 11152   001384  EFC6  F009         	goto	u4941
 11153   001388  EFC8  F009         	goto	u4940
 11154   00138C                     u4941:
 11155   00138C  EFA2  F009         	goto	l1118
 11156   001390                     u4940:
 11157   001390                     l1116:
 11158                           
 11159                           ; BSR set to: 0
 11160   001390  BD6C               	btfsc	___fladd@signs& (0+255),6,b
 11161   001392  EFCD  F009         	goto	u4951
 11162   001396  EFCF  F009         	goto	u4950
 11163   00139A                     u4951:
 11164   00139A  EF0F  F00A         	goto	l4646
 11165   00139E                     u4950:
 11166   00139E                     
 11167                           ; BSR set to: 0
 11168   00139E  516E               	movf	___fladd@bexp& (0+255),w,b
 11169   0013A0  A4D8               	btfss	status,2,c
 11170   0013A2  EFD5  F009         	goto	u4961
 11171   0013A6  EFD7  F009         	goto	u4960
 11172   0013AA                     u4961:
 11173   0013AA  EFE1  F009         	goto	l4628
 11174   0013AE                     u4960:
 11175   0013AE                     
 11176                           ; BSR set to: 0
 11177   0013AE  0E00               	movlw	0
 11178   0013B0  6F60               	movwf	?___fladd& (0+255),b
 11179   0013B2  0E00               	movlw	0
 11180   0013B4  6F61               	movwf	(?___fladd+1)& (0+255),b
 11181   0013B6  0E00               	movlw	0
 11182   0013B8  6F62               	movwf	(?___fladd+2)& (0+255),b
 11183   0013BA  0E00               	movlw	0
 11184   0013BC  6F63               	movwf	(?___fladd+3)& (0+255),b
 11185   0013BE  EF30  F00B         	goto	l1125
 11186   0013C2                     l4628:
 11187                           
 11188                           ; BSR set to: 0
 11189   0013C2  5164               	movf	___fladd@a& (0+255),w,b
 11190   0013C4  2760               	addwf	___fladd@b& (0+255),f,b
 11191   0013C6  5165               	movf	(___fladd@a+1)& (0+255),w,b
 11192   0013C8  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
 11193   0013CA  5166               	movf	(___fladd@a+2)& (0+255),w,b
 11194   0013CC  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
 11195   0013CE  5167               	movf	(___fladd@a+3)& (0+255),w,b
 11196   0013D0  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
 11197   0013D2                     
 11198                           ; BSR set to: 0
 11199   0013D2  A163               	btfss	(___fladd@b+3)& (0+255),0,b
 11200   0013D4  EFEE  F009         	goto	u4971
 11201   0013D8  EFF0  F009         	goto	u4970
 11202   0013DC                     u4971:
 11203   0013DC  EF9C  F00A         	goto	l4682
 11204   0013E0                     u4970:
 11205   0013E0                     
 11206                           ; BSR set to: 0
 11207   0013E0  A16F               	btfss	___fladd@grs& (0+255),0,b
 11208   0013E2  EFF5  F009         	goto	u4981
 11209   0013E6  EFF7  F009         	goto	u4980
 11210   0013EA                     u4981:
 11211   0013EA  EFFD  F009         	goto	l4636
 11212   0013EE                     u4980:
 11213   0013EE                     
 11214                           ; BSR set to: 0
 11215   0013EE  90D8               	bcf	status,0,c
 11216   0013F0  316F               	rrcf	___fladd@grs& (0+255),w,b
 11217   0013F2  0901               	iorlw	1
 11218   0013F4  6F6F               	movwf	___fladd@grs& (0+255),b
 11219   0013F6  EFFF  F009         	goto	l4638
 11220   0013FA                     l4636:
 11221                           
 11222                           ; BSR set to: 0
 11223   0013FA  90D8               	bcf	status,0,c
 11224   0013FC  336F               	rrcf	___fladd@grs& (0+255),f,b
 11225   0013FE                     l4638:
 11226                           
 11227                           ; BSR set to: 0
 11228   0013FE  A160               	btfss	___fladd@b& (0+255),0,b
 11229   001400  EF04  F00A         	goto	u4991
 11230   001404  EF06  F00A         	goto	u4990
 11231   001408                     u4991:
 11232   001408  EF07  F00A         	goto	l4642
 11233   00140C                     u4990:
 11234   00140C                     
 11235                           ; BSR set to: 0
 11236   00140C  8F6F               	bsf	___fladd@grs& (0+255),7,b
 11237   00140E                     l4642:
 11238                           
 11239                           ; BSR set to: 0
 11240   00140E  3563               	rlcf	(___fladd@b+3)& (0+255),w,b
 11241   001410  3363               	rrcf	(___fladd@b+3)& (0+255),f,b
 11242   001412  3362               	rrcf	(___fladd@b+2)& (0+255),f,b
 11243   001414  3361               	rrcf	(___fladd@b+1)& (0+255),f,b
 11244   001416  3360               	rrcf	___fladd@b& (0+255),f,b
 11245   001418                     
 11246                           ; BSR set to: 0
 11247   001418  2B6E               	incf	___fladd@bexp& (0+255),f,b
 11248   00141A  EF9C  F00A         	goto	l4682
 11249   00141E                     l4646:
 11250                           
 11251                           ; BSR set to: 0
 11252   00141E  5164               	movf	___fladd@a& (0+255),w,b
 11253   001420  5D60               	subwf	___fladd@b& (0+255),w,b
 11254   001422  5165               	movf	(___fladd@a+1)& (0+255),w,b
 11255   001424  5961               	subwfb	(___fladd@b+1)& (0+255),w,b
 11256   001426  5166               	movf	(___fladd@a+2)& (0+255),w,b
 11257   001428  5962               	subwfb	(___fladd@b+2)& (0+255),w,b
 11258   00142A  5163               	movf	(___fladd@b+3)& (0+255),w,b
 11259   00142C  0A80               	xorlw	128
 11260   00142E  6F68               	movwf	??___fladd& (0+255),b
 11261   001430  5167               	movf	(___fladd@a+3)& (0+255),w,b
 11262   001432  0A80               	xorlw	128
 11263   001434  5968               	subwfb	??___fladd& (0+255),w,b
 11264   001436  B0D8               	btfsc	status,0,c
 11265   001438  EF20  F00A         	goto	u5001
 11266   00143C  EF22  F00A         	goto	u5000
 11267   001440                     u5001:
 11268   001440  EF4D  F00A         	goto	l4656
 11269   001444                     u5000:
 11270   001444                     
 11271                           ; BSR set to: 0
 11272   001444  5160               	movf	___fladd@b& (0+255),w,b
 11273   001446  5D64               	subwf	___fladd@a& (0+255),w,b
 11274   001448  6F68               	movwf	??___fladd& (0+255),b
 11275   00144A  5161               	movf	(___fladd@b+1)& (0+255),w,b
 11276   00144C  5965               	subwfb	(___fladd@a+1)& (0+255),w,b
 11277   00144E  6F69               	movwf	(??___fladd+1)& (0+255),b
 11278   001450  5162               	movf	(___fladd@b+2)& (0+255),w,b
 11279   001452  5966               	subwfb	(___fladd@a+2)& (0+255),w,b
 11280   001454  6F6A               	movwf	(??___fladd+2)& (0+255),b
 11281   001456  5163               	movf	(___fladd@b+3)& (0+255),w,b
 11282   001458  5967               	subwfb	(___fladd@a+3)& (0+255),w,b
 11283   00145A  6F6B               	movwf	(??___fladd+3)& (0+255),b
 11284   00145C  0EFF               	movlw	255
 11285   00145E  2568               	addwf	??___fladd& (0+255),w,b
 11286   001460  6F60               	movwf	___fladd@b& (0+255),b
 11287   001462  0EFF               	movlw	255
 11288   001464  2169               	addwfc	(??___fladd+1)& (0+255),w,b
 11289   001466  6F61               	movwf	(___fladd@b+1)& (0+255),b
 11290   001468  0EFF               	movlw	255
 11291   00146A  216A               	addwfc	(??___fladd+2)& (0+255),w,b
 11292   00146C  6F62               	movwf	(___fladd@b+2)& (0+255),b
 11293   00146E  0EFF               	movlw	255
 11294   001470  216B               	addwfc	(??___fladd+3)& (0+255),w,b
 11295   001472  6F63               	movwf	(___fladd@b+3)& (0+255),b
 11296   001474  0E80               	movlw	128
 11297   001476  1B6C               	xorwf	___fladd@signs& (0+255),f,b
 11298   001478                     
 11299                           ; BSR set to: 0
 11300   001478  6D6F               	negf	___fladd@grs& (0+255),b
 11301   00147A                     
 11302                           ; BSR set to: 0
 11303   00147A  516F               	movf	___fladd@grs& (0+255),w,b
 11304   00147C  A4D8               	btfss	status,2,c
 11305   00147E  EF43  F00A         	goto	u5011
 11306   001482  EF45  F00A         	goto	u5010
 11307   001486                     u5011:
 11308   001486  EF55  F00A         	goto	l1133
 11309   00148A                     u5010:
 11310   00148A                     
 11311                           ; BSR set to: 0
 11312   00148A  0E01               	movlw	1
 11313   00148C  2760               	addwf	___fladd@b& (0+255),f,b
 11314   00148E  0E00               	movlw	0
 11315   001490  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
 11316   001492  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
 11317   001494  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
 11318   001496  EF55  F00A         	goto	l1133
 11319   00149A                     l4656:
 11320                           
 11321                           ; BSR set to: 0
 11322   00149A  5164               	movf	___fladd@a& (0+255),w,b
 11323   00149C  5F60               	subwf	___fladd@b& (0+255),f,b
 11324   00149E  5165               	movf	(___fladd@a+1)& (0+255),w,b
 11325   0014A0  5B61               	subwfb	(___fladd@b+1)& (0+255),f,b
 11326   0014A2  5166               	movf	(___fladd@a+2)& (0+255),w,b
 11327   0014A4  5B62               	subwfb	(___fladd@b+2)& (0+255),f,b
 11328   0014A6  5167               	movf	(___fladd@a+3)& (0+255),w,b
 11329   0014A8  5B63               	subwfb	(___fladd@b+3)& (0+255),f,b
 11330   0014AA                     l1133:
 11331                           
 11332                           ; BSR set to: 0
 11333   0014AA  5160               	movf	___fladd@b& (0+255),w,b
 11334   0014AC  1161               	iorwf	(___fladd@b+1)& (0+255),w,b
 11335   0014AE  1162               	iorwf	(___fladd@b+2)& (0+255),w,b
 11336   0014B0  1163               	iorwf	(___fladd@b+3)& (0+255),w,b
 11337   0014B2  A4D8               	btfss	status,2,c
 11338   0014B4  EF5E  F00A         	goto	u5021
 11339   0014B8  EF60  F00A         	goto	u5020
 11340   0014BC                     u5021:
 11341   0014BC  EF95  F00A         	goto	l4680
 11342   0014C0                     u5020:
 11343   0014C0                     
 11344                           ; BSR set to: 0
 11345   0014C0  516F               	movf	___fladd@grs& (0+255),w,b
 11346   0014C2  A4D8               	btfss	status,2,c
 11347   0014C4  EF66  F00A         	goto	u5031
 11348   0014C8  EF68  F00A         	goto	u5030
 11349   0014CC                     u5031:
 11350   0014CC  EF95  F00A         	goto	l4680
 11351   0014D0                     u5030:
 11352   0014D0                     
 11353                           ; BSR set to: 0
 11354   0014D0  0E00               	movlw	0
 11355   0014D2  6F60               	movwf	?___fladd& (0+255),b
 11356   0014D4  0E00               	movlw	0
 11357   0014D6  6F61               	movwf	(?___fladd+1)& (0+255),b
 11358   0014D8  0E00               	movlw	0
 11359   0014DA  6F62               	movwf	(?___fladd+2)& (0+255),b
 11360   0014DC  0E00               	movlw	0
 11361   0014DE  6F63               	movwf	(?___fladd+3)& (0+255),b
 11362   0014E0  EF30  F00B         	goto	l1125
 11363   0014E4                     l4664:
 11364                           
 11365                           ; BSR set to: 0
 11366   0014E4  90D8               	bcf	status,0,c
 11367   0014E6  3760               	rlcf	___fladd@b& (0+255),f,b
 11368   0014E8  3761               	rlcf	(___fladd@b+1)& (0+255),f,b
 11369   0014EA  3762               	rlcf	(___fladd@b+2)& (0+255),f,b
 11370   0014EC  3763               	rlcf	(___fladd@b+3)& (0+255),f,b
 11371   0014EE                     
 11372                           ; BSR set to: 0
 11373   0014EE  AF6F               	btfss	___fladd@grs& (0+255),7,b
 11374   0014F0  EF7C  F00A         	goto	u5041
 11375   0014F4  EF7E  F00A         	goto	u5040
 11376   0014F8                     u5041:
 11377   0014F8  EF7F  F00A         	goto	l4670
 11378   0014FC                     u5040:
 11379   0014FC                     
 11380                           ; BSR set to: 0
 11381   0014FC  8160               	bsf	___fladd@b& (0+255),0,b
 11382   0014FE                     l4670:
 11383                           
 11384                           ; BSR set to: 0
 11385   0014FE  A16F               	btfss	___fladd@grs& (0+255),0,b
 11386   001500  EF84  F00A         	goto	u5051
 11387   001504  EF86  F00A         	goto	u5050
 11388   001508                     u5051:
 11389   001508  EF8A  F00A         	goto	l4674
 11390   00150C                     u5050:
 11391   00150C                     
 11392                           ; BSR set to: 0
 11393   00150C  80D8               	bsf	status,0,c
 11394   00150E  376F               	rlcf	___fladd@grs& (0+255),f,b
 11395   001510  EF8C  F00A         	goto	l4676
 11396   001514                     l4674:
 11397                           
 11398                           ; BSR set to: 0
 11399   001514  90D8               	bcf	status,0,c
 11400   001516  376F               	rlcf	___fladd@grs& (0+255),f,b
 11401   001518                     l4676:
 11402                           
 11403                           ; BSR set to: 0
 11404   001518  516E               	movf	___fladd@bexp& (0+255),w,b
 11405   00151A  B4D8               	btfsc	status,2,c
 11406   00151C  EF92  F00A         	goto	u5061
 11407   001520  EF94  F00A         	goto	u5060
 11408   001524                     u5061:
 11409   001524  EF95  F00A         	goto	l4680
 11410   001528                     u5060:
 11411   001528                     
 11412                           ; BSR set to: 0
 11413   001528  076E               	decf	___fladd@bexp& (0+255),f,b
 11414   00152A                     l4680:
 11415                           
 11416                           ; BSR set to: 0
 11417   00152A  AF62               	btfss	(___fladd@b+2)& (0+255),7,b
 11418   00152C  EF9A  F00A         	goto	u5071
 11419   001530  EF9C  F00A         	goto	u5070
 11420   001534                     u5071:
 11421   001534  EF72  F00A         	goto	l4664
 11422   001538                     u5070:
 11423   001538                     l4682:
 11424                           
 11425                           ; BSR set to: 0
 11426   001538  0E00               	movlw	0
 11427   00153A  6F6D               	movwf	___fladd@aexp& (0+255),b
 11428   00153C                     
 11429                           ; BSR set to: 0
 11430   00153C  AF6F               	btfss	___fladd@grs& (0+255),7,b
 11431   00153E  EFA3  F00A         	goto	u5081
 11432   001542  EFA5  F00A         	goto	u5080
 11433   001546                     u5081:
 11434   001546  EFBD  F00A         	goto	l1142
 11435   00154A                     u5080:
 11436   00154A                     
 11437                           ; BSR set to: 0
 11438   00154A  C06F  F068         	movff	___fladd@grs,??___fladd
 11439   00154E  0E7F               	movlw	127
 11440   001550  1768               	andwf	??___fladd& (0+255),f,b
 11441   001552  B4D8               	btfsc	status,2,c
 11442   001554  EFAE  F00A         	goto	u5091
 11443   001558  EFB0  F00A         	goto	u5090
 11444   00155C                     u5091:
 11445   00155C  EFB4  F00A         	goto	l1143
 11446   001560                     u5090:
 11447   001560                     l4688:
 11448                           
 11449                           ; BSR set to: 0
 11450   001560  0E01               	movlw	1
 11451   001562  6F6D               	movwf	___fladd@aexp& (0+255),b
 11452   001564  EFBD  F00A         	goto	l1142
 11453   001568                     l1143:
 11454                           
 11455                           ; BSR set to: 0
 11456   001568  A160               	btfss	___fladd@b& (0+255),0,b
 11457   00156A  EFB9  F00A         	goto	u5101
 11458   00156E  EFBB  F00A         	goto	u5100
 11459   001572                     u5101:
 11460   001572  EFBD  F00A         	goto	l1142
 11461   001576                     u5100:
 11462   001576  EFB0  F00A         	goto	l4688
 11463   00157A                     l1142:
 11464                           
 11465                           ; BSR set to: 0
 11466   00157A  516D               	movf	___fladd@aexp& (0+255),w,b
 11467   00157C  B4D8               	btfsc	status,2,c
 11468   00157E  EFC3  F00A         	goto	u5111
 11469   001582  EFC5  F00A         	goto	u5110
 11470   001586                     u5111:
 11471   001586  EFF0  F00A         	goto	l4700
 11472   00158A                     u5110:
 11473   00158A                     
 11474                           ; BSR set to: 0
 11475   00158A  0E01               	movlw	1
 11476   00158C  2760               	addwf	___fladd@b& (0+255),f,b
 11477   00158E  0E00               	movlw	0
 11478   001590  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
 11479   001592  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
 11480   001594  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
 11481   001596                     
 11482                           ; BSR set to: 0
 11483   001596  A163               	btfss	(___fladd@b+3)& (0+255),0,b
 11484   001598  EFD0  F00A         	goto	u5121
 11485   00159C  EFD2  F00A         	goto	u5120
 11486   0015A0                     u5121:
 11487   0015A0  EFF0  F00A         	goto	l4700
 11488   0015A4                     u5120:
 11489   0015A4                     
 11490                           ; BSR set to: 0
 11491   0015A4  C060  F068         	movff	___fladd@b,??___fladd
 11492   0015A8  C061  F069         	movff	___fladd@b+1,??___fladd+1
 11493   0015AC  C062  F06A         	movff	___fladd@b+2,??___fladd+2
 11494   0015B0  C063  F06B         	movff	___fladd@b+3,??___fladd+3
 11495   0015B4  356B               	rlcf	(??___fladd+3)& (0+255),w,b
 11496   0015B6  336B               	rrcf	(??___fladd+3)& (0+255),f,b
 11497   0015B8  336A               	rrcf	(??___fladd+2)& (0+255),f,b
 11498   0015BA  3369               	rrcf	(??___fladd+1)& (0+255),f,b
 11499   0015BC  3368               	rrcf	??___fladd& (0+255),f,b
 11500   0015BE  C068  F060         	movff	??___fladd,___fladd@b
 11501   0015C2  C069  F061         	movff	??___fladd+1,___fladd@b+1
 11502   0015C6  C06A  F062         	movff	??___fladd+2,___fladd@b+2
 11503   0015CA  C06B  F063         	movff	??___fladd+3,___fladd@b+3
 11504   0015CE  296E               	incf	___fladd@bexp& (0+255),w,b
 11505   0015D0  B4D8               	btfsc	status,2,c
 11506   0015D2  EFED  F00A         	goto	u5131
 11507   0015D6  EFEF  F00A         	goto	u5130
 11508   0015DA                     u5131:
 11509   0015DA  EFF0  F00A         	goto	l4700
 11510   0015DE                     u5130:
 11511   0015DE                     
 11512                           ; BSR set to: 0
 11513   0015DE  2B6E               	incf	___fladd@bexp& (0+255),f,b
 11514   0015E0                     l4700:
 11515                           
 11516                           ; BSR set to: 0
 11517   0015E0  296E               	incf	___fladd@bexp& (0+255),w,b
 11518   0015E2  B4D8               	btfsc	status,2,c
 11519   0015E4  EFF6  F00A         	goto	u5141
 11520   0015E8  EFF8  F00A         	goto	u5140
 11521   0015EC                     u5141:
 11522   0015EC  EF00  F00B         	goto	l4704
 11523   0015F0                     u5140:
 11524   0015F0                     
 11525                           ; BSR set to: 0
 11526   0015F0  516E               	movf	___fladd@bexp& (0+255),w,b
 11527   0015F2  A4D8               	btfss	status,2,c
 11528   0015F4  EFFE  F00A         	goto	u5151
 11529   0015F8  EF00  F00B         	goto	u5150
 11530   0015FC                     u5151:
 11531   0015FC  EF12  F00B         	goto	l4708
 11532   001600                     u5150:
 11533   001600                     l4704:
 11534                           
 11535                           ; BSR set to: 0
 11536   001600  0E00               	movlw	0
 11537   001602  6F60               	movwf	___fladd@b& (0+255),b
 11538   001604  0E00               	movlw	0
 11539   001606  6F61               	movwf	(___fladd@b+1)& (0+255),b
 11540   001608  0E00               	movlw	0
 11541   00160A  6F62               	movwf	(___fladd@b+2)& (0+255),b
 11542   00160C  0E00               	movlw	0
 11543   00160E  6F63               	movwf	(___fladd@b+3)& (0+255),b
 11544   001610  516E               	movf	___fladd@bexp& (0+255),w,b
 11545   001612  A4D8               	btfss	status,2,c
 11546   001614  EF0E  F00B         	goto	u5161
 11547   001618  EF10  F00B         	goto	u5160
 11548   00161C                     u5161:
 11549   00161C  EF12  F00B         	goto	l4708
 11550   001620                     u5160:
 11551   001620                     
 11552                           ; BSR set to: 0
 11553   001620  0E00               	movlw	0
 11554   001622  6F6C               	movwf	___fladd@signs& (0+255),b
 11555   001624                     l4708:
 11556                           
 11557                           ; BSR set to: 0
 11558   001624  A16E               	btfss	___fladd@bexp& (0+255),0,b
 11559   001626  EF17  F00B         	goto	u5171
 11560   00162A  EF19  F00B         	goto	u5170
 11561   00162E                     u5171:
 11562   00162E  EF1C  F00B         	goto	l4712
 11563   001632                     u5170:
 11564   001632                     
 11565                           ; BSR set to: 0
 11566   001632  8F62               	bsf	(___fladd@b+2)& (0+255),7,b
 11567   001634  EF1D  F00B         	goto	l4714
 11568   001638                     l4712:
 11569                           
 11570                           ; BSR set to: 0
 11571   001638  9F62               	bcf	(___fladd@b+2)& (0+255),7,b
 11572   00163A                     l4714:
 11573                           
 11574                           ; BSR set to: 0
 11575   00163A  90D8               	bcf	status,0,c
 11576   00163C  316E               	rrcf	___fladd@bexp& (0+255),w,b
 11577   00163E  6F63               	movwf	(___fladd@b+3)& (0+255),b
 11578   001640                     
 11579                           ; BSR set to: 0
 11580   001640  AF6C               	btfss	___fladd@signs& (0+255),7,b
 11581   001642  EF25  F00B         	goto	u5181
 11582   001646  EF27  F00B         	goto	u5180
 11583   00164A                     u5181:
 11584   00164A  EF28  F00B         	goto	l4720
 11585   00164E                     u5180:
 11586   00164E                     
 11587                           ; BSR set to: 0
 11588   00164E  8F63               	bsf	(___fladd@b+3)& (0+255),7,b
 11589   001650                     l4720:
 11590                           
 11591                           ; BSR set to: 0
 11592   001650  C060  F060         	movff	___fladd@b,?___fladd
 11593   001654  C061  F061         	movff	___fladd@b+1,?___fladd+1
 11594   001658  C062  F062         	movff	___fladd@b+2,?___fladd+2
 11595   00165C  C063  F063         	movff	___fladd@b+3,?___fladd+3
 11596   001660                     l1125:
 11597                           
 11598                           ; BSR set to: 0
 11599   001660  0012               	return		;funcret
 11600   001662                     __end_of___fladd:
 11601                           	callstack 0
 11602                           
 11603 ;; *************** function ___flmul *****************
 11604 ;; Defined at:
 11605 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
 11606 ;; Parameters:    Size  Location     Type
 11607 ;;  b               4    0[BANK0 ] unsigned char 
 11608 ;;  a               4    4[BANK0 ] unsigned char 
 11609 ;; Auto vars:     Size  Location     Type
 11610 ;;  prod            4   19[BANK0 ] struct .
 11611 ;;  grs             4   13[BANK0 ] unsigned long 
 11612 ;;  temp            2   23[BANK0 ] struct .
 11613 ;;  bexp            1   18[BANK0 ] unsigned char 
 11614 ;;  aexp            1   17[BANK0 ] unsigned char 
 11615 ;;  sign            1   12[BANK0 ] unsigned char 
 11616 ;; Return value:  Size  Location     Type
 11617 ;;                  4    0[BANK0 ] unsigned char 
 11618 ;; Registers used:
 11619 ;;		wreg, status,2, status,0, prodl, prodh
 11620 ;; Tracked objects:
 11621 ;;		On entry : 0/0
 11622 ;;		On exit  : 0/0
 11623 ;;		Unchanged: 0/0
 11624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11625 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11626 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11627 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11628 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11629 ;;Total ram usage:       25 bytes
 11630 ;; Hardware stack levels used: 1
 11631 ;; Hardware stack levels required when called: 3
 11632 ;; This function calls:
 11633 ;;		Nothing
 11634 ;; This function is called by:
 11635 ;;		_ftoa
 11636 ;;		_strtof
 11637 ;;		_parse_MRF_message
 11638 ;; This function uses a non-reentrant model
 11639 ;;
 11640                           
 11641                           	psect	text46
 11642   001AA6                     __ptext46:
 11643                           	callstack 0
 11644   001AA6                     ___flmul:
 11645                           	callstack 23
 11646   001AA6  0100               	movlb	0	; () banked
 11647   001AA8  5163               	movf	(___flmul@b+3)& (0+255),w,b
 11648   001AAA  0B80               	andlw	128
 11649   001AAC  6F6C               	movwf	___flmul@sign& (0+255),b
 11650   001AAE  5163               	movf	(___flmul@b+3)& (0+255),w,b
 11651   001AB0  2563               	addwf	(___flmul@b+3)& (0+255),w,b
 11652   001AB2  6F72               	movwf	___flmul@bexp& (0+255),b
 11653   001AB4                     
 11654                           ; BSR set to: 0
 11655   001AB4  AF62               	btfss	(___flmul@b+2)& (0+255),7,b
 11656   001AB6  EF5F  F00D         	goto	u4321
 11657   001ABA  EF61  F00D         	goto	u4320
 11658   001ABE                     u4321:
 11659   001ABE  EF62  F00D         	goto	l4220
 11660   001AC2                     u4320:
 11661   001AC2                     
 11662                           ; BSR set to: 0
 11663   001AC2  8172               	bsf	___flmul@bexp& (0+255),0,b
 11664   001AC4                     l4220:
 11665                           
 11666                           ; BSR set to: 0
 11667   001AC4  5172               	movf	___flmul@bexp& (0+255),w,b
 11668   001AC6  B4D8               	btfsc	status,2,c
 11669   001AC8  EF68  F00D         	goto	u4331
 11670   001ACC  EF6A  F00D         	goto	u4330
 11671   001AD0                     u4331:
 11672   001AD0  EF7D  F00D         	goto	l4228
 11673   001AD4                     u4330:
 11674   001AD4                     
 11675                           ; BSR set to: 0
 11676   001AD4  2972               	incf	___flmul@bexp& (0+255),w,b
 11677   001AD6  A4D8               	btfss	status,2,c
 11678   001AD8  EF70  F00D         	goto	u4341
 11679   001ADC  EF72  F00D         	goto	u4340
 11680   001AE0                     u4341:
 11681   001AE0  EF7A  F00D         	goto	l4226
 11682   001AE4                     u4340:
 11683   001AE4                     
 11684                           ; BSR set to: 0
 11685   001AE4  0E00               	movlw	0
 11686   001AE6  6F60               	movwf	___flmul@b& (0+255),b
 11687   001AE8  0E00               	movlw	0
 11688   001AEA  6F61               	movwf	(___flmul@b+1)& (0+255),b
 11689   001AEC  0E00               	movlw	0
 11690   001AEE  6F62               	movwf	(___flmul@b+2)& (0+255),b
 11691   001AF0  0E00               	movlw	0
 11692   001AF2  6F63               	movwf	(___flmul@b+3)& (0+255),b
 11693   001AF4                     l4226:
 11694                           
 11695                           ; BSR set to: 0
 11696   001AF4  8F62               	bsf	(___flmul@b+2)& (0+255),7,b
 11697   001AF6  EF85  F00D         	goto	l4230
 11698   001AFA                     l4228:
 11699                           
 11700                           ; BSR set to: 0
 11701   001AFA  0E00               	movlw	0
 11702   001AFC  6F60               	movwf	___flmul@b& (0+255),b
 11703   001AFE  0E00               	movlw	0
 11704   001B00  6F61               	movwf	(___flmul@b+1)& (0+255),b
 11705   001B02  0E00               	movlw	0
 11706   001B04  6F62               	movwf	(___flmul@b+2)& (0+255),b
 11707   001B06  0E00               	movlw	0
 11708   001B08  6F63               	movwf	(___flmul@b+3)& (0+255),b
 11709   001B0A                     l4230:
 11710                           
 11711                           ; BSR set to: 0
 11712   001B0A  5167               	movf	(___flmul@a+3)& (0+255),w,b
 11713   001B0C  0B80               	andlw	128
 11714   001B0E  1B6C               	xorwf	___flmul@sign& (0+255),f,b
 11715   001B10                     
 11716                           ; BSR set to: 0
 11717   001B10  5167               	movf	(___flmul@a+3)& (0+255),w,b
 11718   001B12  2567               	addwf	(___flmul@a+3)& (0+255),w,b
 11719   001B14  6F71               	movwf	___flmul@aexp& (0+255),b
 11720   001B16                     
 11721                           ; BSR set to: 0
 11722   001B16  AF66               	btfss	(___flmul@a+2)& (0+255),7,b
 11723   001B18  EF90  F00D         	goto	u4351
 11724   001B1C  EF92  F00D         	goto	u4350
 11725   001B20                     u4351:
 11726   001B20  EF93  F00D         	goto	l4238
 11727   001B24                     u4350:
 11728   001B24                     
 11729                           ; BSR set to: 0
 11730   001B24  8171               	bsf	___flmul@aexp& (0+255),0,b
 11731   001B26                     l4238:
 11732                           
 11733                           ; BSR set to: 0
 11734   001B26  5171               	movf	___flmul@aexp& (0+255),w,b
 11735   001B28  B4D8               	btfsc	status,2,c
 11736   001B2A  EF99  F00D         	goto	u4361
 11737   001B2E  EF9B  F00D         	goto	u4360
 11738   001B32                     u4361:
 11739   001B32  EFAE  F00D         	goto	l4246
 11740   001B36                     u4360:
 11741   001B36                     
 11742                           ; BSR set to: 0
 11743   001B36  2971               	incf	___flmul@aexp& (0+255),w,b
 11744   001B38  A4D8               	btfss	status,2,c
 11745   001B3A  EFA1  F00D         	goto	u4371
 11746   001B3E  EFA3  F00D         	goto	u4370
 11747   001B42                     u4371:
 11748   001B42  EFAB  F00D         	goto	l4244
 11749   001B46                     u4370:
 11750   001B46                     
 11751                           ; BSR set to: 0
 11752   001B46  0E00               	movlw	0
 11753   001B48  6F64               	movwf	___flmul@a& (0+255),b
 11754   001B4A  0E00               	movlw	0
 11755   001B4C  6F65               	movwf	(___flmul@a+1)& (0+255),b
 11756   001B4E  0E00               	movlw	0
 11757   001B50  6F66               	movwf	(___flmul@a+2)& (0+255),b
 11758   001B52  0E00               	movlw	0
 11759   001B54  6F67               	movwf	(___flmul@a+3)& (0+255),b
 11760   001B56                     l4244:
 11761                           
 11762                           ; BSR set to: 0
 11763   001B56  8F66               	bsf	(___flmul@a+2)& (0+255),7,b
 11764   001B58  EFB6  F00D         	goto	l1202
 11765   001B5C                     l4246:
 11766                           
 11767                           ; BSR set to: 0
 11768   001B5C  0E00               	movlw	0
 11769   001B5E  6F64               	movwf	___flmul@a& (0+255),b
 11770   001B60  0E00               	movlw	0
 11771   001B62  6F65               	movwf	(___flmul@a+1)& (0+255),b
 11772   001B64  0E00               	movlw	0
 11773   001B66  6F66               	movwf	(___flmul@a+2)& (0+255),b
 11774   001B68  0E00               	movlw	0
 11775   001B6A  6F67               	movwf	(___flmul@a+3)& (0+255),b
 11776   001B6C                     l1202:
 11777                           
 11778                           ; BSR set to: 0
 11779   001B6C  5171               	movf	___flmul@aexp& (0+255),w,b
 11780   001B6E  B4D8               	btfsc	status,2,c
 11781   001B70  EFBC  F00D         	goto	u4381
 11782   001B74  EFBE  F00D         	goto	u4380
 11783   001B78                     u4381:
 11784   001B78  EFC6  F00D         	goto	l4250
 11785   001B7C                     u4380:
 11786   001B7C                     
 11787                           ; BSR set to: 0
 11788   001B7C  5172               	movf	___flmul@bexp& (0+255),w,b
 11789   001B7E  A4D8               	btfss	status,2,c
 11790   001B80  EFC4  F00D         	goto	u4391
 11791   001B84  EFC6  F00D         	goto	u4390
 11792   001B88                     u4391:
 11793   001B88  EFD0  F00D         	goto	l4254
 11794   001B8C                     u4390:
 11795   001B8C                     l4250:
 11796                           
 11797                           ; BSR set to: 0
 11798   001B8C  0E00               	movlw	0
 11799   001B8E  6F60               	movwf	?___flmul& (0+255),b
 11800   001B90  0E00               	movlw	0
 11801   001B92  6F61               	movwf	(?___flmul+1)& (0+255),b
 11802   001B94  0E00               	movlw	0
 11803   001B96  6F62               	movwf	(?___flmul+2)& (0+255),b
 11804   001B98  0E00               	movlw	0
 11805   001B9A  6F63               	movwf	(?___flmul+3)& (0+255),b
 11806   001B9C  EF68  F00F         	goto	l1206
 11807   001BA0                     l4254:
 11808                           
 11809                           ; BSR set to: 0
 11810   001BA0  5166               	movf	(___flmul@a+2)& (0+255),w,b
 11811   001BA2  0360               	mulwf	___flmul@b& (0+255),b
 11812   001BA4  CFF3 F077          	movff	prodl,___flmul@temp
 11813   001BA8  CFF4 F078          	movff	prodh,___flmul@temp+1
 11814   001BAC                     
 11815                           ; BSR set to: 0
 11816   001BAC  5177               	movf	___flmul@temp& (0+255),w,b
 11817   001BAE  6F6D               	movwf	___flmul@grs& (0+255),b
 11818   001BB0  6B6E               	clrf	(___flmul@grs+1)& (0+255),b
 11819   001BB2  6B6F               	clrf	(___flmul@grs+2)& (0+255),b
 11820   001BB4  6B70               	clrf	(___flmul@grs+3)& (0+255),b
 11821   001BB6                     
 11822                           ; BSR set to: 0
 11823   001BB6  5178               	movf	(___flmul@temp+1)& (0+255),w,b
 11824   001BB8  6F73               	movwf	___flmul@prod& (0+255),b
 11825   001BBA  6B74               	clrf	(___flmul@prod+1)& (0+255),b
 11826   001BBC  6B75               	clrf	(___flmul@prod+2)& (0+255),b
 11827   001BBE  6B76               	clrf	(___flmul@prod+3)& (0+255),b
 11828   001BC0  5165               	movf	(___flmul@a+1)& (0+255),w,b
 11829   001BC2  0361               	mulwf	(___flmul@b+1)& (0+255),b
 11830   001BC4  CFF3 F077          	movff	prodl,___flmul@temp
 11831   001BC8  CFF4 F078          	movff	prodh,___flmul@temp+1
 11832   001BCC                     
 11833                           ; BSR set to: 0
 11834   001BCC  5177               	movf	___flmul@temp& (0+255),w,b
 11835   001BCE  276D               	addwf	___flmul@grs& (0+255),f,b
 11836   001BD0  0E00               	movlw	0
 11837   001BD2  236E               	addwfc	(___flmul@grs+1)& (0+255),f,b
 11838   001BD4  236F               	addwfc	(___flmul@grs+2)& (0+255),f,b
 11839   001BD6  2370               	addwfc	(___flmul@grs+3)& (0+255),f,b
 11840   001BD8                     
 11841                           ; BSR set to: 0
 11842   001BD8  5178               	movf	(___flmul@temp+1)& (0+255),w,b
 11843   001BDA  2773               	addwf	___flmul@prod& (0+255),f,b
 11844   001BDC  0E00               	movlw	0
 11845   001BDE  2374               	addwfc	(___flmul@prod+1)& (0+255),f,b
 11846   001BE0  2375               	addwfc	(___flmul@prod+2)& (0+255),f,b
 11847   001BE2  2376               	addwfc	(___flmul@prod+3)& (0+255),f,b
 11848   001BE4  5164               	movf	___flmul@a& (0+255),w,b
 11849   001BE6  0362               	mulwf	(___flmul@b+2)& (0+255),b
 11850   001BE8  CFF3 F077          	movff	prodl,___flmul@temp
 11851   001BEC  CFF4 F078          	movff	prodh,___flmul@temp+1
 11852   001BF0                     
 11853                           ; BSR set to: 0
 11854   001BF0  5177               	movf	___flmul@temp& (0+255),w,b
 11855   001BF2  276D               	addwf	___flmul@grs& (0+255),f,b
 11856   001BF4  0E00               	movlw	0
 11857   001BF6  236E               	addwfc	(___flmul@grs+1)& (0+255),f,b
 11858   001BF8  236F               	addwfc	(___flmul@grs+2)& (0+255),f,b
 11859   001BFA  2370               	addwfc	(___flmul@grs+3)& (0+255),f,b
 11860   001BFC                     
 11861                           ; BSR set to: 0
 11862   001BFC  5178               	movf	(___flmul@temp+1)& (0+255),w,b
 11863   001BFE  2773               	addwf	___flmul@prod& (0+255),f,b
 11864   001C00  0E00               	movlw	0
 11865   001C02  2374               	addwfc	(___flmul@prod+1)& (0+255),f,b
 11866   001C04  2375               	addwfc	(___flmul@prod+2)& (0+255),f,b
 11867   001C06  2376               	addwfc	(___flmul@prod+3)& (0+255),f,b
 11868   001C08                     
 11869                           ; BSR set to: 0
 11870   001C08  C06F  F070         	movff	___flmul@grs+2,___flmul@grs+3
 11871   001C0C  C06E  F06F         	movff	___flmul@grs+1,___flmul@grs+2
 11872   001C10  C06D  F06E         	movff	___flmul@grs,___flmul@grs+1
 11873   001C14  6B6D               	clrf	___flmul@grs& (0+255),b
 11874   001C16                     
 11875                           ; BSR set to: 0
 11876   001C16  5164               	movf	___flmul@a& (0+255),w,b
 11877   001C18  0361               	mulwf	(___flmul@b+1)& (0+255),b
 11878   001C1A  CFF3 F077          	movff	prodl,___flmul@temp
 11879   001C1E  CFF4 F078          	movff	prodh,___flmul@temp+1
 11880   001C22                     
 11881                           ; BSR set to: 0
 11882   001C22  5177               	movf	___flmul@temp& (0+255),w,b
 11883   001C24  276D               	addwf	___flmul@grs& (0+255),f,b
 11884   001C26  5178               	movf	(___flmul@temp+1)& (0+255),w,b
 11885   001C28  236E               	addwfc	(___flmul@grs+1)& (0+255),f,b
 11886   001C2A  0E00               	movlw	0
 11887   001C2C  236F               	addwfc	(___flmul@grs+2)& (0+255),f,b
 11888   001C2E  0E00               	movlw	0
 11889   001C30  2370               	addwfc	(___flmul@grs+3)& (0+255),f,b
 11890   001C32                     
 11891                           ; BSR set to: 0
 11892   001C32  5165               	movf	(___flmul@a+1)& (0+255),w,b
 11893   001C34  0360               	mulwf	___flmul@b& (0+255),b
 11894   001C36  CFF3 F077          	movff	prodl,___flmul@temp
 11895   001C3A  CFF4 F078          	movff	prodh,___flmul@temp+1
 11896   001C3E                     
 11897                           ; BSR set to: 0
 11898   001C3E  5177               	movf	___flmul@temp& (0+255),w,b
 11899   001C40  276D               	addwf	___flmul@grs& (0+255),f,b
 11900   001C42  5178               	movf	(___flmul@temp+1)& (0+255),w,b
 11901   001C44  236E               	addwfc	(___flmul@grs+1)& (0+255),f,b
 11902   001C46  0E00               	movlw	0
 11903   001C48  236F               	addwfc	(___flmul@grs+2)& (0+255),f,b
 11904   001C4A  0E00               	movlw	0
 11905   001C4C  2370               	addwfc	(___flmul@grs+3)& (0+255),f,b
 11906   001C4E                     
 11907                           ; BSR set to: 0
 11908   001C4E  C06F  F070         	movff	___flmul@grs+2,___flmul@grs+3
 11909   001C52  C06E  F06F         	movff	___flmul@grs+1,___flmul@grs+2
 11910   001C56  C06D  F06E         	movff	___flmul@grs,___flmul@grs+1
 11911   001C5A  6B6D               	clrf	___flmul@grs& (0+255),b
 11912   001C5C  5164               	movf	___flmul@a& (0+255),w,b
 11913   001C5E  0360               	mulwf	___flmul@b& (0+255),b
 11914   001C60  CFF3 F077          	movff	prodl,___flmul@temp
 11915   001C64  CFF4 F078          	movff	prodh,___flmul@temp+1
 11916   001C68                     
 11917                           ; BSR set to: 0
 11918   001C68  5177               	movf	___flmul@temp& (0+255),w,b
 11919   001C6A  276D               	addwf	___flmul@grs& (0+255),f,b
 11920   001C6C  5178               	movf	(___flmul@temp+1)& (0+255),w,b
 11921   001C6E  236E               	addwfc	(___flmul@grs+1)& (0+255),f,b
 11922   001C70  0E00               	movlw	0
 11923   001C72  236F               	addwfc	(___flmul@grs+2)& (0+255),f,b
 11924   001C74  0E00               	movlw	0
 11925   001C76  2370               	addwfc	(___flmul@grs+3)& (0+255),f,b
 11926   001C78                     
 11927                           ; BSR set to: 0
 11928   001C78  5166               	movf	(___flmul@a+2)& (0+255),w,b
 11929   001C7A  0361               	mulwf	(___flmul@b+1)& (0+255),b
 11930   001C7C  CFF3 F077          	movff	prodl,___flmul@temp
 11931   001C80  CFF4 F078          	movff	prodh,___flmul@temp+1
 11932   001C84  5177               	movf	___flmul@temp& (0+255),w,b
 11933   001C86  2773               	addwf	___flmul@prod& (0+255),f,b
 11934   001C88  5178               	movf	(___flmul@temp+1)& (0+255),w,b
 11935   001C8A  2374               	addwfc	(___flmul@prod+1)& (0+255),f,b
 11936   001C8C  0E00               	movlw	0
 11937   001C8E  2375               	addwfc	(___flmul@prod+2)& (0+255),f,b
 11938   001C90  0E00               	movlw	0
 11939   001C92  2376               	addwfc	(___flmul@prod+3)& (0+255),f,b
 11940   001C94                     
 11941                           ; BSR set to: 0
 11942   001C94  5165               	movf	(___flmul@a+1)& (0+255),w,b
 11943   001C96  0362               	mulwf	(___flmul@b+2)& (0+255),b
 11944   001C98  CFF3 F077          	movff	prodl,___flmul@temp
 11945   001C9C  CFF4 F078          	movff	prodh,___flmul@temp+1
 11946   001CA0                     
 11947                           ; BSR set to: 0
 11948   001CA0  5177               	movf	___flmul@temp& (0+255),w,b
 11949   001CA2  2773               	addwf	___flmul@prod& (0+255),f,b
 11950   001CA4  5178               	movf	(___flmul@temp+1)& (0+255),w,b
 11951   001CA6  2374               	addwfc	(___flmul@prod+1)& (0+255),f,b
 11952   001CA8  0E00               	movlw	0
 11953   001CAA  2375               	addwfc	(___flmul@prod+2)& (0+255),f,b
 11954   001CAC  0E00               	movlw	0
 11955   001CAE  2376               	addwfc	(___flmul@prod+3)& (0+255),f,b
 11956   001CB0  5166               	movf	(___flmul@a+2)& (0+255),w,b
 11957   001CB2  0362               	mulwf	(___flmul@b+2)& (0+255),b
 11958   001CB4  CFF3 F077          	movff	prodl,___flmul@temp
 11959   001CB8  CFF4 F078          	movff	prodh,___flmul@temp+1
 11960   001CBC                     
 11961                           ; BSR set to: 0
 11962   001CBC  5177               	movf	___flmul@temp& (0+255),w,b
 11963   001CBE  6F68               	movwf	??___flmul& (0+255),b
 11964   001CC0  5178               	movf	(___flmul@temp+1)& (0+255),w,b
 11965   001CC2  6F69               	movwf	(??___flmul+1)& (0+255),b
 11966   001CC4  6B6A               	clrf	(??___flmul+2)& (0+255),b
 11967   001CC6  6B6B               	clrf	(??___flmul+3)& (0+255),b
 11968   001CC8  C06A  F06B         	movff	??___flmul+2,??___flmul+3
 11969   001CCC  C069  F06A         	movff	??___flmul+1,??___flmul+2
 11970   001CD0  C068  F069         	movff	??___flmul,??___flmul+1
 11971   001CD4  6B68               	clrf	??___flmul& (0+255),b
 11972   001CD6  5168               	movf	??___flmul& (0+255),w,b
 11973   001CD8  2773               	addwf	___flmul@prod& (0+255),f,b
 11974   001CDA  5169               	movf	(??___flmul+1)& (0+255),w,b
 11975   001CDC  2374               	addwfc	(___flmul@prod+1)& (0+255),f,b
 11976   001CDE  516A               	movf	(??___flmul+2)& (0+255),w,b
 11977   001CE0  2375               	addwfc	(___flmul@prod+2)& (0+255),f,b
 11978   001CE2  516B               	movf	(??___flmul+3)& (0+255),w,b
 11979   001CE4  2376               	addwfc	(___flmul@prod+3)& (0+255),f,b
 11980   001CE6                     
 11981                           ; BSR set to: 0
 11982   001CE6  C06D  F068         	movff	___flmul@grs,??___flmul
 11983   001CEA  C06E  F069         	movff	___flmul@grs+1,??___flmul+1
 11984   001CEE  C06F  F06A         	movff	___flmul@grs+2,??___flmul+2
 11985   001CF2  C070  F06B         	movff	___flmul@grs+3,??___flmul+3
 11986   001CF6  0E19               	movlw	25
 11987   001CF8  EF83  F00E         	goto	u4400
 11988   001CFC                     u4405:
 11989   001CFC  90D8               	bcf	status,0,c
 11990   001CFE  336B               	rrcf	(??___flmul+3)& (0+255),f,b
 11991   001D00  336A               	rrcf	(??___flmul+2)& (0+255),f,b
 11992   001D02  3369               	rrcf	(??___flmul+1)& (0+255),f,b
 11993   001D04  3368               	rrcf	??___flmul& (0+255),f,b
 11994   001D06                     u4400:
 11995   001D06  2EE8               	decfsz	wreg,f,c
 11996   001D08  EF7E  F00E         	goto	u4405
 11997   001D0C  5168               	movf	??___flmul& (0+255),w,b
 11998   001D0E  2773               	addwf	___flmul@prod& (0+255),f,b
 11999   001D10  5169               	movf	(??___flmul+1)& (0+255),w,b
 12000   001D12  2374               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12001   001D14  516A               	movf	(??___flmul+2)& (0+255),w,b
 12002   001D16  2375               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12003   001D18  516B               	movf	(??___flmul+3)& (0+255),w,b
 12004   001D1A  2376               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12005   001D1C                     
 12006                           ; BSR set to: 0
 12007   001D1C  C06F  F070         	movff	___flmul@grs+2,___flmul@grs+3
 12008   001D20  C06E  F06F         	movff	___flmul@grs+1,___flmul@grs+2
 12009   001D24  C06D  F06E         	movff	___flmul@grs,___flmul@grs+1
 12010   001D28  6B6D               	clrf	___flmul@grs& (0+255),b
 12011   001D2A                     
 12012                           ; BSR set to: 0
 12013   001D2A  5171               	movf	___flmul@aexp& (0+255),w,b
 12014   001D2C  C072  F068         	movff	___flmul@bexp,??___flmul
 12015   001D30  6B69               	clrf	(??___flmul+1)& (0+255),b
 12016   001D32  2768               	addwf	??___flmul& (0+255),f,b
 12017   001D34  0E00               	movlw	0
 12018   001D36  2369               	addwfc	(??___flmul+1)& (0+255),f,b
 12019   001D38  0E82               	movlw	130
 12020   001D3A  2568               	addwf	??___flmul& (0+255),w,b
 12021   001D3C  6F77               	movwf	___flmul@temp& (0+255),b
 12022   001D3E  0EFF               	movlw	255
 12023   001D40  2169               	addwfc	(??___flmul+1)& (0+255),w,b
 12024   001D42  6F78               	movwf	(___flmul@temp+1)& (0+255),b
 12025   001D44  EFB9  F00E         	goto	l4302
 12026   001D48                     l4296:
 12027                           
 12028                           ; BSR set to: 0
 12029   001D48  90D8               	bcf	status,0,c
 12030   001D4A  3773               	rlcf	___flmul@prod& (0+255),f,b
 12031   001D4C  3774               	rlcf	(___flmul@prod+1)& (0+255),f,b
 12032   001D4E  3775               	rlcf	(___flmul@prod+2)& (0+255),f,b
 12033   001D50  3776               	rlcf	(___flmul@prod+3)& (0+255),f,b
 12034   001D52                     
 12035                           ; BSR set to: 0
 12036   001D52  AF70               	btfss	(___flmul@grs+3)& (0+255),7,b
 12037   001D54  EFAE  F00E         	goto	u4411
 12038   001D58  EFB0  F00E         	goto	u4410
 12039   001D5C                     u4411:
 12040   001D5C  EFB1  F00E         	goto	l1209
 12041   001D60                     u4410:
 12042   001D60                     
 12043                           ; BSR set to: 0
 12044   001D60  8173               	bsf	___flmul@prod& (0+255),0,b
 12045   001D62                     l1209:
 12046                           
 12047                           ; BSR set to: 0
 12048   001D62  90D8               	bcf	status,0,c
 12049   001D64  376D               	rlcf	___flmul@grs& (0+255),f,b
 12050   001D66  376E               	rlcf	(___flmul@grs+1)& (0+255),f,b
 12051   001D68  376F               	rlcf	(___flmul@grs+2)& (0+255),f,b
 12052   001D6A  3770               	rlcf	(___flmul@grs+3)& (0+255),f,b
 12053   001D6C  0777               	decf	___flmul@temp& (0+255),f,b
 12054   001D6E  A0D8               	btfss	status,0,c
 12055   001D70  0778               	decf	(___flmul@temp+1)& (0+255),f,b
 12056   001D72                     l4302:
 12057                           
 12058                           ; BSR set to: 0
 12059   001D72  AF75               	btfss	(___flmul@prod+2)& (0+255),7,b
 12060   001D74  EFBE  F00E         	goto	u4421
 12061   001D78  EFC0  F00E         	goto	u4420
 12062   001D7C                     u4421:
 12063   001D7C  EFA4  F00E         	goto	l4296
 12064   001D80                     u4420:
 12065   001D80                     
 12066                           ; BSR set to: 0
 12067   001D80  0E00               	movlw	0
 12068   001D82  6F71               	movwf	___flmul@aexp& (0+255),b
 12069   001D84                     
 12070                           ; BSR set to: 0
 12071   001D84  AF70               	btfss	(___flmul@grs+3)& (0+255),7,b
 12072   001D86  EFC7  F00E         	goto	u4431
 12073   001D8A  EFC9  F00E         	goto	u4430
 12074   001D8E                     u4431:
 12075   001D8E  EFED  F00E         	goto	l1211
 12076   001D92                     u4430:
 12077   001D92                     
 12078                           ; BSR set to: 0
 12079   001D92  0EFF               	movlw	255
 12080   001D94  156D               	andwf	___flmul@grs& (0+255),w,b
 12081   001D96  6F68               	movwf	??___flmul& (0+255),b
 12082   001D98  0EFF               	movlw	255
 12083   001D9A  156E               	andwf	(___flmul@grs+1)& (0+255),w,b
 12084   001D9C  6F69               	movwf	(??___flmul+1)& (0+255),b
 12085   001D9E  0EFF               	movlw	255
 12086   001DA0  156F               	andwf	(___flmul@grs+2)& (0+255),w,b
 12087   001DA2  6F6A               	movwf	(??___flmul+2)& (0+255),b
 12088   001DA4  0E7F               	movlw	127
 12089   001DA6  1570               	andwf	(___flmul@grs+3)& (0+255),w,b
 12090   001DA8  6F6B               	movwf	(??___flmul+3)& (0+255),b
 12091   001DAA  5168               	movf	??___flmul& (0+255),w,b
 12092   001DAC  1169               	iorwf	(??___flmul+1)& (0+255),w,b
 12093   001DAE  116A               	iorwf	(??___flmul+2)& (0+255),w,b
 12094   001DB0  116B               	iorwf	(??___flmul+3)& (0+255),w,b
 12095   001DB2  B4D8               	btfsc	status,2,c
 12096   001DB4  EFDE  F00E         	goto	u4441
 12097   001DB8  EFE0  F00E         	goto	u4440
 12098   001DBC                     u4441:
 12099   001DBC  EFE4  F00E         	goto	l1212
 12100   001DC0                     u4440:
 12101   001DC0                     l4310:
 12102                           
 12103                           ; BSR set to: 0
 12104   001DC0  0E01               	movlw	1
 12105   001DC2  6F71               	movwf	___flmul@aexp& (0+255),b
 12106   001DC4  EFED  F00E         	goto	l1211
 12107   001DC8                     l1212:
 12108                           
 12109                           ; BSR set to: 0
 12110   001DC8  A173               	btfss	___flmul@prod& (0+255),0,b
 12111   001DCA  EFE9  F00E         	goto	u4451
 12112   001DCE  EFEB  F00E         	goto	u4450
 12113   001DD2                     u4451:
 12114   001DD2  EFED  F00E         	goto	l1211
 12115   001DD6                     u4450:
 12116   001DD6  EFE0  F00E         	goto	l4310
 12117   001DDA                     l1211:
 12118                           
 12119                           ; BSR set to: 0
 12120   001DDA  5171               	movf	___flmul@aexp& (0+255),w,b
 12121   001DDC  B4D8               	btfsc	status,2,c
 12122   001DDE  EFF3  F00E         	goto	u4461
 12123   001DE2  EFF5  F00E         	goto	u4460
 12124   001DE6                     u4461:
 12125   001DE6  EF19  F00F         	goto	l4322
 12126   001DEA                     u4460:
 12127   001DEA                     
 12128                           ; BSR set to: 0
 12129   001DEA  0E01               	movlw	1
 12130   001DEC  2773               	addwf	___flmul@prod& (0+255),f,b
 12131   001DEE  0E00               	movlw	0
 12132   001DF0  2374               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12133   001DF2  2375               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12134   001DF4  2376               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12135   001DF6                     
 12136                           ; BSR set to: 0
 12137   001DF6  A176               	btfss	(___flmul@prod+3)& (0+255),0,b
 12138   001DF8  EF00  F00F         	goto	u4471
 12139   001DFC  EF02  F00F         	goto	u4470
 12140   001E00                     u4471:
 12141   001E00  EF19  F00F         	goto	l4322
 12142   001E04                     u4470:
 12143   001E04                     
 12144                           ; BSR set to: 0
 12145   001E04  C073  F068         	movff	___flmul@prod,??___flmul
 12146   001E08  C074  F069         	movff	___flmul@prod+1,??___flmul+1
 12147   001E0C  C075  F06A         	movff	___flmul@prod+2,??___flmul+2
 12148   001E10  C076  F06B         	movff	___flmul@prod+3,??___flmul+3
 12149   001E14  356B               	rlcf	(??___flmul+3)& (0+255),w,b
 12150   001E16  336B               	rrcf	(??___flmul+3)& (0+255),f,b
 12151   001E18  336A               	rrcf	(??___flmul+2)& (0+255),f,b
 12152   001E1A  3369               	rrcf	(??___flmul+1)& (0+255),f,b
 12153   001E1C  3368               	rrcf	??___flmul& (0+255),f,b
 12154   001E1E  C068  F073         	movff	??___flmul,___flmul@prod
 12155   001E22  C069  F074         	movff	??___flmul+1,___flmul@prod+1
 12156   001E26  C06A  F075         	movff	??___flmul+2,___flmul@prod+2
 12157   001E2A  C06B  F076         	movff	??___flmul+3,___flmul@prod+3
 12158   001E2E                     
 12159                           ; BSR set to: 0
 12160   001E2E  4B77               	infsnz	___flmul@temp& (0+255),f,b
 12161   001E30  2B78               	incf	(___flmul@temp+1)& (0+255),f,b
 12162   001E32                     l4322:
 12163                           
 12164                           ; BSR set to: 0
 12165   001E32  BF78               	btfsc	(___flmul@temp+1)& (0+255),7,b
 12166   001E34  EF24  F00F         	goto	u4481
 12167   001E38  5178               	movf	(___flmul@temp+1)& (0+255),w,b
 12168   001E3A  E108               	bnz	u4480
 12169   001E3C  2977               	incf	___flmul@temp& (0+255),w,b
 12170   001E3E  A0D8               	btfss	status,0,c
 12171   001E40  EF24  F00F         	goto	u4481
 12172   001E44  EF26  F00F         	goto	u4480
 12173   001E48                     u4481:
 12174   001E48  EF30  F00F         	goto	l4326
 12175   001E4C                     u4480:
 12176   001E4C                     
 12177                           ; BSR set to: 0
 12178   001E4C  0E00               	movlw	0
 12179   001E4E  6F73               	movwf	___flmul@prod& (0+255),b
 12180   001E50  0E00               	movlw	0
 12181   001E52  6F74               	movwf	(___flmul@prod+1)& (0+255),b
 12182   001E54  0E80               	movlw	128
 12183   001E56  6F75               	movwf	(___flmul@prod+2)& (0+255),b
 12184   001E58  0E7F               	movlw	127
 12185   001E5A  6F76               	movwf	(___flmul@prod+3)& (0+255),b
 12186   001E5C  EF5E  F00F         	goto	l4338
 12187   001E60                     l4326:
 12188                           
 12189                           ; BSR set to: 0
 12190   001E60  BF78               	btfsc	(___flmul@temp+1)& (0+255),7,b
 12191   001E62  EF3D  F00F         	goto	u4490
 12192   001E66  5178               	movf	(___flmul@temp+1)& (0+255),w,b
 12193   001E68  E106               	bnz	u4491
 12194   001E6A  0577               	decf	___flmul@temp& (0+255),w,b
 12195   001E6C  B0D8               	btfsc	status,0,c
 12196   001E6E  EF3B  F00F         	goto	u4491
 12197   001E72  EF3D  F00F         	goto	u4490
 12198   001E76                     u4491:
 12199   001E76  EF49  F00F         	goto	l1219
 12200   001E7A                     u4490:
 12201   001E7A                     
 12202                           ; BSR set to: 0
 12203   001E7A  0E00               	movlw	0
 12204   001E7C  6F73               	movwf	___flmul@prod& (0+255),b
 12205   001E7E  0E00               	movlw	0
 12206   001E80  6F74               	movwf	(___flmul@prod+1)& (0+255),b
 12207   001E82  0E00               	movlw	0
 12208   001E84  6F75               	movwf	(___flmul@prod+2)& (0+255),b
 12209   001E86  0E00               	movlw	0
 12210   001E88  6F76               	movwf	(___flmul@prod+3)& (0+255),b
 12211   001E8A  0E00               	movlw	0
 12212   001E8C  6F6C               	movwf	___flmul@sign& (0+255),b
 12213   001E8E  EF5E  F00F         	goto	l4338
 12214   001E92                     l1219:
 12215                           
 12216                           ; BSR set to: 0
 12217   001E92  C077  F072         	movff	___flmul@temp,___flmul@bexp
 12218   001E96                     
 12219                           ; BSR set to: 0
 12220   001E96  0EFF               	movlw	255
 12221   001E98  1773               	andwf	___flmul@prod& (0+255),f,b
 12222   001E9A  0EFF               	movlw	255
 12223   001E9C  1774               	andwf	(___flmul@prod+1)& (0+255),f,b
 12224   001E9E  0E7F               	movlw	127
 12225   001EA0  1775               	andwf	(___flmul@prod+2)& (0+255),f,b
 12226   001EA2  0E00               	movlw	0
 12227   001EA4  1776               	andwf	(___flmul@prod+3)& (0+255),f,b
 12228   001EA6                     
 12229                           ; BSR set to: 0
 12230   001EA6  A172               	btfss	___flmul@bexp& (0+255),0,b
 12231   001EA8  EF58  F00F         	goto	u4501
 12232   001EAC  EF5A  F00F         	goto	u4500
 12233   001EB0                     u4501:
 12234   001EB0  EF5B  F00F         	goto	l4336
 12235   001EB4                     u4500:
 12236   001EB4                     
 12237                           ; BSR set to: 0
 12238   001EB4  8F75               	bsf	(___flmul@prod+2)& (0+255),7,b
 12239   001EB6                     l4336:
 12240                           
 12241                           ; BSR set to: 0
 12242   001EB6  90D8               	bcf	status,0,c
 12243   001EB8  3172               	rrcf	___flmul@bexp& (0+255),w,b
 12244   001EBA  6F76               	movwf	(___flmul@prod+3)& (0+255),b
 12245   001EBC                     l4338:
 12246                           
 12247                           ; BSR set to: 0
 12248   001EBC  516C               	movf	___flmul@sign& (0+255),w,b
 12249   001EBE  1376               	iorwf	(___flmul@prod+3)& (0+255),f,b
 12250   001EC0                     
 12251                           ; BSR set to: 0
 12252   001EC0  C073  F060         	movff	___flmul@prod,?___flmul
 12253   001EC4  C074  F061         	movff	___flmul@prod+1,?___flmul+1
 12254   001EC8  C075  F062         	movff	___flmul@prod+2,?___flmul+2
 12255   001ECC  C076  F063         	movff	___flmul@prod+3,?___flmul+3
 12256   001ED0                     l1206:
 12257                           
 12258                           ; BSR set to: 0
 12259   001ED0  0012               	return		;funcret
 12260   001ED2                     __end_of___flmul:
 12261                           	callstack 0
 12262                           
 12263 ;; *************** function _init_uart2 *****************
 12264 ;; Defined at:
 12265 ;;		line 13 in file "MCP2221A.c"
 12266 ;; Parameters:    Size  Location     Type
 12267 ;;		None
 12268 ;; Auto vars:     Size  Location     Type
 12269 ;;		None
 12270 ;; Return value:  Size  Location     Type
 12271 ;;                  1    wreg      void 
 12272 ;; Registers used:
 12273 ;;		wreg, status,2
 12274 ;; Tracked objects:
 12275 ;;		On entry : 0/0
 12276 ;;		On exit  : 0/0
 12277 ;;		Unchanged: 0/0
 12278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12283 ;;Total ram usage:        0 bytes
 12284 ;; Hardware stack levels used: 1
 12285 ;; Hardware stack levels required when called: 3
 12286 ;; This function calls:
 12287 ;;		Nothing
 12288 ;; This function is called by:
 12289 ;;		_main
 12290 ;; This function uses a non-reentrant model
 12291 ;;
 12292                           
 12293                           	psect	text47
 12294   004120                     __ptext47:
 12295                           	callstack 0
 12296   004120                     _init_uart2:
 12297                           	callstack 27
 12298   004120                     
 12299                           ;MCP2221A.c: 15:     TXSTA2bits.BRGH = 1;
 12300   004120  8472               	bsf	114,2,c	;volatile
 12301   004122                     
 12302                           ;MCP2221A.c: 16:     SPBRG2 = 51;
 12303   004122  0E33               	movlw	51
 12304   004124  6E75               	movwf	117,c	;volatile
 12305   004126                     
 12306                           ;MCP2221A.c: 17:     TXSTA2bits.SYNC = 0;
 12307   004126  9872               	bcf	114,4,c	;volatile
 12308   004128                     
 12309                           ;MCP2221A.c: 18:     RCSTA2bits.SPEN = 1;
 12310   004128  8E71               	bsf	113,7,c	;volatile
 12311   00412A                     
 12312                           ;MCP2221A.c: 19:     TRISDbits.TRISD7 = 1;
 12313   00412A  8E95               	bsf	149,7,c	;volatile
 12314   00412C                     
 12315                           ;MCP2221A.c: 20:     TXSTA2bits.TX9 = 0;
 12316   00412C  9C72               	bcf	114,6,c	;volatile
 12317   00412E                     
 12318                           ;MCP2221A.c: 21:     RCSTA2bits.RX9 = 0;
 12319   00412E  9C71               	bcf	113,6,c	;volatile
 12320   004130                     
 12321                           ;MCP2221A.c: 22:     RCSTA2bits.CREN = 1;
 12322   004130  8871               	bsf	113,4,c	;volatile
 12323   004132                     
 12324                           ;MCP2221A.c: 23:     TXSTA2bits.TXEN = 1;
 12325   004132  8A72               	bsf	114,5,c	;volatile
 12326   004134  0012               	return		;funcret
 12327   004136                     __end_of_init_uart2:
 12328                           	callstack 0
 12329                           
 12330 ;; *************** function _init_spi *****************
 12331 ;; Defined at:
 12332 ;;		line 13 in file "MRF89XAM.c"
 12333 ;; Parameters:    Size  Location     Type
 12334 ;;		None
 12335 ;; Auto vars:     Size  Location     Type
 12336 ;;		None
 12337 ;; Return value:  Size  Location     Type
 12338 ;;                  1    wreg      void 
 12339 ;; Registers used:
 12340 ;;		wreg, status,2
 12341 ;; Tracked objects:
 12342 ;;		On entry : 0/0
 12343 ;;		On exit  : 0/0
 12344 ;;		Unchanged: 0/0
 12345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12349 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12350 ;;Total ram usage:        0 bytes
 12351 ;; Hardware stack levels used: 1
 12352 ;; Hardware stack levels required when called: 3
 12353 ;; This function calls:
 12354 ;;		Nothing
 12355 ;; This function is called by:
 12356 ;;		_main
 12357 ;; This function uses a non-reentrant model
 12358 ;;
 12359                           
 12360                           	psect	text48
 12361   004148                     __ptext48:
 12362                           	callstack 0
 12363   004148                     _init_spi:
 12364                           	callstack 27
 12365   004148                     
 12366                           ;MRF89XAM.c: 15:     SSP1CON1 = 0b00100001;
 12367   004148  0E21               	movlw	33
 12368   00414A  6EC6               	movwf	198,c	;volatile
 12369   00414C                     
 12370                           ;MRF89XAM.c: 16:     SSP1STATbits.SMP = 0;
 12371   00414C  9EC7               	bcf	199,7,c	;volatile
 12372   00414E                     
 12373                           ;MRF89XAM.c: 17:     SSP1STATbits.CKE = 1;
 12374   00414E  8CC7               	bsf	199,6,c	;volatile
 12375   004150                     
 12376                           ;MRF89XAM.c: 18:     SSP1CON1bits.CKP = 0;
 12377   004150  98C6               	bcf	198,4,c	;volatile
 12378   004152  0012               	return		;funcret
 12379   004154                     __end_of_init_spi:
 12380                           	callstack 0
 12381                           
 12382 ;; *************** function _init_pins *****************
 12383 ;; Defined at:
 12384 ;;		line 215 in file "BeeBot_Main.c"
 12385 ;; Parameters:    Size  Location     Type
 12386 ;;		None
 12387 ;; Auto vars:     Size  Location     Type
 12388 ;;		None
 12389 ;; Return value:  Size  Location     Type
 12390 ;;                  1    wreg      void 
 12391 ;; Registers used:
 12392 ;;		wreg, status,2
 12393 ;; Tracked objects:
 12394 ;;		On entry : 0/0
 12395 ;;		On exit  : 0/0
 12396 ;;		Unchanged: 0/0
 12397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12401 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12402 ;;Total ram usage:        0 bytes
 12403 ;; Hardware stack levels used: 1
 12404 ;; Hardware stack levels required when called: 3
 12405 ;; This function calls:
 12406 ;;		Nothing
 12407 ;; This function is called by:
 12408 ;;		_main
 12409 ;; This function uses a non-reentrant model
 12410 ;;
 12411                           
 12412                           	psect	text49
 12413   003F98                     __ptext49:
 12414                           	callstack 0
 12415   003F98                     _init_pins:
 12416                           	callstack 27
 12417   003F98                     
 12418                           ;BeeBot_Main.c: 218:     TRISDbits.RD6 = 1;
 12419   003F98  8C95               	bsf	149,6,c	;volatile
 12420                           
 12421                           ;BeeBot_Main.c: 219:     TRISDbits.RD6 = 1;
 12422   003F9A  8C95               	bsf	149,6,c	;volatile
 12423                           
 12424                           ;BeeBot_Main.c: 220:     TRISDbits.RD7 = 1;
 12425   003F9C  8E95               	bsf	149,7,c	;volatile
 12426                           
 12427                           ;BeeBot_Main.c: 223:     TRISBbits.RB1 = 1;
 12428   003F9E  8293               	bsf	147,1,c	;volatile
 12429                           
 12430                           ;BeeBot_Main.c: 224:     TRISBbits.RB2 = 1;
 12431   003FA0  8493               	bsf	147,2,c	;volatile
 12432                           
 12433                           ;BeeBot_Main.c: 225:     TRISCbits.RC0 = 0;
 12434   003FA2  9094               	bcf	148,0,c	;volatile
 12435                           
 12436                           ;BeeBot_Main.c: 226:     TRISCbits.RC1 = 0;
 12437   003FA4  9294               	bcf	148,1,c	;volatile
 12438                           
 12439                           ;BeeBot_Main.c: 227:     TRISCbits.RC2 = 1;
 12440   003FA6  8494               	bsf	148,2,c	;volatile
 12441                           
 12442                           ;BeeBot_Main.c: 228:     TRISCbits.RC3 = 0;
 12443   003FA8  9694               	bcf	148,3,c	;volatile
 12444                           
 12445                           ;BeeBot_Main.c: 229:     TRISCbits.RC4 = 1;
 12446   003FAA  8894               	bsf	148,4,c	;volatile
 12447                           
 12448                           ;BeeBot_Main.c: 230:     TRISCbits.RC5 = 0;
 12449   003FAC  9A94               	bcf	148,5,c	;volatile
 12450                           
 12451                           ;BeeBot_Main.c: 231:     LATCbits.LC0 = 1;
 12452   003FAE  808B               	bsf	139,0,c	;volatile
 12453                           
 12454                           ;BeeBot_Main.c: 232:     LATCbits.LC1 = 1;
 12455   003FB0  828B               	bsf	139,1,c	;volatile
 12456                           
 12457                           ;BeeBot_Main.c: 235:     TRISAbits.RA0 = 0;
 12458   003FB2  9092               	bcf	146,0,c	;volatile
 12459                           
 12460                           ;BeeBot_Main.c: 236:     LATAbits.LA0 = 0;
 12461   003FB4  9089               	bcf	137,0,c	;volatile
 12462   003FB6                     
 12463                           ;BeeBot_Main.c: 239:     ANSELA = 0;
 12464   003FB6  0E00               	movlw	0
 12465   003FB8  010F               	movlb	15	; () banked
 12466   003FBA  6F38               	movwf	56,b	;volatile
 12467                           
 12468                           ;BeeBot_Main.c: 240:     ANSELB = 0;
 12469   003FBC  0E00               	movlw	0
 12470   003FBE  6F39               	movwf	57,b	;volatile
 12471                           
 12472                           ;BeeBot_Main.c: 241:     ANSELC = 0;
 12473   003FC0  0E00               	movlw	0
 12474   003FC2  6F3A               	movwf	58,b	;volatile
 12475                           
 12476                           ;BeeBot_Main.c: 242:     ANSELD = 0;
 12477   003FC4  0E00               	movlw	0
 12478   003FC6  6F3B               	movwf	59,b	;volatile
 12479                           
 12480                           ;BeeBot_Main.c: 243:     ANSELE = 0;
 12481   003FC8  0E00               	movlw	0
 12482   003FCA  6F3C               	movwf	60,b	;volatile
 12483   003FCC                     
 12484                           ; BSR set to: 15
 12485   003FCC  0012               	return		;funcret
 12486   003FCE                     __end_of_init_pins:
 12487                           	callstack 0
 12488                           
 12489 ;; *************** function _init_interrupts *****************
 12490 ;; Defined at:
 12491 ;;		line 250 in file "BeeBot_Main.c"
 12492 ;; Parameters:    Size  Location     Type
 12493 ;;		None
 12494 ;; Auto vars:     Size  Location     Type
 12495 ;;		None
 12496 ;; Return value:  Size  Location     Type
 12497 ;;                  1    wreg      void 
 12498 ;; Registers used:
 12499 ;;		None
 12500 ;; Tracked objects:
 12501 ;;		On entry : 0/0
 12502 ;;		On exit  : 0/0
 12503 ;;		Unchanged: 0/0
 12504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12508 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12509 ;;Total ram usage:        0 bytes
 12510 ;; Hardware stack levels used: 1
 12511 ;; Hardware stack levels required when called: 3
 12512 ;; This function calls:
 12513 ;;		Nothing
 12514 ;; This function is called by:
 12515 ;;		_main
 12516 ;; This function uses a non-reentrant model
 12517 ;;
 12518                           
 12519                           	psect	text50
 12520   004136                     __ptext50:
 12521                           	callstack 0
 12522   004136                     _init_interrupts:
 12523                           	callstack 27
 12524   004136                     
 12525                           ;BeeBot_Main.c: 252:     RCONbits.IPEN = 0;
 12526   004136  9ED0               	bcf	208,7,c	;volatile
 12527                           
 12528                           ;BeeBot_Main.c: 253:     INTCONbits.GIE = 0;
 12529   004138  9EF2               	bcf	242,7,c	;volatile
 12530                           
 12531                           ;BeeBot_Main.c: 256:     PIE3bits.RC2IE = 1;
 12532   00413A  8AA3               	bsf	163,5,c	;volatile
 12533                           
 12534                           ;BeeBot_Main.c: 259:     INTCON3bits.INT1IE = 1;
 12535   00413C  86F0               	bsf	240,3,c	;volatile
 12536                           
 12537                           ;BeeBot_Main.c: 260:     INTCON2bits.INTEDG1 = 1;
 12538   00413E  8AF1               	bsf	241,5,c	;volatile
 12539                           
 12540                           ;BeeBot_Main.c: 263:     INTCONbits.PEIE = 1;
 12541   004140  8CF2               	bsf	242,6,c	;volatile
 12542                           
 12543                           ;BeeBot_Main.c: 264:     INTCONbits.GIE = 1;
 12544   004142  8EF2               	bsf	242,7,c	;volatile
 12545                           
 12546                           ;BeeBot_Main.c: 265:     T0CONbits.TMR0ON = 1;
 12547   004144  8ED5               	bsf	213,7,c	;volatile
 12548   004146  0012               	return		;funcret
 12549   004148                     __end_of_init_interrupts:
 12550                           	callstack 0
 12551                           
 12552 ;; *************** function _init_MRF89XAM *****************
 12553 ;; Defined at:
 12554 ;;		line 134 in file "MRF89XAM.c"
 12555 ;; Parameters:    Size  Location     Type
 12556 ;;		None
 12557 ;; Auto vars:     Size  Location     Type
 12558 ;;		None
 12559 ;; Return value:  Size  Location     Type
 12560 ;;                  1    wreg      void 
 12561 ;; Registers used:
 12562 ;;		wreg, status,2, status,0, cstack
 12563 ;; Tracked objects:
 12564 ;;		On entry : 0/0
 12565 ;;		On exit  : 0/0
 12566 ;;		Unchanged: 0/0
 12567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12572 ;;Total ram usage:        0 bytes
 12573 ;; Hardware stack levels used: 1
 12574 ;; Hardware stack levels required when called: 4
 12575 ;; This function calls:
 12576 ;;		_write_spi_reg
 12577 ;; This function is called by:
 12578 ;;		_main
 12579 ;; This function uses a non-reentrant model
 12580 ;;
 12581                           
 12582                           	psect	text51
 12583   003B62                     __ptext51:
 12584                           	callstack 0
 12585   003B62                     _init_MRF89XAM:
 12586                           	callstack 26
 12587   003B62                     
 12588                           ;MRF89XAM.c: 136:     write_spi_reg(0x00, 0b01100010);
 12589   003B62  0E62               	movlw	98
 12590   003B64  0100               	movlb	0	; () banked
 12591   003B66  6F60               	movwf	write_spi_reg@data& (0+255),b
 12592   003B68  0E00               	movlw	0
 12593   003B6A  EC72  F01F         	call	_write_spi_reg
 12594                           
 12595                           ;MRF89XAM.c: 137:     write_spi_reg(0x01, 0b10101100);
 12596   003B6E  0EAC               	movlw	172
 12597   003B70  0100               	movlb	0	; () banked
 12598   003B72  6F60               	movwf	write_spi_reg@data& (0+255),b
 12599   003B74  0E01               	movlw	1
 12600   003B76  EC72  F01F         	call	_write_spi_reg
 12601                           
 12602                           ;MRF89XAM.c: 138:     write_spi_reg(0x05, 0b00001000);
 12603   003B7A  0E08               	movlw	8
 12604   003B7C  0100               	movlb	0	; () banked
 12605   003B7E  6F60               	movwf	write_spi_reg@data& (0+255),b
 12606   003B80  0E05               	movlw	5
 12607   003B82  EC72  F01F         	call	_write_spi_reg
 12608                           
 12609                           ;MRF89XAM.c: 139:     write_spi_reg(0x0D, 0b10111000);
 12610   003B86  0EB8               	movlw	184
 12611   003B88  0100               	movlb	0	; () banked
 12612   003B8A  6F60               	movwf	write_spi_reg@data& (0+255),b
 12613   003B8C  0E0D               	movlw	13
 12614   003B8E  EC72  F01F         	call	_write_spi_reg
 12615                           
 12616                           ;MRF89XAM.c: 140:     write_spi_reg(0x0E, 0b00011101);
 12617   003B92  0E1D               	movlw	29
 12618   003B94  0100               	movlb	0	; () banked
 12619   003B96  6F60               	movwf	write_spi_reg@data& (0+255),b
 12620   003B98  0E0E               	movlw	14
 12621   003B9A  EC72  F01F         	call	_write_spi_reg
 12622                           
 12623                           ;MRF89XAM.c: 141:     write_spi_reg(0x0F, 0b11111111);
 12624   003B9E  0EFF               	movlw	255
 12625   003BA0  0100               	movlb	0	; () banked
 12626   003BA2  6F60               	movwf	write_spi_reg@data& (0+255),b
 12627   003BA4  0E0F               	movlw	15
 12628   003BA6  EC72  F01F         	call	_write_spi_reg
 12629                           
 12630                           ;MRF89XAM.c: 142:     write_spi_reg(0x1B, 0b00111100);
 12631   003BAA  0E3C               	movlw	60
 12632   003BAC  0100               	movlb	0	; () banked
 12633   003BAE  6F60               	movwf	write_spi_reg@data& (0+255),b
 12634   003BB0  0E1B               	movlw	27
 12635   003BB2  EC72  F01F         	call	_write_spi_reg
 12636                           
 12637                           ;MRF89XAM.c: 143:     write_spi_reg(0x1C, 0b00001000);
 12638   003BB6  0E08               	movlw	8
 12639   003BB8  0100               	movlb	0	; () banked
 12640   003BBA  6F60               	movwf	write_spi_reg@data& (0+255),b
 12641   003BBC  0E1C               	movlw	28
 12642   003BBE  EC72  F01F         	call	_write_spi_reg
 12643   003BC2  0012               	return		;funcret
 12644   003BC4                     __end_of_init_MRF89XAM:
 12645                           	callstack 0
 12646                           
 12647 ;; *************** function _write_spi_reg *****************
 12648 ;; Defined at:
 12649 ;;		line 28 in file "MRF89XAM.c"
 12650 ;; Parameters:    Size  Location     Type
 12651 ;;  reg_address     1    wreg     unsigned char 
 12652 ;;  data            1    0[BANK0 ] unsigned char 
 12653 ;; Auto vars:     Size  Location     Type
 12654 ;;  reg_address     1    1[BANK0 ] unsigned char 
 12655 ;;  address_byte    1    2[BANK0 ] unsigned char 
 12656 ;;  dummy           1    0        unsigned char 
 12657 ;; Return value:  Size  Location     Type
 12658 ;;                  1    wreg      void 
 12659 ;; Registers used:
 12660 ;;		wreg, status,2, status,0
 12661 ;; Tracked objects:
 12662 ;;		On entry : 0/0
 12663 ;;		On exit  : 0/0
 12664 ;;		Unchanged: 0/0
 12665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12666 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12667 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12669 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12670 ;;Total ram usage:        3 bytes
 12671 ;; Hardware stack levels used: 1
 12672 ;; Hardware stack levels required when called: 3
 12673 ;; This function calls:
 12674 ;;		Nothing
 12675 ;; This function is called by:
 12676 ;;		_init_MRF89XAM
 12677 ;;		_transmit_string_MRF89XAM
 12678 ;;		_transmit_MRF89XAM
 12679 ;; This function uses a non-reentrant model
 12680 ;;
 12681                           
 12682                           	psect	text52
 12683   003EE4                     __ptext52:
 12684                           	callstack 0
 12685   003EE4                     _write_spi_reg:
 12686                           	callstack 26
 12687                           
 12688                           ;incstack = 0
 12689                           ;write_spi_reg@reg_address stored from wreg
 12690   003EE4  0100               	movlb	0	; () banked
 12691   003EE6  6F61               	movwf	write_spi_reg@reg_address& (0+255),b
 12692   003EE8                     
 12693                           ;MRF89XAM.c: 28: void write_spi_reg(BYTE reg_address, BYTE data);MRF89XAM.c: 29: {;MRF89
      +                          XAM.c: 30:     BYTE address_byte = (BYTE)(reg_address << 1);
 12694   003EE8  0100               	movlb	0	; () banked
 12695   003EEA  5161               	movf	write_spi_reg@reg_address& (0+255),w,b
 12696   003EEC  2561               	addwf	write_spi_reg@reg_address& (0+255),w,b
 12697   003EEE  6F62               	movwf	write_spi_reg@address_byte& (0+255),b
 12698                           
 12699                           ;MRF89XAM.c: 31:     address_byte &= 0b00111110;
 12700   003EF0  0E3E               	movlw	62
 12701   003EF2  1762               	andwf	write_spi_reg@address_byte& (0+255),f,b
 12702   003EF4                     
 12703                           ; BSR set to: 0
 12704                           ;MRF89XAM.c: 36:     LATCbits.LC0 = 0;
 12705   003EF4  908B               	bcf	139,0,c	;volatile
 12706   003EF6                     
 12707                           ; BSR set to: 0
 12708   003EF6  50C9               	movf	201,w,c	;volatile
 12709   003EF8                     
 12710                           ; BSR set to: 0
 12711                           ;MRF89XAM.c: 40:     SSP1BUF = address_byte;
 12712   003EF8  C062  FFC9         	movff	write_spi_reg@address_byte,4041	;volatile
 12713   003EFC                     l286:
 12714   003EFC  A0C7               	btfss	199,0,c	;volatile
 12715   003EFE  EF83  F01F         	goto	u6341
 12716   003F02  EF85  F01F         	goto	u6340
 12717   003F06                     u6341:
 12718   003F06  EF7E  F01F         	goto	l286
 12719   003F0A                     u6340:
 12720   003F0A  50C9               	movf	201,w,c	;volatile
 12721                           
 12722                           ;MRF89XAM.c: 45:     SSP1BUF = data;
 12723   003F0C  C060  FFC9         	movff	write_spi_reg@data,4041	;volatile
 12724   003F10                     l289:
 12725   003F10  A0C7               	btfss	199,0,c	;volatile
 12726   003F12  EF8D  F01F         	goto	u6351
 12727   003F16  EF8F  F01F         	goto	u6350
 12728   003F1A                     u6351:
 12729   003F1A  EF88  F01F         	goto	l289
 12730   003F1E                     u6350:
 12731   003F1E  50C9               	movf	201,w,c	;volatile
 12732                           
 12733                           ;MRF89XAM.c: 50:     LATCbits.LC0 = 1;
 12734   003F20  808B               	bsf	139,0,c	;volatile
 12735   003F22  0012               	return		;funcret
 12736   003F24                     __end_of_write_spi_reg:
 12737                           	callstack 0
 12738                           
 12739 ;; *************** function _ISR *****************
 12740 ;; Defined at:
 12741 ;;		line 272 in file "BeeBot_Main.c"
 12742 ;; Parameters:    Size  Location     Type
 12743 ;;		None
 12744 ;; Auto vars:     Size  Location     Type
 12745 ;;  temp_receive   40   27[COMRAM] unsigned char [40]
 12746 ;;  usb_input       1   68[COMRAM] unsigned char 
 12747 ;;  MRF_input       1   67[COMRAM] unsigned char 
 12748 ;; Return value:  Size  Location     Type
 12749 ;;                  1    wreg      void 
 12750 ;; Registers used:
 12751 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12752 ;; Tracked objects:
 12753 ;;		On entry : 0/0
 12754 ;;		On exit  : 0/0
 12755 ;;		Unchanged: 0/0
 12756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12758 ;;      Locals:        42       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12759 ;;      Temps:         10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12760 ;;      Totals:        52       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12761 ;;Total ram usage:       52 bytes
 12762 ;; Hardware stack levels used: 1
 12763 ;; Hardware stack levels required when called: 2
 12764 ;; This function calls:
 12765 ;;		_append_string
 12766 ;;		_read_byte_usb
 12767 ;;		_receive_MRF89XAM
 12768 ;;		i2_strlen
 12769 ;; This function is called by:
 12770 ;;		Interrupt level 2
 12771 ;; This function uses a non-reentrant model
 12772 ;;
 12773                           
 12774                           	psect	intcode
 12775   000008                     __pintcode:
 12776                           	callstack 0
 12777   000008                     _ISR:
 12778                           	callstack 18
 12779                           
 12780                           ;incstack = 0
 12781   000008  8258               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 12782   00000A  CFE9 F012          	movff	fsr0l,??_ISR
 12783   00000E  CFEA F013          	movff	fsr0h,??_ISR+1
 12784   000012  CFE1 F014          	movff	fsr1l,??_ISR+2
 12785   000016  CFE2 F015          	movff	fsr1h,??_ISR+3
 12786   00001A  CFD9 F016          	movff	fsr2l,??_ISR+4
 12787   00001E  CFDA F017          	movff	fsr2h,??_ISR+5
 12788   000022  CFF6 F018          	movff	tblptrl,??_ISR+6
 12789   000026  CFF7 F019          	movff	tblptrh,??_ISR+7
 12790   00002A  CFF8 F01A          	movff	tblptru,??_ISR+8
 12791   00002E  CFF5 F01B          	movff	tablat,??_ISR+9
 12792   000032                     
 12793                           ;BeeBot_Main.c: 275:     char temp_receive_string[40] = "";
 12794   000032  EE22  F000         	lfsr	2,ISR@F7073
 12795   000036  EE10  F01C         	lfsr	1,ISR@temp_receive_string
 12796   00003A  0E27               	movlw	39
 12797   00003C                     i2u695_41:
 12798   00003C  CFDB FFE3          	movff	plusw2,plusw1
 12799   000040  06E8               	decf	wreg,f,c
 12800   000042  E2FC               	bc	i2u695_41
 12801   000044                     
 12802                           ;BeeBot_Main.c: 279:     if(PIR3bits.RC2IF && PIE3bits.RC2IE)
 12803   000044  AAA4               	btfss	164,5,c	;volatile
 12804   000046  EF27  F000         	goto	i2u696_41
 12805   00004A  EF29  F000         	goto	i2u696_40
 12806   00004E                     i2u696_41:
 12807   00004E  EF49  F000         	goto	i2l5754
 12808   000052                     i2u696_40:
 12809   000052  AAA3               	btfss	163,5,c	;volatile
 12810   000054  EF2E  F000         	goto	i2u697_41
 12811   000058  EF30  F000         	goto	i2u697_40
 12812   00005C                     i2u697_41:
 12813   00005C  EF49  F000         	goto	i2l5754
 12814   000060                     i2u697_40:
 12815   000060                     
 12816                           ;BeeBot_Main.c: 280:     {;BeeBot_Main.c: 281:         usb_input = read_byte_usb();
 12817   000060  EC83  F020         	call	_read_byte_usb	;wreg free
 12818   000064  6E45               	movwf	ISR@usb_input^0,c
 12819   000066                     
 12820                           ;BeeBot_Main.c: 282:         if(usb_input == '\n')
 12821   000066  0E0A               	movlw	10
 12822   000068  1845               	xorwf	ISR@usb_input^0,w,c
 12823   00006A  A4D8               	btfss	status,2,c
 12824   00006C  EF3A  F000         	goto	i2u698_41
 12825   000070  EF3C  F000         	goto	i2u698_40
 12826   000074                     i2u698_41:
 12827   000074  EF41  F000         	goto	i2l5752
 12828   000078                     i2u698_40:
 12829   000078                     
 12830                           ;BeeBot_Main.c: 283:             usb_message_received = 1;
 12831   000078  0E01               	movlw	1
 12832   00007A  0100               	movlb	0	; () banked
 12833   00007C  6FFB               	movwf	_usb_message_received& (0+255),b
 12834   00007E  EF49  F000         	goto	i2l5754
 12835   000082                     i2l5752:
 12836                           
 12837                           ;BeeBot_Main.c: 285:             append_string(usb_message, usb_input);
 12838   000082  0E6A               	movlw	low _usb_message
 12839   000084  6E0B               	movwf	append_string@str^0,c
 12840   000086  0E02               	movlw	high _usb_message
 12841   000088  6E0C               	movwf	(append_string@str+1)^0,c
 12842   00008A  C045  F00D         	movff	ISR@usb_input,append_string@ch
 12843   00008E  ECDE  F01C         	call	_append_string	;wreg free
 12844   000092                     i2l5754:
 12845                           
 12846                           ;BeeBot_Main.c: 289:     if(INTCON3bits.INT1IE && INTCON3bits.INT1F)
 12847   000092  A6F0               	btfss	240,3,c	;volatile
 12848   000094  EF4E  F000         	goto	i2u699_41
 12849   000098  EF50  F000         	goto	i2u699_40
 12850   00009C                     i2u699_41:
 12851   00009C  EF84  F000         	goto	i2l182
 12852   0000A0                     i2u699_40:
 12853   0000A0  A0F0               	btfss	240,0,c	;volatile
 12854   0000A2  EF55  F000         	goto	i2u700_41
 12855   0000A6  EF57  F000         	goto	i2u700_40
 12856   0000AA                     i2u700_41:
 12857   0000AA  EF84  F000         	goto	i2l182
 12858   0000AE                     i2u700_40:
 12859   0000AE                     
 12860                           ;BeeBot_Main.c: 290:     {;BeeBot_Main.c: 291:         INTCON3bits.INT1F = 0;
 12861   0000AE  90F0               	bcf	240,0,c	;volatile
 12862   0000B0                     
 12863                           ;BeeBot_Main.c: 292:         if(MRF_message_received == 0)
 12864   0000B0  0100               	movlb	0	; () banked
 12865   0000B2  51FC               	movf	_MRF_message_received& (0+255),w,b
 12866   0000B4  A4D8               	btfss	status,2,c
 12867   0000B6  EF5F  F000         	goto	i2u701_41
 12868   0000BA  EF61  F000         	goto	i2u701_40
 12869   0000BE                     i2u701_41:
 12870   0000BE  EF84  F000         	goto	i2l182
 12871   0000C2                     i2u701_40:
 12872   0000C2                     
 12873                           ; BSR set to: 0
 12874                           ;BeeBot_Main.c: 293:         {;BeeBot_Main.c: 294:             MRF_input = (char) receiv
      +                          e_MRF89XAM();
 12875   0000C2  ECAF  F020         	call	_receive_MRF89XAM	;wreg free
 12876   0000C6  6E44               	movwf	ISR@MRF_input^0,c
 12877   0000C8                     
 12878                           ;BeeBot_Main.c: 295:             append_string(MRF_message, MRF_input);
 12879   0000C8  0E4E               	movlw	low _MRF_message
 12880   0000CA  6E0B               	movwf	append_string@str^0,c
 12881   0000CC  0E01               	movlw	high _MRF_message
 12882   0000CE  6E0C               	movwf	(append_string@str+1)^0,c
 12883   0000D0  C044  F00D         	movff	ISR@MRF_input,append_string@ch
 12884   0000D4  ECDE  F01C         	call	_append_string	;wreg free
 12885   0000D8                     
 12886                           ;BeeBot_Main.c: 296:             if(strlen(MRF_message) == 8)
 12887   0000D8  0E4E               	movlw	low _MRF_message
 12888   0000DA  6E01               	movwf	i2strlen@s^0,c
 12889   0000DC  0E01               	movlw	high _MRF_message
 12890   0000DE  6E02               	movwf	(i2strlen@s+1)^0,c
 12891   0000E0  ECBD  F01E         	call	i2_strlen	;wreg free
 12892   0000E4  0E08               	movlw	8
 12893   0000E6  1801               	xorwf	?i2_strlen^0,w,c
 12894   0000E8  1002               	iorwf	(?i2_strlen+1)^0,w,c
 12895   0000EA  A4D8               	btfss	status,2,c
 12896   0000EC  EF7A  F000         	goto	i2u702_41
 12897   0000F0  EF7C  F000         	goto	i2u702_40
 12898   0000F4                     i2u702_41:
 12899   0000F4  EF81  F000         	goto	i2l5770
 12900   0000F8                     i2u702_40:
 12901   0000F8                     
 12902                           ;BeeBot_Main.c: 297:             {;BeeBot_Main.c: 298:                 MRF_message_recei
      +                          ved = 1;
 12903   0000F8  0E01               	movlw	1
 12904   0000FA  0100               	movlb	0	; () banked
 12905   0000FC  6FFC               	movwf	_MRF_message_received& (0+255),b
 12906                           
 12907                           ;BeeBot_Main.c: 299:             }
 12908   0000FE  EF84  F000         	goto	i2l182
 12909   000102                     i2l5770:
 12910                           
 12911                           ;BeeBot_Main.c: 301:                 MRF_message_received = 0;
 12912   000102  0E00               	movlw	0
 12913   000104  0100               	movlb	0	; () banked
 12914   000106  6FFC               	movwf	_MRF_message_received& (0+255),b
 12915   000108                     i2l182:
 12916   000108  C01B  FFF5         	movff	??_ISR+9,tablat
 12917   00010C  C01A  FFF8         	movff	??_ISR+8,tblptru
 12918   000110  C019  FFF7         	movff	??_ISR+7,tblptrh
 12919   000114  C018  FFF6         	movff	??_ISR+6,tblptrl
 12920   000118  C017  FFDA         	movff	??_ISR+5,fsr2h
 12921   00011C  C016  FFD9         	movff	??_ISR+4,fsr2l
 12922   000120  C015  FFE2         	movff	??_ISR+3,fsr1h
 12923   000124  C014  FFE1         	movff	??_ISR+2,fsr1l
 12924   000128  C013  FFEA         	movff	??_ISR+1,fsr0h
 12925   00012C  C012  FFE9         	movff	??_ISR,fsr0l
 12926   000130  9258               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 12927   000132  0011               	retfie		f
 12928   000134                     __end_of_ISR:
 12929                           	callstack 0
 12930                           
 12931 ;; *************** function _receive_MRF89XAM *****************
 12932 ;; Defined at:
 12933 ;;		line 212 in file "MRF89XAM.c"
 12934 ;; Parameters:    Size  Location     Type
 12935 ;;		None
 12936 ;; Auto vars:     Size  Location     Type
 12937 ;;		None
 12938 ;; Return value:  Size  Location     Type
 12939 ;;                  1    wreg      unsigned char 
 12940 ;; Registers used:
 12941 ;;		wreg, status,2, cstack
 12942 ;; Tracked objects:
 12943 ;;		On entry : 0/0
 12944 ;;		On exit  : 0/0
 12945 ;;		Unchanged: 0/0
 12946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12951 ;;Total ram usage:        0 bytes
 12952 ;; Hardware stack levels used: 1
 12953 ;; Hardware stack levels required when called: 1
 12954 ;; This function calls:
 12955 ;;		_read_spi_data
 12956 ;; This function is called by:
 12957 ;;		_ISR
 12958 ;; This function uses a non-reentrant model
 12959 ;;
 12960                           
 12961                           	psect	text54
 12962   00415E                     __ptext54:
 12963                           	callstack 0
 12964   00415E                     _receive_MRF89XAM:
 12965                           	callstack 18
 12966   00415E                     
 12967                           ;MRF89XAM.c: 215:     return read_spi_data();
 12968   00415E  EC73  F020         	call	_read_spi_data	;wreg free
 12969   004162  0012               	return		;funcret
 12970   004164                     __end_of_receive_MRF89XAM:
 12971                           	callstack 0
 12972                           
 12973 ;; *************** function _read_spi_data *****************
 12974 ;; Defined at:
 12975 ;;		line 111 in file "MRF89XAM.c"
 12976 ;; Parameters:    Size  Location     Type
 12977 ;;		None
 12978 ;; Auto vars:     Size  Location     Type
 12979 ;;  data            1    0[COMRAM] unsigned char 
 12980 ;;  dummy           1    0        unsigned char 
 12981 ;; Return value:  Size  Location     Type
 12982 ;;                  1    wreg      unsigned char 
 12983 ;; Registers used:
 12984 ;;		wreg, status,2
 12985 ;; Tracked objects:
 12986 ;;		On entry : 0/0
 12987 ;;		On exit  : 0/0
 12988 ;;		Unchanged: 0/0
 12989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12991 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12993 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12994 ;;Total ram usage:        1 bytes
 12995 ;; Hardware stack levels used: 1
 12996 ;; This function calls:
 12997 ;;		Nothing
 12998 ;; This function is called by:
 12999 ;;		_receive_MRF89XAM
 13000 ;; This function uses a non-reentrant model
 13001 ;;
 13002                           
 13003                           	psect	text55
 13004   0040E6                     __ptext55:
 13005                           	callstack 0
 13006   0040E6                     _read_spi_data:
 13007                           	callstack 18
 13008   0040E6                     
 13009                           ;MRF89XAM.c: 117:     LATCbits.LC1 = 0;
 13010   0040E6  928B               	bcf	139,1,c	;volatile
 13011   0040E8  50C9               	movf	201,w,c	;volatile
 13012                           
 13013                           ;MRF89XAM.c: 121:     SSP1BUF = 0x00;
 13014   0040EA  0E00               	movlw	0
 13015   0040EC  6EC9               	movwf	201,c	;volatile
 13016   0040EE                     i2l310:
 13017   0040EE  A0C7               	btfss	199,0,c	;volatile
 13018   0040F0  EF7C  F020         	goto	i2u637_41
 13019   0040F4  EF7E  F020         	goto	i2u637_40
 13020   0040F8                     i2u637_41:
 13021   0040F8  EF77  F020         	goto	i2l310
 13022   0040FC                     i2u637_40:
 13023   0040FC                     
 13024                           ;MRF89XAM.c: 123:     data = SSP1BUF;
 13025   0040FC  CFC9 F001          	movff	4041,read_spi_data@data	;volatile
 13026                           
 13027                           ;MRF89XAM.c: 126:     LATCbits.LC1 = 1;
 13028   004100  828B               	bsf	139,1,c	;volatile
 13029   004102                     
 13030                           ;MRF89XAM.c: 128:     return data;
 13031   004102  5001               	movf	read_spi_data@data^0,w,c
 13032   004104  0012               	return		;funcret
 13033   004106                     __end_of_read_spi_data:
 13034                           	callstack 0
 13035                           
 13036 ;; *************** function _read_byte_usb *****************
 13037 ;; Defined at:
 13038 ;;		line 30 in file "MCP2221A.c"
 13039 ;; Parameters:    Size  Location     Type
 13040 ;;		None
 13041 ;; Auto vars:     Size  Location     Type
 13042 ;;  content         1    0[COMRAM] unsigned char 
 13043 ;; Return value:  Size  Location     Type
 13044 ;;                  1    wreg      unsigned char 
 13045 ;; Registers used:
 13046 ;;		wreg, status,2
 13047 ;; Tracked objects:
 13048 ;;		On entry : 0/0
 13049 ;;		On exit  : 0/0
 13050 ;;		Unchanged: 0/0
 13051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13053 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13055 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13056 ;;Total ram usage:        1 bytes
 13057 ;; Hardware stack levels used: 1
 13058 ;; This function calls:
 13059 ;;		Nothing
 13060 ;; This function is called by:
 13061 ;;		_ISR
 13062 ;; This function uses a non-reentrant model
 13063 ;;
 13064                           
 13065                           	psect	text56
 13066   004106                     __ptext56:
 13067                           	callstack 0
 13068   004106                     _read_byte_usb:
 13069                           	callstack 19
 13070   004106                     
 13071                           ;MCP2221A.c: 32:     BYTE content = RCREG2;
 13072   004106  CF74 F001          	movff	3956,read_byte_usb@content	;volatile
 13073                           
 13074                           ;MCP2221A.c: 35:     if(RCSTA2bits.OERR)
 13075   00410A  A271               	btfss	113,1,c	;volatile
 13076   00410C  EF8A  F020         	goto	i2u687_41
 13077   004110  EF8C  F020         	goto	i2u687_40
 13078   004114                     i2u687_41:
 13079   004114  EF8E  F020         	goto	i2l5648
 13080   004118                     i2u687_40:
 13081   004118                     
 13082                           ;MCP2221A.c: 36:     {;MCP2221A.c: 37:         RCSTA2bits.CREN = 0;
 13083   004118  9871               	bcf	113,4,c	;volatile
 13084                           
 13085                           ;MCP2221A.c: 38:         RCSTA2bits.CREN = 1;
 13086   00411A  8871               	bsf	113,4,c	;volatile
 13087   00411C                     i2l5648:
 13088                           
 13089                           ;MCP2221A.c: 40:     return content;
 13090   00411C  5001               	movf	read_byte_usb@content^0,w,c
 13091   00411E  0012               	return		;funcret
 13092   004120                     __end_of_read_byte_usb:
 13093                           	callstack 0
 13094                           
 13095 ;; *************** function _append_string *****************
 13096 ;; Defined at:
 13097 ;;		line 14 in file "BeeBot_Globals.c"
 13098 ;; Parameters:    Size  Location     Type
 13099 ;;  str             2   10[COMRAM] PTR unsigned char 
 13100 ;;		 -> MRF_param2(10), MRF_param1(10), parse_MRF_message@response(9), parse_MRF_message@temp_string(9), 
 13101 ;;		 -> usb_message(100), MRF_message(40), 
 13102 ;;  ch              1   12[COMRAM] unsigned char 
 13103 ;; Auto vars:     Size  Location     Type
 13104 ;;  length          2   15[COMRAM] unsigned int 
 13105 ;; Return value:  Size  Location     Type
 13106 ;;                  1    wreg      void 
 13107 ;; Registers used:
 13108 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13109 ;; Tracked objects:
 13110 ;;		On entry : 0/0
 13111 ;;		On exit  : 0/0
 13112 ;;		Unchanged: 0/0
 13113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13114 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13115 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13116 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13117 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13118 ;;Total ram usage:        7 bytes
 13119 ;; Hardware stack levels used: 1
 13120 ;; Hardware stack levels required when called: 1
 13121 ;; This function calls:
 13122 ;;		i2_strcpy
 13123 ;;		i2_strlen
 13124 ;; This function is called by:
 13125 ;;		_ISR
 13126 ;;		_parse_MRF_message
 13127 ;;		_MRF_parse_message
 13128 ;; This function uses a non-reentrant model
 13129 ;;
 13130                           
 13131                           	psect	text57
 13132   0039BC                     __ptext57:
 13133                           	callstack 0
 13134   0039BC                     _append_string:
 13135                           	callstack 18
 13136   0039BC                     
 13137                           ;BeeBot_Globals.c: 14: void append_string(char *str, char ch);BeeBot_Globals.c: 15: {;Be
      +                          eBot_Globals.c: 16:     unsigned int length = strlen(str);
 13138   0039BC  C00B  F001         	movff	append_string@str,i2strlen@s
 13139   0039C0  C00C  F002         	movff	append_string@str+1,i2strlen@s+1
 13140   0039C4  ECBD  F01E         	call	i2_strlen	;wreg free
 13141   0039C8  C001  F010         	movff	?i2_strlen,append_string@length
 13142   0039CC  C002  F011         	movff	?i2_strlen+1,append_string@length+1
 13143   0039D0                     
 13144                           ;BeeBot_Globals.c: 17:     if(length < 40 - 1)
 13145   0039D0  5011               	movf	(append_string@length+1)^0,w,c
 13146   0039D2  E107               	bnz	i2u688_41
 13147   0039D4  0E27               	movlw	39
 13148   0039D6  5C10               	subwf	append_string@length^0,w,c
 13149   0039D8  B0D8               	btfsc	status,0,c
 13150   0039DA  EFF1  F01C         	goto	i2u688_41
 13151   0039DE  EFF3  F01C         	goto	i2u688_40
 13152   0039E2                     i2u688_41:
 13153   0039E2  EF0B  F01D         	goto	i2l5658
 13154   0039E6                     i2u688_40:
 13155   0039E6                     
 13156                           ;BeeBot_Globals.c: 18:     {;BeeBot_Globals.c: 19:         str[length] = ch;
 13157   0039E6  5010               	movf	append_string@length^0,w,c
 13158   0039E8  240B               	addwf	append_string@str^0,w,c
 13159   0039EA  6ED9               	movwf	fsr2l,c
 13160   0039EC  5011               	movf	(append_string@length+1)^0,w,c
 13161   0039EE  200C               	addwfc	(append_string@str+1)^0,w,c
 13162   0039F0  6EDA               	movwf	fsr2h,c
 13163   0039F2  C00D  FFDF         	movff	append_string@ch,indf2
 13164                           
 13165                           ;BeeBot_Globals.c: 20:         str[length + 1] = '\0';
 13166   0039F6  5010               	movf	append_string@length^0,w,c
 13167   0039F8  240B               	addwf	append_string@str^0,w,c
 13168   0039FA  6E0E               	movwf	??_append_string^0,c
 13169   0039FC  5011               	movf	(append_string@length+1)^0,w,c
 13170   0039FE  200C               	addwfc	(append_string@str+1)^0,w,c
 13171   003A00  6E0F               	movwf	(??_append_string+1)^0,c
 13172   003A02  0E01               	movlw	1
 13173   003A04  240E               	addwf	??_append_string^0,w,c
 13174   003A06  6ED9               	movwf	fsr2l,c
 13175   003A08  0E00               	movlw	0
 13176   003A0A  200F               	addwfc	(??_append_string+1)^0,w,c
 13177   003A0C  6EDA               	movwf	fsr2h,c
 13178   003A0E  0E00               	movlw	0
 13179   003A10  6EDF               	movwf	indf2,c
 13180                           
 13181                           ;BeeBot_Globals.c: 21:     }
 13182   003A12  EF15  F01D         	goto	i2l410
 13183   003A16                     i2l5658:
 13184                           
 13185                           ;BeeBot_Globals.c: 23:         strcpy(str, "");
 13186   003A16  C00B  F001         	movff	append_string@str,i2strcpy@dest
 13187   003A1A  C00C  F002         	movff	append_string@str+1,i2strcpy@dest+1
 13188   003A1E  0E71               	movlw	low (STR_13+8)
 13189   003A20  6E03               	movwf	i2strcpy@src^0,c
 13190   003A22  0EFF               	movlw	high (STR_13+8)
 13191   003A24  6E04               	movwf	(i2strcpy@src+1)^0,c
 13192   003A26  EC12  F01E         	call	i2_strcpy	;wreg free
 13193   003A2A                     i2l410:
 13194   003A2A  0012               	return		;funcret
 13195   003A2C                     __end_of_append_string:
 13196                           	callstack 0
 13197                           
 13198 ;; *************** function i2_strlen *****************
 13199 ;; Defined at:
 13200 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strlen.c"
 13201 ;; Parameters:    Size  Location     Type
 13202 ;;  s               2    0[COMRAM] PTR const unsigned char 
 13203 ;;		 -> parse_usb_message@temp_string(10), parse_usb_message@response(100), MRF_param2(10), MRF_param1(10), 
 13204 ;;		 -> STR_22(8), STR_18(9), STR_17(7), STR_16(7), 
 13205 ;;		 -> STR_15(7), parse_MRF_message@response(9), parse_MRF_message@temp_string(9), usb_message(100), 
 13206 ;;		 -> STR_3(3), MRF_message(40), 
 13207 ;; Auto vars:     Size  Location     Type
 13208 ;;  a               2    2[COMRAM] PTR const unsigned char 
 13209 ;;		 -> parse_usb_message@temp_string(10), parse_usb_message@response(100), MRF_param2(10), MRF_param1(10), 
 13210 ;;		 -> STR_22(8), STR_18(9), STR_17(7), STR_16(7), 
 13211 ;;		 -> STR_15(7), parse_MRF_message@response(9), parse_MRF_message@temp_string(9), usb_message(100), 
 13212 ;;		 -> STR_3(3), MRF_message(40), 
 13213 ;; Return value:  Size  Location     Type
 13214 ;;                  2    0[COMRAM] unsigned int 
 13215 ;; Registers used:
 13216 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 13217 ;; Tracked objects:
 13218 ;;		On entry : 0/0
 13219 ;;		On exit  : 0/0
 13220 ;;		Unchanged: 0/0
 13221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13222 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13223 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13225 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13226 ;;Total ram usage:        4 bytes
 13227 ;; Hardware stack levels used: 1
 13228 ;; This function calls:
 13229 ;;		Nothing
 13230 ;; This function is called by:
 13231 ;;		_ISR
 13232 ;;		_append_string
 13233 ;; This function uses a non-reentrant model
 13234 ;;
 13235                           
 13236                           	psect	text58
 13237   003D7A                     __ptext58:
 13238                           	callstack 0
 13239   003D7A                     i2_strlen:
 13240                           	callstack 19
 13241   003D7A  C001  F003         	movff	i2strlen@s,i2strlen@a
 13242   003D7E  C002  F004         	movff	i2strlen@s+1,i2strlen@a+1
 13243   003D82  EFC5  F01E         	goto	i2l5474
 13244   003D86                     i2l5472:
 13245   003D86  4A01               	infsnz	i2strlen@s^0,f,c
 13246   003D88  2A02               	incf	(i2strlen@s+1)^0,f,c
 13247   003D8A                     i2l5474:
 13248   003D8A  C001  FFF6         	movff	i2strlen@s,tblptrl
 13249   003D8E  C002  FFF7         	movff	i2strlen@s+1,tblptrh
 13250   003D92  0E00               	movlw	low (__mediumconst shr (0+16))
 13251   003D94  6EF8               	movwf	tblptru,c
 13252   003D96  0E0F               	movlw	(high __ramtop+-1)
 13253   003D98  64F7               	cpfsgt	tblptrh,c
 13254   003D9A  D003               	bra	i2u658_47
 13255   003D9C  0008               	tblrd		*
 13256   003D9E  50F5               	movf	tablat,w,c
 13257   003DA0  D005               	bra	i2u658_40
 13258   003DA2                     i2u658_47:
 13259   003DA2  CFF6 FFE9          	movff	tblptrl,fsr0l
 13260   003DA6  CFF7 FFEA          	movff	tblptrh,fsr0h
 13261   003DAA  50EF               	movf	indf0,w,c
 13262   003DAC                     i2u658_40:
 13263   003DAC  0900               	iorlw	0
 13264   003DAE  A4D8               	btfss	status,2,c
 13265   003DB0  EFDC  F01E         	goto	i2u659_41
 13266   003DB4  EFDE  F01E         	goto	i2u659_40
 13267   003DB8                     i2u659_41:
 13268   003DB8  EFC3  F01E         	goto	i2l5472
 13269   003DBC                     i2u659_40:
 13270   003DBC  5003               	movf	i2strlen@a^0,w,c
 13271   003DBE  5C01               	subwf	i2strlen@s^0,w,c
 13272   003DC0  6E01               	movwf	?i2_strlen^0,c
 13273   003DC2  5004               	movf	(i2strlen@a+1)^0,w,c
 13274   003DC4  5802               	subwfb	(i2strlen@s+1)^0,w,c
 13275   003DC6  6E02               	movwf	(?i2_strlen+1)^0,c
 13276   003DC8  0012               	return		;funcret
 13277   003DCA                     __end_ofi2_strlen:
 13278                           	callstack 0
 13279                           
 13280 ;; *************** function i2_strcpy *****************
 13281 ;; Defined at:
 13282 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strcpy.c"
 13283 ;; Parameters:    Size  Location     Type
 13284 ;;  dest            2    0[COMRAM] PTR unsigned char 
 13285 ;;		 -> parse_usb_message@response(100), MRF_param2(10), MRF_param1(10), parse_MRF_message@response(9), 
 13286 ;;		 -> parse_MRF_message@temp_string(9), usb_message(100), MRF_message(40), 
 13287 ;;  src             2    2[COMRAM] PTR const unsigned char 
 13288 ;;		 -> STR_48(2), STR_47(3), STR_46(23), STR_45(14), 
 13289 ;;		 -> STR_44(15), STR_43(8), parse_usb_message@temp_string(10), STR_39(1), 
 13290 ;;		 -> STR_38(1), STR_37(1), STR_36(1), STR_35(1), 
 13291 ;;		 -> STR_21(1), STR_20(2), STR_19(3), STR_12(1), 
 13292 ;;		 -> STR_5(1), STR_4(1), 
 13293 ;; Auto vars:     Size  Location     Type
 13294 ;;  d               2    8[COMRAM] PTR unsigned char 
 13295 ;;		 -> parse_usb_message@response(100), MRF_param2(10), MRF_param1(10), parse_MRF_message@response(9), 
 13296 ;;		 -> parse_MRF_message@temp_string(9), usb_message(100), MRF_message(40), 
 13297 ;;  s               2    6[COMRAM] PTR const unsigned char 
 13298 ;;		 -> STR_48(2), STR_47(3), STR_46(23), STR_45(14), 
 13299 ;;		 -> STR_44(15), STR_43(8), parse_usb_message@temp_string(10), STR_39(1), 
 13300 ;;		 -> STR_38(1), STR_37(1), STR_36(1), STR_35(1), 
 13301 ;;		 -> STR_21(1), STR_20(2), STR_19(3), STR_12(1), 
 13302 ;;		 -> STR_5(1), STR_4(1), 
 13303 ;; Return value:  Size  Location     Type
 13304 ;;                  2    0[COMRAM] PTR unsigned char 
 13305 ;; Registers used:
 13306 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 13307 ;; Tracked objects:
 13308 ;;		On entry : 0/0
 13309 ;;		On exit  : 0/0
 13310 ;;		Unchanged: 0/0
 13311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13312 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13313 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13314 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13315 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13316 ;;Total ram usage:       10 bytes
 13317 ;; Hardware stack levels used: 1
 13318 ;; This function calls:
 13319 ;;		Nothing
 13320 ;; This function is called by:
 13321 ;;		_append_string
 13322 ;; This function uses a non-reentrant model
 13323 ;;
 13324                           
 13325                           	psect	text59
 13326   003C24                     __ptext59:
 13327                           	callstack 0
 13328   003C24                     i2_strcpy:
 13329                           	callstack 18
 13330   003C24  C003  F007         	movff	i2strcpy@src,i2strcpy@s
 13331   003C28  C004  F008         	movff	i2strcpy@src+1,i2strcpy@s+1
 13332   003C2C  C001  F009         	movff	i2strcpy@dest,i2strcpy@d
 13333   003C30  C002  F00A         	movff	i2strcpy@dest+1,i2strcpy@d+1
 13334   003C34                     i2l5468:
 13335   003C34  5007               	movf	i2strcpy@s^0,w,c
 13336   003C36  6E05               	movwf	??i2_strcpy^0,c
 13337   003C38  5008               	movf	(i2strcpy@s+1)^0,w,c
 13338   003C3A  6E06               	movwf	(??i2_strcpy+1)^0,c
 13339   003C3C  4A07               	infsnz	i2strcpy@s^0,f,c
 13340   003C3E  2A08               	incf	(i2strcpy@s+1)^0,f,c
 13341   003C40  C005  FFF6         	movff	??i2_strcpy,tblptrl
 13342   003C44  C006  FFF7         	movff	??i2_strcpy+1,tblptrh
 13343   003C48  0E00               	movlw	low (__mediumconst shr (0+16))
 13344   003C4A  6EF8               	movwf	tblptru,c
 13345   003C4C  C009  FFD9         	movff	i2strcpy@d,fsr2l
 13346   003C50  C00A  FFDA         	movff	i2strcpy@d+1,fsr2h
 13347   003C54  4A09               	infsnz	i2strcpy@d^0,f,c
 13348   003C56  2A0A               	incf	(i2strcpy@d+1)^0,f,c
 13349   003C58  0E0F               	movlw	(high __ramtop+-1)
 13350   003C5A  64F7               	cpfsgt	tblptrh,c
 13351   003C5C  D003               	bra	i2u656_47
 13352   003C5E  0008               	tblrd		*
 13353   003C60  50F5               	movf	tablat,w,c
 13354   003C62  D005               	bra	i2u656_40
 13355   003C64                     i2u656_47:
 13356   003C64  CFF6 FFE9          	movff	tblptrl,fsr0l
 13357   003C68  CFF7 FFEA          	movff	tblptrh,fsr0h
 13358   003C6C  50EF               	movf	indf0,w,c
 13359   003C6E                     i2u656_40:
 13360   003C6E  6EDF               	movwf	indf2,c
 13361   003C70  50DF               	movf	indf2,w,c
 13362   003C72  A4D8               	btfss	status,2,c
 13363   003C74  EF3E  F01E         	goto	i2u657_41
 13364   003C78  EF40  F01E         	goto	i2u657_40
 13365   003C7C                     i2u657_41:
 13366   003C7C  EF1A  F01E         	goto	i2l5468
 13367   003C80                     i2u657_40:
 13368   003C80  0012               	return		;funcret
 13369   003C82                     __end_ofi2_strcpy:
 13370                           	callstack 0
 13371                           
 13372                           	psect	rparam
 13373   000000                     
 13374                           	psect	temp
 13375   000058                     btemp:
 13376                           	callstack 0
 13377   000058                     	ds	1
 13378   000000                     int$flags	set	btemp
 13379   000000                     wtemp8	set	btemp+1
 13380   000000                     ttemp5	set	btemp+1
 13381   000000                     ttemp6	set	btemp+4
 13382   000000                     ttemp7	set	btemp+8
 13383                           
 13384                           	psect	idloc
 13385                           
 13386                           ;Config register IDLOC0 @ 0x200000
 13387                           ;	unspecified, using default values
 13388   200000                     	org	2097152
 13389   200000  FF                 	db	255
 13390                           
 13391                           ;Config register IDLOC1 @ 0x200001
 13392                           ;	unspecified, using default values
 13393   200001                     	org	2097153
 13394   200001  FF                 	db	255
 13395                           
 13396                           ;Config register IDLOC2 @ 0x200002
 13397                           ;	unspecified, using default values
 13398   200002                     	org	2097154
 13399   200002  FF                 	db	255
 13400                           
 13401                           ;Config register IDLOC3 @ 0x200003
 13402                           ;	unspecified, using default values
 13403   200003                     	org	2097155
 13404   200003  FF                 	db	255
 13405                           
 13406                           ;Config register IDLOC4 @ 0x200004
 13407                           ;	unspecified, using default values
 13408   200004                     	org	2097156
 13409   200004  FF                 	db	255
 13410                           
 13411                           ;Config register IDLOC5 @ 0x200005
 13412                           ;	unspecified, using default values
 13413   200005                     	org	2097157
 13414   200005  FF                 	db	255
 13415                           
 13416                           ;Config register IDLOC6 @ 0x200006
 13417                           ;	unspecified, using default values
 13418   200006                     	org	2097158
 13419   200006  FF                 	db	255
 13420                           
 13421                           ;Config register IDLOC7 @ 0x200007
 13422                           ;	unspecified, using default values
 13423   200007                     	org	2097159
 13424   200007  FF                 	db	255
 13425                           
 13426                           	psect	config
 13427                           
 13428                           ; Padding undefined space
 13429   300000                     	org	3145728
 13430   300000  FF                 	db	255
 13431                           
 13432                           ;Config register CONFIG1H @ 0x300001
 13433                           ;	Oscillator Selection bits
 13434                           ;	FOSC = INTIO67, Internal oscillator block
 13435                           ;	4X PLL Enable
 13436                           ;	PLLCFG = OFF, Oscillator used directly
 13437                           ;	Primary clock enable bit
 13438                           ;	PRICLKEN = ON, Primary clock is always enabled
 13439                           ;	Fail-Safe Clock Monitor Enable bit
 13440                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 13441                           ;	Internal/External Oscillator Switchover bit
 13442                           ;	IESO = OFF, Oscillator Switchover mode disabled
 13443   300001                     	org	3145729
 13444   300001  28                 	db	40
 13445                           
 13446                           ;Config register CONFIG2L @ 0x300002
 13447                           ;	Power-up Timer Enable bit
 13448                           ;	PWRTEN = OFF, Power up timer disabled
 13449                           ;	Brown-out Reset Enable bits
 13450                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 13451                           ;	Brown Out Reset Voltage bits
 13452                           ;	BORV = 190, VBOR set to 1.90 V nominal
 13453   300002                     	org	3145730
 13454   300002  1F                 	db	31
 13455                           
 13456                           ;Config register CONFIG2H @ 0x300003
 13457                           ;	Watchdog Timer Enable bits
 13458                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
 13459                           ;	Watchdog Timer Postscale Select bits
 13460                           ;	WDTPS = 32768, 1:32768
 13461   300003                     	org	3145731
 13462   300003  3C                 	db	60
 13463                           
 13464                           ; Padding undefined space
 13465   300004                     	org	3145732
 13466   300004  FF                 	db	255
 13467                           
 13468                           ;Config register CONFIG3H @ 0x300005
 13469                           ;	CCP2 MUX bit
 13470                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
 13471                           ;	PORTB A/D Enable bit
 13472                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
 13473                           ;	P3A/CCP3 Mux bit
 13474                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
 13475                           ;	HFINTOSC Fast Start-up
 13476                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
 13477                           ;	Timer3 Clock input mux bit
 13478                           ;	T3CMX = PORTC0, T3CKI is on RC0
 13479                           ;	ECCP2 B output mux bit
 13480                           ;	P2BMX = PORTD2, P2B is on RD2
 13481                           ;	MCLR Pin Enable bit
 13482                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
 13483   300005                     	org	3145733
 13484   300005  BF                 	db	191
 13485                           
 13486                           ;Config register CONFIG4L @ 0x300006
 13487                           ;	Stack Full/Underflow Reset Enable bit
 13488                           ;	STVREN = ON, Stack full/underflow will cause Reset
 13489                           ;	Single-Supply ICSP Enable bit
 13490                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
 13491                           ;	Extended Instruction Set Enable bit
 13492                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 13493                           ;	Background Debug
 13494                           ;	DEBUG = 0x1, unprogrammed default
 13495   300006                     	org	3145734
 13496   300006  85                 	db	133
 13497                           
 13498                           ; Padding undefined space
 13499   300007                     	org	3145735
 13500   300007  FF                 	db	255
 13501                           
 13502                           ;Config register CONFIG5L @ 0x300008
 13503                           ;	Code Protection Block 0
 13504                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
 13505                           ;	Code Protection Block 1
 13506                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
 13507                           ;	Code Protection Block 2
 13508                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
 13509                           ;	Code Protection Block 3
 13510                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
 13511   300008                     	org	3145736
 13512   300008  0F                 	db	15
 13513                           
 13514                           ;Config register CONFIG5H @ 0x300009
 13515                           ;	Boot Block Code Protection bit
 13516                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 13517                           ;	Data EEPROM Code Protection bit
 13518                           ;	CPD = OFF, Data EEPROM not code-protected
 13519   300009                     	org	3145737
 13520   300009  C0                 	db	192
 13521                           
 13522                           ;Config register CONFIG6L @ 0x30000A
 13523                           ;	Write Protection Block 0
 13524                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 13525                           ;	Write Protection Block 1
 13526                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 13527                           ;	Write Protection Block 2
 13528                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 13529                           ;	Write Protection Block 3
 13530                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
 13531   30000A                     	org	3145738
 13532   30000A  0F                 	db	15
 13533                           
 13534                           ;Config register CONFIG6H @ 0x30000B
 13535                           ;	Configuration Register Write Protection bit
 13536                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 13537                           ;	Boot Block Write Protection bit
 13538                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 13539                           ;	Data EEPROM Write Protection bit
 13540                           ;	WRTD = OFF, Data EEPROM not write-protected
 13541   30000B                     	org	3145739
 13542   30000B  E0                 	db	224
 13543                           
 13544                           ;Config register CONFIG7L @ 0x30000C
 13545                           ;	Table Read Protection Block 0
 13546                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 13547                           ;	Table Read Protection Block 1
 13548                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 13549                           ;	Table Read Protection Block 2
 13550                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 13551                           ;	Table Read Protection Block 3
 13552                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 13553   30000C                     	org	3145740
 13554   30000C  0F                 	db	15
 13555                           
 13556                           ;Config register CONFIG7H @ 0x30000D
 13557                           ;	Boot Block Table Read Protection bit
 13558                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 13559   30000D                     	org	3145741
 13560   30000D  40                 	db	64
 13561                           tosu	equ	0xFFF
 13562                           tosh	equ	0xFFE
 13563                           tosl	equ	0xFFD
 13564                           stkptr	equ	0xFFC
 13565                           pclatu	equ	0xFFB
 13566                           pclath	equ	0xFFA
 13567                           pcl	equ	0xFF9
 13568                           tblptru	equ	0xFF8
 13569                           tblptrh	equ	0xFF7
 13570                           tblptrl	equ	0xFF6
 13571                           tablat	equ	0xFF5
 13572                           prodh	equ	0xFF4
 13573                           prodl	equ	0xFF3
 13574                           indf0	equ	0xFEF
 13575                           postinc0	equ	0xFEE
 13576                           postdec0	equ	0xFED
 13577                           preinc0	equ	0xFEC
 13578                           plusw0	equ	0xFEB
 13579                           fsr0h	equ	0xFEA
 13580                           fsr0l	equ	0xFE9
 13581                           wreg	equ	0xFE8
 13582                           indf1	equ	0xFE7
 13583                           postinc1	equ	0xFE6
 13584                           postdec1	equ	0xFE5
 13585                           preinc1	equ	0xFE4
 13586                           plusw1	equ	0xFE3
 13587                           fsr1h	equ	0xFE2
 13588                           fsr1l	equ	0xFE1
 13589                           bsr	equ	0xFE0
 13590                           indf2	equ	0xFDF
 13591                           postinc2	equ	0xFDE
 13592                           postdec2	equ	0xFDD
 13593                           preinc2	equ	0xFDC
 13594                           plusw2	equ	0xFDB
 13595                           fsr2h	equ	0xFDA
 13596                           fsr2l	equ	0xFD9
 13597                           status	equ	0xFD8

Data Sizes:
    Strings     282
    Constant    0
    Data        6
    BSS         1499
>>>>>>> Stashed changes
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
<<<<<<< Updated upstream
    COMRAM           94     69      74
    BANK0           160     36     158
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
=======
    COMRAM           94     69      87
    BANK0           160    152     159
    BANK1           256    110     252
    BANK2           256      0     238
    BANK3           256      0     140
>>>>>>> Stashed changes
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

<<<<<<< Updated upstream
    strlen@s	PTR const unsigned char  size(2) Largest target is 40
		 -> USB_param2(BANK0[10]), USB_param1(BANK0[10]), MRF_param2(BANK0[10]), MRF_param1(BANK0[10]), 
		 -> ISR@temp_receive_string(COMRAM[40]), usb_message(BANK0[40]), MRF_message(BANK0[40]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 40
		 -> USB_param2(BANK0[10]), USB_param1(BANK0[10]), MRF_param2(BANK0[10]), MRF_param1(BANK0[10]), 
		 -> ISR@temp_receive_string(COMRAM[40]), usb_message(BANK0[40]), MRF_message(BANK0[40]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 40
		 -> USB_param2(BANK0[10]), USB_param1(BANK0[10]), MRF_param2(BANK0[10]), MRF_param1(BANK0[10]), 
		 -> ISR@temp_receive_string(COMRAM[40]), usb_message(BANK0[40]), main@MRF_msg_code(BANK0[4]), MRF_message(BANK0[40]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 40
		 -> USB_param2(BANK0[10]), USB_param1(BANK0[10]), MRF_param2(BANK0[10]), MRF_param1(BANK0[10]), 
		 -> ISR@temp_receive_string(COMRAM[40]), usb_message(BANK0[40]), main@MRF_msg_code(BANK0[4]), MRF_message(BANK0[40]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_25(CODE[1]), STR_24(CODE[1]), STR_23(CODE[1]), STR_22(CODE[1]), 
		 -> STR_21(CODE[1]), ISR@temp_receive_string(COMRAM[40]), STR_8(CODE[1]), STR_7(CODE[1]), 
		 -> MRF_message(BANK0[40]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_25(CODE[1]), STR_24(CODE[1]), STR_23(CODE[1]), STR_22(CODE[1]), 
		 -> STR_21(CODE[1]), ISR@temp_receive_string(COMRAM[40]), STR_8(CODE[1]), STR_7(CODE[1]), 
		 -> MRF_message(BANK0[40]), 

    strcmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_31(CODE[4]), STR_29(CODE[3]), STR_27(CODE[2]), STR_20(CODE[4]), 
		 -> STR_18(CODE[4]), STR_16(CODE[4]), STR_14(CODE[2]), STR_12(CODE[3]), 
		 -> STR_10(CODE[2]), STR_6(CODE[1]), STR_4(CODE[2]), STR_2(CODE[4]), 

    strcmp@l	PTR const unsigned char  size(2) Largest target is 40
		 -> usb_message(BANK0[40]), main@MRF_msg_code(BANK0[4]), MRF_message(BANK0[40]), 

    parse_usb_message@message	PTR unsigned char  size(2) Largest target is 40
		 -> usb_message(BANK0[40]), 

    append_string@str	PTR unsigned char  size(2) Largest target is 40
		 -> USB_param2(BANK0[10]), USB_param1(BANK0[10]), MRF_param2(BANK0[10]), MRF_param1(BANK0[10]), 
		 -> ISR@temp_receive_string(COMRAM[40]), usb_message(BANK0[40]), 

    MRF_parse_message@code	PTR unsigned char  size(2) Largest target is 4
		 -> main@MRF_msg_code(BANK0[4]), 

    MRF_parse_message@message	PTR unsigned char  size(2) Largest target is 40
		 -> MRF_message(BANK0[40]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 40
		 -> USB_param2(BANK0[10]), USB_param1(BANK0[10]), MRF_param2(BANK0[10]), MRF_param1(BANK0[10]), 
		 -> ISR@temp_receive_string(COMRAM[40]), usb_message(BANK0[40]), main@MRF_msg_code(BANK0[4]), MRF_message(BANK0[40]), 
=======
    nanf@s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_79(CODE[1]), 

    parse_usb_message@message	PTR unsigned char  size(2) Largest target is 100
		 -> usb_message(BANK2[100]), 

    atof@s	PTR const unsigned char  size(2) Largest target is 20
		 -> get_coords_usb@latitude(BANK0[20]), get_coords_usb@longitude(BANK0[20]), 

    strtof@s	PTR const unsigned char  size(2) Largest target is 20
		 -> get_coords_usb@latitude(BANK0[20]), get_coords_usb@longitude(BANK0[20]), 

    strtof@res	PTR PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_70(CODE[7]), STR_68(CODE[5]), STR_66(CODE[5]), STR_64(CODE[6]), 
		 -> STR_62(CODE[12]), STR_60(CODE[10]), STR_58(CODE[10]), STR_56(CODE[10]), 
		 -> STR_54(CODE[7]), STR_52(CODE[9]), STR_50(CODE[11]), STR_42(CODE[7]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_70(CODE[7]), STR_68(CODE[5]), STR_66(CODE[5]), STR_64(CODE[6]), 
		 -> STR_62(CODE[12]), STR_60(CODE[10]), STR_58(CODE[10]), STR_56(CODE[10]), 
		 -> STR_54(CODE[7]), STR_52(CODE[9]), STR_50(CODE[11]), STR_42(CODE[7]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 100
		 -> usb_message(BANK2[100]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 100
		 -> usb_message(BANK2[100]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 100
		 -> parse_usb_message@temp_string(BANK1[10]), parse_usb_message@response(BANK1[100]), MRF_param2(BANK1[10]), MRF_param1(BANK1[10]), 
		 -> STR_22(CODE[8]), STR_18(CODE[9]), STR_17(CODE[7]), STR_16(CODE[7]), 
		 -> STR_15(CODE[7]), parse_MRF_message@response(COMRAM[9]), parse_MRF_message@temp_string(COMRAM[9]), usb_message(BANK2[100]), 
		 -> STR_3(CODE[3]), MRF_message(BANK1[40]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 100
		 -> parse_usb_message@temp_string(BANK1[10]), parse_usb_message@response(BANK1[100]), MRF_param2(BANK1[10]), MRF_param1(BANK1[10]), 
		 -> STR_22(CODE[8]), STR_18(CODE[9]), STR_17(CODE[7]), STR_16(CODE[7]), 
		 -> STR_15(CODE[7]), parse_MRF_message@response(COMRAM[9]), parse_MRF_message@temp_string(COMRAM[9]), usb_message(BANK2[100]), 
		 -> STR_3(CODE[3]), MRF_message(BANK1[40]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 100
		 -> parse_usb_message@response(BANK1[100]), MRF_param2(BANK1[10]), MRF_param1(BANK1[10]), parse_MRF_message@response(COMRAM[9]), 
		 -> parse_MRF_message@temp_string(COMRAM[9]), usb_message(BANK2[100]), MRF_message(BANK1[40]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 100
		 -> parse_usb_message@response(BANK1[100]), MRF_param2(BANK1[10]), MRF_param1(BANK1[10]), parse_MRF_message@response(COMRAM[9]), 
		 -> parse_MRF_message@temp_string(COMRAM[9]), usb_message(BANK2[100]), MRF_message(BANK1[40]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_48(CODE[2]), STR_47(CODE[3]), STR_46(CODE[23]), STR_45(CODE[14]), 
		 -> STR_44(CODE[15]), STR_43(CODE[8]), parse_usb_message@temp_string(BANK1[10]), STR_39(CODE[1]), 
		 -> STR_38(CODE[1]), STR_37(CODE[1]), STR_36(CODE[1]), STR_35(CODE[1]), 
		 -> STR_21(CODE[1]), STR_20(CODE[2]), STR_19(CODE[3]), STR_12(CODE[1]), 
		 -> STR_5(CODE[1]), STR_4(CODE[1]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_48(CODE[2]), STR_47(CODE[3]), STR_46(CODE[23]), STR_45(CODE[14]), 
		 -> STR_44(CODE[15]), STR_43(CODE[8]), parse_usb_message@temp_string(BANK1[10]), STR_39(CODE[1]), 
		 -> STR_38(CODE[1]), STR_37(CODE[1]), STR_36(CODE[1]), STR_35(CODE[1]), 
		 -> STR_21(CODE[1]), STR_20(CODE[2]), STR_19(CODE[3]), STR_12(CODE[1]), 
		 -> STR_5(CODE[1]), STR_4(CODE[1]), 

    strcmp@r	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_34(CODE[4]), STR_32(CODE[4]), STR_30(CODE[4]), STR_28(CODE[2]), 
		 -> STR_26(CODE[3]), STR_24(CODE[2]), STR_14(CODE[9]), STR_11(CODE[1]), 
		 -> STR_9(CODE[2]), STR_7(CODE[4]), STR_2(CODE[9]), 

    strcmp@l	PTR const unsigned char  size(2) Largest target is 100
		 -> main@MRF_msg_code(BANK0[4]), usb_message(BANK2[100]), MRF_message(BANK1[40]), 

    strcat@src	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_48(CODE[2]), STR_47(CODE[3]), STR_46(CODE[23]), STR_45(CODE[14]), 
		 -> STR_44(CODE[15]), parse_usb_message@temp_string(BANK1[10]), STR_20(CODE[2]), 

    strcat@dest	PTR unsigned char  size(2) Largest target is 100
		 -> parse_usb_message@response(BANK1[100]), parse_MRF_message@response(COMRAM[9]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_40(CODE[4]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 4
		 -> STR_40(CODE[4]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 4
		 -> STR_40(CODE[4]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S2325$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_40(CODE[4]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 10
		 -> parse_usb_message@temp_string(BANK1[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2272$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2272$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    transmit_string_usb@message	PTR unsigned char  size(2) Largest target is 100
		 -> parse_usb_message@response(BANK1[100]), usb_message(BANK2[100]), 

    ftoa@str	PTR unsigned char  size(2) Largest target is 10
		 -> parse_usb_message@temp_string(BANK1[10]), 

    itoa@s	PTR unsigned char  size(2) Largest target is 10
		 -> parse_usb_message@temp_string(BANK1[10]), 

    reverse_string@s	PTR unsigned char  size(2) Largest target is 10
		 -> parse_usb_message@temp_string(BANK1[10]), parse_MRF_message@temp_string(COMRAM[9]), 

    append_string@str	PTR unsigned char  size(2) Largest target is 100
		 -> MRF_param2(BANK1[10]), MRF_param1(BANK1[10]), parse_MRF_message@response(COMRAM[9]), parse_MRF_message@temp_string(COMRAM[9]), 
		 -> usb_message(BANK2[100]), MRF_message(BANK1[40]), 

    transmit_string_MRF89XAM@tx_str	PTR unsigned char  size(2) Largest target is 9
		 -> STR_22(CODE[8]), STR_18(CODE[9]), STR_17(CODE[7]), STR_16(CODE[7]), 
		 -> STR_15(CODE[7]), parse_MRF_message@response(COMRAM[9]), parse_MRF_message@temp_string(COMRAM[9]), STR_3(CODE[3]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 100
		 -> parse_usb_message@response(BANK1[100]), parse_MRF_message@response(COMRAM[9]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 100
		 -> parse_usb_message@response(BANK1[100]), MRF_param2(BANK1[10]), MRF_param1(BANK1[10]), parse_MRF_message@response(COMRAM[9]), 
		 -> parse_MRF_message@temp_string(COMRAM[9]), usb_message(BANK2[100]), MRF_message(BANK1[40]), 
>>>>>>> Stashed changes


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

<<<<<<< Updated upstream
    _ISR->i2_append_string
    i2_append_string->i2_strcpy
    _receive_MRF89XAM->_read_spi_data

Critical Paths under _main in BANK0

    _main->_MRF_parse_message
    _parse_usb_message->_append_string
    _MRF_parse_message->_append_string
    _append_string->_strcpy
=======
    _ISR->_append_string
    _receive_MRF89XAM->_read_spi_data
    _append_string->i2_strcpy

Critical Paths under _main in BANK0

    _main->_parse_usb_message
    _transmit_string_MRF89XAM->_strlen
    _parse_usb_message->_ftoa
    _transmit_string_usb->_strlen
    _strcat->_strcpy
    _strcpy->_strlen
    _itoa->_reverse_string
    _reverse_string->_strlen
    _get_coords_usb->_atof
    _atof->_strtof
    _strtof->___fldiv
    _strtof->___flmul
    _toupper->_islower
    _isxdigit->_isdigit
    _ftoa->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    ___flsub->___fladd
    _init_MRF89XAM->_write_spi_reg
>>>>>>> Stashed changes

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

<<<<<<< Updated upstream
    None.
=======
    _main->_parse_usb_message
>>>>>>> Stashed changes

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
<<<<<<< Updated upstream
 (0) _main                                                 7     7      0   21110
                                             29 BANK0      7     7      0
                  _MRF_parse_message
                    _init_interrupts
                          _init_pins
=======
 (0) _main                                                23    23      0   56013
                                            129 BANK0     23    23      0
                      _init_MRF89XAM
                    _init_interrupts
                          _init_pins
                           _init_spi
>>>>>>> Stashed changes
                         _init_uart2
                  _parse_usb_message
                             _strcmp
                             _strcpy
<<<<<<< Updated upstream
 ---------------------------------------------------------------------------------
 (1) _parse_usb_message                                   10     8      2    6677
                                             17 BANK0     10     8      2
                      _append_string
                            _isdigit
                             _strcmp
 ---------------------------------------------------------------------------------
 (1) _init_uart2                                           0     0      0       0
 ---------------------------------------------------------------------------------
=======
           _transmit_string_MRF89XAM
                _transmit_string_usb
 ---------------------------------------------------------------------------------
 (1) _transmit_string_MRF89XAM                            10     8      2    2747
                                              4 BANK0      8     6      2
                             _strlen
                     _write_spi_data
                      _write_spi_reg
 ---------------------------------------------------------------------------------
 (2) _write_spi_data                                       2     2      0      24
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _strcmp                                               5     1      4    1784
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (1) _parse_usb_message                                  115   113      2   46506
                                            127 BANK0      2     0      2
                                              0 BANK1    110   110      0
                               _ftoa
                     _get_coords_usb
                               _itoa
                             _strcat
                             _strcpy
                            _strncmp
                _transmit_string_usb
 ---------------------------------------------------------------------------------
 (1) _transmit_string_usb                                  4     2      2     986
                                              4 BANK0      4     2      2
                             _strlen
                  _transmit_byte_usb
 ---------------------------------------------------------------------------------
 (2) _transmit_byte_usb                                    1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _strncmp                                             11     5      6    2961
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (2) _strcat                                               4     0      4    5094
                                             14 BANK0      4     0      4
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _strcpy                                              10     6      4    2780
                                              4 BANK0     10     6      4
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 8     4      4    2617
                                             12 BANK0      8     4      4
                            ___awdiv
                            ___awmod
                     _reverse_string
 ---------------------------------------------------------------------------------
 (3) _reverse_string                                       8     6      2    1143
                                              4 BANK0      8     6      2
                             _strlen
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     448
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     452
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _get_coords_usb                                      62    54      8   17632
                                             50 BANK0     61    53      8
                               _atof
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _atof                                                 4     0      4   15779
                                             46 BANK0      4     0      4
                             _strtof
 ---------------------------------------------------------------------------------
 (4) _strtof                                              21    17      4   15605
                                             25 BANK0     21    17      4
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                             ___lmul
                             ___wmul
                           ___xxtofl
                            _isdigit
                            _isspace
                           _isxdigit
                               _nanf
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              4     2      2     464
                                              4 BANK0      4     2      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              4     2      2     161
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (5) _nanf                                                 8     4      4      99
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) _isxdigit                                             8     6      2    1584
                                              4 BANK0      7     5      2
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              4     2      2    1277
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (5) _isspace                                              5     3      2     335
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     743
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     498
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     486
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     494
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    1551
                                              0 BANK0     25    17      8
 ---------------------------------------------------------------------------------
 (2) _ftoa                                                20    12      8   13909
                                            107 BANK0     20    12      8
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     722
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             21    15      6    5570
                                             88 BANK0     19    13      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6    5219
                                             80 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           23    17      6    4869
                                             62 BANK0     18    12      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                35    25     10    3649
                                             27 BANK0     35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    1999
                                             16 BANK0     11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4     931
                                              9 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4     682
                                              0 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                             18 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     448
                                              0 BANK0     18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     452
                                              0 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (5) ___xxtofl                                            14    10      4    1158
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     533
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    2737
                                             16 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             16     8      8    2262
                                              0 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2352
                                              0 BANK0     25    17      8
 ---------------------------------------------------------------------------------
 (1) _init_uart2                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_spi                                             0     0      0       0
 ---------------------------------------------------------------------------------
>>>>>>> Stashed changes
 (1) _init_pins                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_interrupts                                      0     0      0       0
 ---------------------------------------------------------------------------------
<<<<<<< Updated upstream
 (1) _MRF_parse_message                                   13     9      4   10209
                                             17 BANK0     12     8      4
                      _append_string
                            _isdigit
                             _strcmp
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _strcmp                                               5     1      4    1936
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              4     2      2     389
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _append_string                                        7     4      3    3855
                                             10 BANK0      7     4      3
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               4     2      2     394
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _strcpy                                              10     6      4    2172
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                 52    52      0     976
                                             17 COMRAM    52    52      0
                      _read_byte_usb
                   _receive_MRF89XAM
                    i2_append_string
                           i2_strcpy
 ---------------------------------------------------------------------------------
 (5) i2_append_string                                      7     4      3     597
=======
 (1) _init_MRF89XAM                                        0     0      0    1136
                      _write_spi_reg
 ---------------------------------------------------------------------------------
 (2) _write_spi_reg                                        4     3      1    1136
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _ISR                                                52    52      0    2400
                                             17 COMRAM    52    52      0
                      _append_string
                      _read_byte_usb
                   _receive_MRF89XAM
                           i2_strlen
 ---------------------------------------------------------------------------------
 (12) _receive_MRF89XAM                                    0     0      0      25
                      _read_spi_data
 ---------------------------------------------------------------------------------
 (13) _read_spi_data                                       2     2      0      25
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _read_byte_usb                                       1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _append_string                                       7     4      3    2139
>>>>>>> Stashed changes
                                             10 COMRAM     7     4      3
                           i2_strcpy
                           i2_strlen
 ---------------------------------------------------------------------------------
<<<<<<< Updated upstream
 (6) i2_strlen                                             4     2      2     116
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) i2_strcpy                                            10     6      4     200
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _receive_MRF89XAM                                     0     0      0      25
                      _read_spi_data
 ---------------------------------------------------------------------------------
 (6) _read_spi_data                                        2     2      0      25
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _read_byte_usb                                        1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
=======
 (12) i2_strlen                                            4     2      2     142
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (13) i2_strcpy                                           10     6      4     148
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
>>>>>>> Stashed changes
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
<<<<<<< Updated upstream
   _MRF_parse_message
     _append_string
       _strcpy
       _strlen
     _isdigit
     _strcmp
     _strcpy
     _strlen
   _init_interrupts
   _init_pins
   _init_uart2
   _parse_usb_message
     _append_string
     _isdigit
     _strcmp
   _strcmp
   _strcpy

 _ISR (ROOT)
   _read_byte_usb
   _receive_MRF89XAM
     _read_spi_data
   i2_append_string
     i2_strcpy
     i2_strlen
   i2_strcpy

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0     3C0      54       24.6%
=======
   _init_MRF89XAM
     _write_spi_reg
   _init_interrupts
   _init_pins
   _init_spi
   _init_uart2
   _parse_usb_message
     _ftoa
       ___flmul
       ___flsub
         ___fladd
         ___xxtofl (ARG)
       ___fltol
       ___xxtofl
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
             _fputc
       _strlen
     _get_coords_usb
       _atof
         _strtof
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___lmul
           ___wmul
           ___xxtofl
           _isdigit
           _isspace
           _isxdigit
             _isdigit
           _nanf
           _toupper
             _islower
       _isdigit
     _itoa
       ___awdiv
       ___awmod
       _reverse_string
         _strlen
     _strcat
       _strcpy
         _strlen (ARG)
       _strlen
     _strcpy
     _strncmp
     _transmit_string_usb
       _strlen
       _transmit_byte_usb
   _strcmp
   _strcpy
   _transmit_string_MRF89XAM
     _strlen
     _write_spi_data
     _write_spi_reg
   _transmit_string_usb

 _ISR (ROOT)
   _append_string
     i2_strcpy
     i2_strlen
   _read_byte_usb
   _receive_MRF89XAM
     _read_spi_data
   i2_strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0     3C0      51       24.6%
>>>>>>> Stashed changes
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
<<<<<<< Updated upstream
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      50       7       31.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     24      9E       5       98.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     45      4A       1       78.7%
BITBANK15           38      0       0      34        0.0%
BANK15              38      0       0      35        0.0%
BITBIGSFRllll       30      0       0      52        0.0%
BITBIGSFRlhhlhh     21      0       0      41        0.0%
BITBIGSFRhlhhl      18      0       0      38        0.0%
BITBIGSFRhh          D      0       0      36        0.0%
BITBIGSFRllhlhh      B      0       0      48        0.0%
BITBIGSFRlhhlhl      9      0       0      42        0.0%
BITBIGSFRlhllh       7      0       0      45        0.0%
BITBIGSFRlhhlll      7      0       0      44        0.0%
BITBIGSFRlhlll       7      0       0      46        0.0%
BITBIGSFRlhhllh      4      0       0      43        0.0%
BITBIGSFRllhlhl      2      0       0      49        0.0%
BITBIGSFRlhhh        2      0       0      40        0.0%
BITBIGSFRllhh        1      0       0      47        0.0%
BITBIGSFRlllh        1      0       0      51        0.0%
BITBIGSFRllhll       1      0       0      50        0.0%
BITBIGSFRhlhhh       1      0       0      37        0.0%
BITBIGSFRhll         1      0       0      39        0.0%
=======
BANK3              100      0      8C      11       54.7%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      EE       9       93.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     6E      FC       7       98.4%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     98      9F       5       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     45      57       1       92.6%
BITBANK15           38      0       0      34        0.0%
BANK15              38      0       0      35        0.0%
BITBIGSFRlllll      34      0       0      49        0.0%
BITBIGSFRlhhlhl     21      0       0      42        0.0%
BITBIGSFRhllh       1A      0       0      37        0.0%
BITBIGSFRhh          D      0       0      36        0.0%
BITBIGSFRlhhll       D      0       0      43        0.0%
BITBIGSFRllllhh      B      0       0      48        0.0%
BITBIGSFRlhhlhh      6      0       0      40        0.0%
BITBIGSFRlhllh       6      0       0      44        0.0%
BITBIGSFRllh         5      0       0      46        0.0%
BITBIGSFRlhhh        2      0       0      39        0.0%
BITBIGSFRlllh        1      0       0      47        0.0%
BITBIGSFRlhhlhh      1      0       0      41        0.0%
BITBIGSFRlhlll       1      0       0      45        0.0%
BITBIGSFRhlll        1      0       0      38        0.0%
>>>>>>> Stashed changes
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
<<<<<<< Updated upstream
ABS                  0      0     138      53        0.0%
DATA                 0      0     4F8       3        0.0%
=======
ABS                  0      0     36C      50        0.0%
DATA                 0      0     72C       3        0.0%
>>>>>>> Stashed changes
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
<<<<<<< Updated upstream
Symbol Table                                                                                   Sat Mar 23 19:59:42 2024

                 _usb_message 0062             _parse_usb_message 14A0                           l112 176A  
                         l104 181A                           l122 1B56                           l125 1BC0  
                         l233 149E                           l254 149E                           l263 1942  
                         l338 169C                           l298 1BF0             ??_init_interrupts 00DA  
                         _ISR 0008                           u720 1A00                           u800 1B80  
                         u730 1A12                           u731 1A0E                           u740 1AE0  
                         u900 11CC                           u741 1ADC                           u901 11C8  
                         u750 1896                           u910 11E6                           u727 19F6  
                         u751 1892                           u911 11E2                           u760 18AE  
                         u920 122A                           u840 105A                           u761 18AA  
                         u921 1226                           u841 1056                           u770 18FE  
                         u930 1248                           u850 109A                           u771 18FA  
                         u931 1244                           u851 1096                           u940 1266  
                         u860 10DA                           u941 1262                           u861 10D6  
                         u790 1B7E                           u950 1328                           u870 111A  
                         u791 1B78                           u951 1324                           u871 1116  
                         u960 1346                           u880 115A                           u961 1342  
                         u881 1156                           u970 1356                           u890 119A  
                         u971 1352                           u891 1196                           u980 13B2  
                         u981 13AE                           u990 13DC                           u991 13D8  
                _usb_received 0048            ?_parse_usb_message 00EB                           wreg 000FE8  
                  _TXSTA2bits 000F72                    _USB_param1 00BC                    _USB_param2 00B2  
                        ?_ISR 0001                          l1015 1B84                          l1032 1A12  
                        l1026 18D0                          l1038 1AEE                          l1520 1AC2  
                        l1600 1BDE                          l1514 19B4                          l1522 1AC8  
                        l1530 1864                          l1610 1BEA                          l1602 1BE2  
                        l1516 19C4                          l1524 1AE0                          l1540 18D2  
                        l1532 186C                          l1700 1372                          l1620 101C  
                        l1612 1BEC                          l1604 1BE4                          l1518 1AB6  
                        l1542 18E6                          l1534 1896                          l1702 13B2  
                        l1710 1404                          l1630 1072                          l1622 102E  
                        l1614 1BEE                          l1606 1BE6                          l1544 18FE  
                        l1560 1B58                          l1536 18AE                          l1528 1860  
                        l1704 13DC                          l1712 141A                          l1640 10DA  
                        l1632 109A                          l1624 1032                          l1608 1BE8  
                        l1800 16D8                          l1546 192E                          l1714 1434  
                        l1706 13E4                          l1650 115A                          l1642 10F2  
                        l1634 109A                          l1626 105A                          l1618 101C  
                        l1730 14FA                          l1722 14A0                          l1810 1736  
                        l1802 16E8                          l1708 1400                          l1660 11B2  
                        l1652 115A                          l1644 111A                          l1636 10B2  
                        l1628 105A                          l1580 1B40                          l1740 1574  
                        l1820 17A8                          l1812 175E                          l1804 16EC  
                        l1670 1210                          l1662 11CC                          l1654 1172  
                        l1646 111A                          l1638 10DA                          l1590 1BBA  
                        l1750 15DC                          l1734 1526                          l1726 14CE  
                        l1830 1844                          l1814 1778                          l1806 1700  
                        l1680 12A4                          l1672 122A                          l1664 11E6  
                        l1656 119A                          l1648 1132                          l1592 1BBC  
                        l1584 1BA6                          l1760 166A                          l1744 157C  
                        l1736 1540                          l1816 177C                          l1808 172A  
                        l1824 17CE                          l1690 12F6                          l1682 12C2  
                        l1674 1248                          l1666 11E6                          l1658 119A  
                        l1594 1BBE                          l1586 1BAC                          l1578 1B26  
                        l1754 15F8                          l1762 1686                          l1746 15AE  
                        l1738 155A                          l1826 1828                          l1818 1780  
                        l1692 1328                          l1684 12DE                          l1676 1266  
                        l1668 11FA                          l1588 1BB8                          l1756 1638  
                        l1748 15CC                          l1764 168A                          l1828 183C  
                        l1694 1346                          l1686 12EE                          l1678 1290  
                        l1598 1BDC                          l1758 1662                          l1790 169E  
                        l1696 1356                          l1792 16A2                          l1938 17E4  
                        l1794 16BE                          l1796 16CA                          l1798 16D0  
                        STR_1 100D                          STR_2 100D                          STR_3 1018  
                        STR_4 1018                          STR_6 1013                          STR_7 1013  
                        STR_8 1013                          STR_9 1016                          u1000 1416  
                        u1001 1412                          u1010 1434                          u1011 1430  
                        u1100 15DC                          u1020 14CA                          u1101 15D8  
                        u1021 14C6                          u1110 1638                          u1030 14F6  
                        u1111 1634                          u1031 14F2                          u1120 1662  
                        u1040 1522                          u1200 1778           ??_parse_usb_message 00ED  
                        u1121 165E                          u1041 151E                          u1201 1774  
                        u1130 169C                          u1050 1540                          u1210 17A8  
                        u1131 1698                          u1051 153C                          u1211 17A4  
                        u1060 155A                          u1220 1828                          u1061 1556  
                        u1221 1824                          u1070 1574                          u1230 183C  
                        u1071 1570                          u1231 1838                          u1080 15AE  
                        u1081 15AA                          u1090 15CC                          u1170 16E8  
                        u1091 15C8                          u1171 16E4                          u1180 172A  
                        u1181 1726                          u1190 175E                          u1191 175A  
                        u1357 16AE             ??i2_append_string 000E                          _main 169E  
                        fsr0h 000FEA                          fsr1h 000FE2                          indf0 000FEF  
                        fsr2h 000FDA                          fsr0l 000FE9                          indf1 000FE7  
                        indf2 000FDF                          fsr1l 000FE1                          fsr2l 000FD9  
                        btemp 004B                          start 0132           append_string@length 00E9  
             ??_append_string 00E7               append_string@ch 00E6                  ___param_bank 000000  
                       ??_ISR 0012     __end_of_parse_usb_message 169E                         ?_main 0001  
                       STR_10 1016                         STR_11 1011                         STR_12 1011  
                       STR_20 1001                         STR_21 1013                         STR_13 1014  
                       STR_22 1013                         STR_14 1014                         STR_23 1013  
                       STR_31 100D                         STR_15 1005                         STR_24 1013  
                       STR_16 1005                         STR_32 100D                         STR_25 1013  
                       STR_33 100D                         STR_17 1009                         STR_18 1009  
                       STR_34 100D                         STR_27 1016                         STR_19 1001  
                       STR_29 1011                         _T0CON 000FD5                         i2l302 1BDA  
                       i2l216 1BF2                         i2l137 0106                         i2l219 1C04  
                       i2l263 19B2                         i2l192 1B8E                         i2l194 1B9C  
                       i2l195 1BA4                         _TMR0H 000FD7                         _TMR0L 000FD6  
             __end_of_isdigit 1B86                         _state 0060                         tablat 000FF5  
                       plusw1 000FE3                         plusw2 000FDB                         ttemp5 004C  
                       ttemp6 004F                         ttemp7 0053                         status 000FD8  
                       wtemp8 004C        ISR@temp_receive_string 001C             _MRF_parse_message 101C  
            __end_ofi2_strcpy 1A72              __end_ofi2_strlen 1B26              append_string@str 00E4  
             __initialization 1A72            ?_MRF_parse_message 00EB                  __end_of_main 1860  
         ??_MRF_parse_message 00EF                        ??_main 00F7                 __activetblptr 000002  
                      _ANSELA 000F38                        _ANSELB 000F39                        _ANSELC 000F3A  
                      _ANSELD 000F3B                        _ANSELE 000F3C                        i2l1032 1A70  
                      i2l1038 1B24                        i2l1550 1B86                        i2l1552 1B86  
                      i2l1554 1B88                        i2l1570 1AFC                        i2l1556 1BA2  
                      i2l1564 1A14                        i2l1572 1B00                        i2l1566 1A24  
                      i2l1574 1B18                        i2l1568 1AF0                        i2l1840 0032  
                      i2l1770 1BD8                        i2l1850 0066                        i2l1842 0044  
                      i2l1780 1944                        i2l1860 0098                        i2l1852 0076  
                      i2l1844 0044                        i2l1766 1BC2                        i2l1774 1BF2  
                      i2l1782 1958                        i2l1870 00C0                        i2l1862 009C  
                      i2l1854 0084                        i2l1846 0052                        i2l1838 0032  
                      i2l1768 1BD4                        i2l1776 1C00                        i2l1784 196E  
                      i2l1872 00C6                        i2l1856 0092                        i2l1864 00A0  
                      i2l1848 0060                        i2l1786 199E                        i2l1874 00D8  
                      i2l1866 00AE                        i2l1858 0094                        i2l1876 00DE  
                      i2l1868 00BE                        i2l1878 00F6                        _RCREG1 000FAE  
                      _OSCCON 000FD3                        _TMR0IE 007F95                        _SPBRG2 000F75  
                      _TMR0IF 007F92     __end_of_MRF_parse_message 14A0                        _TXREG1 000FAD  
       MRF_parse_message@code 00ED       parse_usb_message@length 00F2                        clear_0 1A7A  
                      clear_1 1A8C                        clear_2 1A98                        isa$std 000001  
                      _strcmp 1860                        _strcpy 19B4                        _strlen 1AB6  
                   ??_isdigit 00DC                  __mediumconst 0000                        tblptrh 000FF7  
                      tblptrl 000FF6                        tblptru 000FF8                    __accesstop 0060  
     __end_of__initialization 1AA8                 ___rparam_used 000001               _init_interrupts 1BA6  
              __pcstackCOMRAM 0001               i2_append_string 1944                     ?i2_strcpy 0001  
                   ?i2_strlen 0001  MRF_parse_message@param1_full 00F5                    __pbssBANK0 0060  
                  __pbssBANK1 0100                   i2strcpy@src 0003            main@previous_state 00FD  
               _read_byte_usb 1BC2                       ?_strcmp 00DA                       ?_strcpy 00DA  
                     ?_strlen 00DA                 _read_spi_data 1B86                  ISR@MRF_input 0045  
            _MRF_transmitting 004A                       i2u81_40 1A5E                       i2u81_47 1A54  
                     i2u82_40 1A70                       i2u82_41 1A6C                       i2u83_40 1B18  
                     i2u83_41 1B14                       i2u78_40 1B9C                       i2u78_41 1B98  
                     _SSP2BUF 000F6F                    ??i2_strcpy 0005                    ??i2_strlen 0003  
     __end_of_init_interrupts 1BC2      parse_usb_message@counter 00F4      parse_usb_message@message 00EB  
                     __Hparam 0000                       __Lparam 0000              _receive_MRF89XAM 1BF2  
       __end_of_append_string 1944                ?_read_byte_usb 0001       __end_ofi2_append_string 19B4  
                __psmallconst 1000                    _init_uart2 1BDC                       __pcinit 1A72  
                     __ramtop 1000                       __ptext0 169E                       __ptext1 14A0  
                     __ptext2 1BDC                       __ptext3 1B26                       __ptext4 1BA6  
                     __ptext5 101C                       __ptext6 1860                       __ptext7 1B58  
                     __ptext8 18D2                       __ptext9 1AB6                     _T0CONbits 000FD5  
              ?_read_spi_data 0001                       _isdigit 1B58             __end_of_init_pins 1B58  
        end_of_initialization 1AA8                 __Lmediumconst 0000                       postdec1 000FE5  
                     postinc0 000FEE                       postinc2 000FDE                       strcmp@l 00DA  
                     strcmp@r 00DC                       strcpy@d 00E2                       strlen@a 00DC  
                     strcpy@s 00E0                       strlen@s 00DA            i2append_string@str 000B  
                   _PORTBbits 000F81                    _timer_tick 0046                     _PORTDbits 000F83  
                   _TRISBbits 000F93                     _TRISCbits 000F94                     _TRISDbits 000F95  
        _MRF_message_received 0061              ?_init_interrupts 0001      MRF_parse_message@counter 00F6  
    MRF_parse_message@message 00EB               ??_read_byte_usb 0001              ?i2_append_string 000B  
                 ?_init_uart2 0001               ??_read_spi_data 0001                __end_of_strcmp 18D2  
              __end_of_strcpy 1A14                __end_of_strlen 1AF0           start_initialization 1A72  
                 __end_of_ISR 0132                     i2strcpy@d 0009                     i2strlen@a 0003  
                   i2strcpy@s 0007                     i2strlen@s 0001                      ??_strcmp 00DE  
                    ??_strcpy 00DE                      ??_strlen 00DC                   __pbssBIGRAM 0150  
                 __pbssCOMRAM 0046                _current_report 0128                 __pcstackBANK0 00DA  
                ISR@usb_input 0044      __end_of_receive_MRF89XAM 1C06                      ISR@F6726 0100  
                i2strcpy@dest 0001                   _all_reports 0150                     __pintcode 0008  
                 __smallconst 1000                      ?_isdigit 00DA          read_byte_usb@content 0001  
                   _init_pins 1B26                      _LATCbits 000F8B                      _PIE1bits 000F9D  
                    _PIE3bits 000FA3                      i2u114_40 1BD4                      i2u130_40 00BE  
                    i2u114_41 1BD0                      i2u130_41 00BA                      i2u115_40 1C00  
                    i2u131_40 00D8                      i2u115_41 1BFC                      i2u131_41 00D4  
                    i2u116_40 196E                      i2u116_41 196A                      i2u124_41 003C  
                    i2u125_40 0052                      i2u125_41 004E                      i2u126_40 0060  
                    i2u126_41 005C                      i2u127_40 0084                      i2u127_41 0080  
                    i2u128_40 0092                      i2u128_41 008E                      i2u129_40 00AE  
                    i2u129_41 00AA                      _PIR1bits 000F9E                      _RCONbits 000FD0  
           i2append_string@ch 000D              main@MRF_msg_code 00F9       MRF_parse_message@length 00F4  
                    i2_strcpy 1A14                      i2_strlen 1AF0                    ?_init_pins 0001  
                 _INTCON3bits 000FF0                      __Hrparam 0000                      __Lrparam 0000  
                ??_init_uart2 00DA                      __ptext10 19B4                      __ptext12 1944  
                    __ptext13 1AF0                      __ptext14 1A14                      __ptext15 1BF2  
                    __ptext16 1B86                      __ptext17 1BC2                    strcpy@dest 00DA  
        _usb_message_received 0049            __end_of_init_uart2 1BF2         i2append_string@length 0010  
                    isa$xinst 000000                      int$flags 004B                 _append_string 18D2  
       __end_of_read_byte_usb 1BDC                  _SSP2STATbits 000F6D         __end_of_read_spi_data 1BA6  
                  _INTCONbits 000FF2                      isdigit@c 00DA             ?_receive_MRF89XAM 0001  
                 ??_init_pins 00DA                      intlevel2 0000            ??_receive_MRF89XAM 0002  
parse_usb_message@param1_full 00F3                     strcpy@src 00DC                    _RCSTA2bits 000F71  
           read_spi_data@data 0001                ?_append_string 00E4                   _MRF_message 008A  
                  _MRF_param1 00D0                    _MRF_param2 00C6  
=======
Symbol Table                                                                                   Mon Apr 08 11:50:25 2024

                    ___fldiv@aexp 0078                      ___fldiv@bexp 0077  
                    ___fldiv@sign 0070                      ___awdiv@sign 0065  
                     _usb_message 026A               ___wmul@multiplicand 0062  
               _parse_usb_message 1662                               l140 29D2  
                             l304 40D2                               l306 40E0  
                             l307 40E4                               l316 3BC2  
                             l156 296E                               l165 3FCC  
                             l341 3304                               l511 4134  
                             l423 34A8                               l335 32D2  
                             l168 4146                               l600 3A96  
                             l416 38CA                               l338 32E0  
                             l291 3F1E                               l283 4152  
                             l523 3AAC                               l292 3F22  
                             l286 3EFC                               l702 2D4C  
                             l518 415C                               l439 2BC2  
                             l527 3AFE                               l288 3F0A  
                             l289 3F10                               l715 2EB2  
                             l558 1AA4                               l832 36EC  
                             l585 26B6                               l819 363A  
                             l588 40A0                               l853 31CA  
                             l862 3F96                               l847 3798  
                             l599 3A86                               l858 3210  
                             l885 310A                 ??_init_interrupts 0060  
                             _ISR 0008                               _abs 3EA2  
                             _pad 38CC                      _usb_received 0055  
                    ___awmod@sign 0065                ?_parse_usb_message 00DF  
                             wreg 000FE8                        _TXSTA2bits 000F72  
                      _USB_param1 010A                        _USB_param2 0100  
                    ___flmul@aexp 0071                      ___flmul@bexp 0072  
                    ___flmul@sign 006C                      ___flmul@temp 0077  
                    ___flmul@prod 0073        get_coords_usb@long_counter 00CD  
                            ?_ISR 0001                      ___fltol@exp1 0069  
                            l1202 1B6C                              l1211 1DDA  
                            ?_abs 0072                              l1212 1DC8  
                            l1116 1390                              l1133 14AA  
                            l1125 1660                              l1117 137E  
                            l1206 1ED0                              l1142 157A  
                            l1118 1344                              l1143 1568  
                            l1320 3E10                              l1312 4028  
                            l1209 1D62                              l1250 27AA  
                            l1330 3D26                              l1170 226C  
                            l1219 1E92                              l1243 2712  
                            l1172 20CC                              l1181 2112  
                            l1158 3EA0                              l1246 286E  
                            l1407 3574                              l1415 3E58  
                            l1183 218A                              l1175 2090  
                            l1352 38F0                              l1184 2178  
                            l4000 3FFC                              l1257 2806  
                            l1361 22FA                              l1425 4050  
                            l1433 39BA                              l1418 4168  
                            l4010 22B4                              l1363 2302  
                            l1356 3948                              l4020 2320  
                            l1364 2348                              l4012 22D4  
                            l4004 226E                              l4100 1F54  
                            l1445 3CD4                              l4030 235A  
                            l4022 2330                              l4014 22EE  
                            l4006 228E                              l1382 3002  
                            l4110 1F88                              l4102 1F56  
                            l1375 24EE                              l1439 3C22  
                            l1392 3EDA                              l4032 2360  
                            l4040 2454                              l4024 233C  
                            l4016 230A                              l4008 22A4  
                            l4200 224C                              l4120 1FCE  
                            l4104 1F66                              l4112 1F90  
                            l5000 0BC8                              l1624 4078  
                            l1529 119E                              l1449 33DC  
                            l4050 24BE                              l4042 2470  
                            l4034 23E4                              l4026 2344  
                            l4018 231A                              l4202 225A  
                            l4130 1FF6                              l4122 1FD2  
                            l4114 1FA0                              l4106 1F76  
                            l1650 3F54                              l5010 0C1E  
                            l1570 0B96                              l1395 3EE2  
                            l4300 1D60                              l4220 1AC4  
                            l4052 24CE                              l4044 248E  
                            l4036 23EA                              l4028 2350  
                            l1388 3D78                              l4204 2260  
                            l4140 2044                              l4116 1FB6  
                            l4108 1F86                              l4060 407A  
                            l5020 0CA0                              l5012 0C28  
                            l5004 0BFA                              l1645 40C4  
                            l1653 3F5C                              l1485 115C  
                            l4310 1DC0                              l4302 1D72  
                            l4230 1B0A                              l4222 1AD4  
                            l4214 1AA6                              l4046 24A8  
                            l4038 23F0                              l4206 2262  
                            l4150 208E                              l4142 2054  
                            l4134 200A                              l4118 1FC6  
                            l4126 1FE6                              l4070 3A4C  
                            l4062 4098                              l5110 104C  
                            l5102 101A                              l5030 0D16  
                            l5022 0CBA                              l5014 0C5C  
                            l5006 0BFC                              l1639 3B60  
                            l1559 09CC                              l4320 1E2E  
                            l4304 1D80                              l4240 1B36  
                            l4232 1B10                              l4224 1AE4  
                            l4216 1AB4                              l4048 24B8  
                            l4160 20DC                              l4152 209A  
                            l4144 205C                              l4136 2024  
                            l4128 1FF6                              l4080 1EEE  
                            l4072 3A5C                              l4056 3FCE  
                            l5120 10E0                              l5112 1080  
                            l5040 0D62                              l5024 0CD4  
                            l5016 0C8C                              l5008 0C10  
                            l5200 35B0                              l1577 0C7E  
                            l4330 1E96                              l4314 1DEA  
                            l4322 1E32                              l4306 1D84  
                            l4250 1B8C                              l4242 1B46  
                            l4234 1B16                              l4226 1AF4  
                            l4218 1AC2                              l4410 2794  
                            l4402 274C                              l4162 20F2  
                            l4170 2122                              l4154 20B8  
                            l4146 206C                              l4138 2034  
                            l4090 1F22                              l4082 1EF0  
                            l4074 3A66                              l4066 3A2C  
                            l5130 1148                              l5122 10F2  
                            l5114 108A                              l5106 102E  
                            l5050 0DDC                              l5042 0D78  
                            l5034 0D1A                              l5026 0CF2  
                            l1578 0C24                              l5018 0C98  
                            l5210 35E8                              l5202 35B8  
                            l1659 3FFA                              l1579 0C90  
                            l4340 1EC0                              l4332 1EA6  
                            l4324 1E4C                              l4316 1DF6  
                            l4308 1D92                              l4260 1BCC  
                            l4244 1B56                              l4236 1B24  
                            l4228 1AFA                              l5300 30CA  
                            l4420 2814                              l4412 27A0  
                            l4404 2754                              l4172 2130  
                            l4164 20F8                              l4156 20BA  
                            l4148 2080                              l4084 1F00  
                            l4092 1F2A                              l4076 1ED2  
                            l4068 3A3E                              l5124 1126  
                            l5116 10A4                              l5060 0E4E  
                            l5028 0CFC                              l5220 3614  
                            l5212 35EE                              l5204 35CA  
                            l5140 3BC4                              l4334 1EB4  
                            l4326 1E60                              l4318 1E04  
                            l4270 1C16                              l4262 1BD8  
                            l4254 1BA0                              l4246 1B5C  
                            l4238 1B26                              l5302 30DA  
                            l4430 285C                              l4422 2816  
                            l4414 27DC                              l4406 2760  
                            l4182 219A                              l4190 21E2  
                            l4174 2134                              l4166 2102  
                            l4158 20CA                              l4094 1F3A  
                            l4086 1F10                              l4078 1EE0  
                            l4350 375C                              l4502 3F24  
                            l5134 116A                              l5126 1134  
                            l5118 10D8                              l5070 0E8E  
                            l5054 0DE0                              l5046 0D7C  
                            l5038 0D34                              l5062 0E56  
                            l5214 3604                              l5206 35D2  
                            l5222 361A                              l5230 363C  
                            l5150 3876                              l5142 3BD4  
                            l5310 3A98                              l4336 1EB6  
                            l4328 1E7A                              l4280 1C68  
                            l4272 1C22                              l4264 1BF0  
                            l4256 1BAC                              l4248 1B7C  
                            l4600 12E2                              l5304 30EA  
                            l4432 285E                              l4424 281A  
                            l4416 27E8                              l4408 2792  
                            l5160 3CD6                              l4512 3C82  
                            l4192 21FC                              l4184 21A6  
                            l4176 2142                              l4168 2110  
                            l4096 1F40                              l4088 1F20  
                            l4352 376C                              l4344 36EE  
                            l4360 310C                              l4440 3DE4  
                            l5136 118E                              l5080 0F0C  
                            l5072 0EB4                              l5064 0E5E  
                            l5056 0E0E                              l5048 0DAA  
                            l5224 362A                              l5216 360C  
                            l5208 35DA                              l5240 366A  
                            l5232 3642                              l5152 3892  
                            l5144 383E                              l5400 3332  
                            l5320 3AF8                              l5312 3A9E  
                            l5330 3EF4                              l4338 1EBC  
                            l4290 1CE6                              l4282 1C78  
                            l4274 1C32                              l4266 1BFC  
                            l4258 1BB6                              l4610 1352  
                            l4602 12E6                              l4530 11CE  
                            l4522 11A0                              l5306 30FA  
                            l4426 283E                              l4418 27F6  
                            l4450 2ED8                              l5162 3CE8  
                            l4514 3C8E                              l4194 2212  
                            l4186 21B4                              l4178 2170  
                            l4098 1F46                              l4354 3790  
                            l4346 371E                              l4370 3198  
                            l4362 313C                              l4442 3E06  
                            l4506 3F24                              l5090 0FAA  
                            l5082 0F18                              l5074 0EEA  
                            l5066 0E70                              l5058 0E40  
                            l5226 3632                              l5218 360E  
                            l5250 36A2                              l5242 3672  
                            l5234 3650                              l5154 38A2  
                            l5146 3848                              l5410 3380  
                            l5314 3ABA                              l5332 3EF4  
                            l5500 4130                              l4292 1D1C  
                            l4284 1C94                              l4276 1C3E  
                            l4268 1C08                              l4700 15E0  
                            l4620 137C                              l4612 135E  
                            l4604 1310                              l4540 1208  
                            l4532 11DE                              l4524 11AE  
                            l5180 3E5A                              l4428 284E  
                            l3900 3E38                              l4460 2F24  
                            l4452 2EE6                              l5164 3CF0  
                            l4516 3C94                              l4196 222C  
                            l4188 21DE                              l4356 3796  
                            l4348 372E                              l4372 31AA  
                            l4364 314C                              l4444 3E0A  
                            l4436 3DCA                              l4508 3F48  
                            l5092 0FB2                              l5084 0F4C  
                            l5068 0E7E                              l5420 24FA  
                            l5260 36DC                              l5252 36B8  
                            l5244 3684                              l5236 3658  
                            l5156 38A6                              l5148 3866  
                            l5324 402A                              l5412 3392  
                            l5404 333E                              l5172 4158  
                            l5316 3ACE                              l5340 40CE  
                            l5334 3EF6                              l5510 414E  
                            l5502 4132                              l4294 1D2A  
                            l4286 1CA0                              l4278 1C4E  
                            l4710 1632                              l4702 15F0  
                            l4630 13D2                              l4622 139E  
                            l4614 1362                              l4606 132C  
                            l4550 1236                              l4542 120E  
                            l4534 11EE                              l4526 11BC  
                            l5182 3E6C                              l4390 26BC  
                            l3910 2BFC                              l3902 2BC4  
                            l4462 2F40                              l4454 2EF2  
                            l5166 3CF8                              l4518 3CC6  
                            l4198 2248                              l4374 31B8  
                            l4366 317A                              l4382 3F5E  
                            l4438 3DD0                              l5094 0FC4  
                            l5086 0F56                              l5078 0EFE  
                            l5430 254E                              l5422 2506  
                            l5190 358A                              l5262 36E4  
                            l5254 36C0                              l5246 368C  
                            l5238 365C                              l5158 38AC  
                            l5414 33BA                              l5406 334C  
                            l5318 3AD4                              ?_pad 0070  
                            l5336 3EF8                              l5328 3EE8  
                            l5520 4136                              l5512 4150  
                            l4296 1D48                              l4288 1CBC  
                            l4720 1650                              l4712 1638  
                            l4704 1600                              l4640 140C  
                            l4632 13E0                              l4624 13AE  
                            l4616 1370                              l4608 133C  
                            l4560 126A                              l4552 1238  
                            l4544 1220                              l4536 11F0  
                            l4528 11BE                              l5280 3070  
                            l5272 3030                              l4392 26CE  
                            l3920 2C58                              l3912 2C0A  
                            l3904 2BCA                              l4464 2F96  
                            l4456 2EF8                              l4472 2FD8  
                            l4448 2EB4                              l5168 3D14  
                            l4376 3208                              l4368 318A  
                            l4384 3F76                              l4480 40B4  
                            l5096 0FF8                              l5088 0F76  
                            l4800 03E0                              l5176 4052  
                            l5440 25A0                              l5432 256A  
                            l5424 2516                              l5192 3592  
                            l5256 36C6                              l5248 3694  
                            l5360 342E                              l5352 33DE  
                            l5408 3364                              l5600 1814  
                            l6224 29E8                              l5506 4148  
                            l4298 1D52                              l4714 163A  
                            l4706 1620                              l4650 1478  
                            l4642 140E                              l4634 13EE  
                            l4618 1372                              l4570 12A6  
                            l4554 1248                              l4562 1272  
                            l4546 1222                              l4538 11F8  
                            l5290 30A0                              l5282 307E  
                            l5274 305A                              l5266 3004  
                            l4394 26DC                              l3930 2CC2  
                            l3922 2C60                              l3914 2C2A  
                            l3906 2BD8                              l4458 2F08  
                            l4730 3D6E                              l4378 320E  
                            l4386 3F86                              l4490 3B00  
                            l5098 1006                              l4810 0442  
                            l4802 03E8                              l5450 2616  
                            l5442 25C2                              l5434 256C  
                            l5418 24F0                              l5194 3596  
                            l5186 3576                              l5258 36CC  
                            l5370 348C                              l5362 3432  
                            l5354 33F6                              l5610 18BE  
                            l5530 3998                              l5522 394A  
                            l5338 40CA                              l5516 3B62  
                            l5508 414C                              l4716 1640  
                            l4708 1624                              l4660 14D0  
                            l4652 147A                              l4644 1418  
                            l4636 13FA                              l4628 13C2  
                            l4580 12BA                              l4572 12AA  
                            l4564 1282                              l4556 1258  
                            l4548 1228                              l5292 30AA  
                            l5276 305C                              l5268 301C  
                            l4396 2722                              l3940 2D0C  
                            l3932 2CE2                              l3924 2C74  
                            l3916 2C2E                              l3908 2BF8  
                            l4468 2FC6                              l4724 3D28  
                            l5380 2AAA                              l4492 3B06  
                            l4484 3B00                              l4900 07FC  
                            l4820 04B4                              l4804 03EA  
                            l4812 0458                              l5460 266A  
                            l5452 2618                              l5428 2518  
                            l5196 35A4                              l5188 357C  
                            l5372 349C                              l5364 346A  
                            l5356 33FE                              l5620 1960  
                            l5612 18D4                              l5604 1848  
                            l5524 394E                              l5540 3226  
                            l5700 2954                              l4718 164E  
                            l4670 14FE                              l4654 148A  
                            l4638 13FE                              l4646 141E  
                            l4590 12CE                              l4582 12BE  
                            l4574 12AE                              l4566 1294  
                            l4558 1268                              l5278 306C  
                            l4398 2738                              l3942 2D2C  
                            l3934 2CE4                              l3926 2C82  
                            l3918 2C3A                              l3950 2D62  
                            l4726 3D34                              l5390 2B80  
                            l5382 2AB8                              l4494 3B28  
                            l4478 40A2                              l4910 086C  
                            l4902 083A                              l4830 051E  
                            l4822 04C4                              l4806 0406  
                            l4814 046C                              l4750 01E4  
                            l4742 0164                              l4734 0138  
                            l5462 26A4                              l5446 25C4  
                            l5438 256E                              l5198 35AC  
                            l5366 3478                              l5358 3406  
                            l5622 1990                              l5614 1904  
                            l5606 1878                              l5526 3956  
                            l5542 3232                              l5534 3212  
                            l5480 3F98                              l4672 150C  
                            l4664 14E4                              l4680 152A  
                            l4648 1444                              l4656 149A  
                            l4592 12D2                              l4584 12C2  
                            l4576 12B2                              l4568 12A2  
                            l5288 3096                              l3936 2CF6  
                            l3928 2C94                              l3960 2DD2  
                            l3952 2D82                              l3880 34AA  
                            l4728 3D52                              l5384 2AEC  
                            l5392 2B86                              l5376 2A22  
                            l4496 3B56                              l4920 08BE  
                            l4912 088A                              l4904 083E  
                            l4832 0520                              l4824 04E2  
                            l4816 0494                              l4808 0424  
                            l4760 0210                              l4752 01E8  
                            l4744 0198                              l4736 014C  
                            l5448 25FA                              l5456 261A  
                            l5368 3488                              l5640 1A88  
                            l5632 1A20                              l5624 19A6  
                            l5616 191A                              l5608 188E  
                            l5528 3980                              l5560 32B4  
                            l5544 3238                              l5536 3226  
                            l5720 2984                              l5482 3FB6  
                            l5490 4126                              l4674 1514  
                            l4666 14EE                              l4658 14C0  
                            l4682 1538                              l4594 12D6  
                            l4586 12C6                              l4578 12B6  
                            l5298 30BE                              l3938 2CFC  
                            l3970 2E4A                              l3962 2DDA  
                            l3954 2D86                              l3946 2D4E  
                            l3890 352E                              l3882 34BE  
                            l5394 2BA4                              l5386 2B08  
                            l5378 2A8C                              l4498 3B5A  
                            l4930 08F6                              l4922 08C4  
                            l4850 05D6                              l4842 0582  
                            l4906 0840                              l4834 053E  
                            l4826 0500                              l4818 0496  
                            l4770 029E                              l4762 0212  
                            l4754 01F0                              l4746 01CC  
                            l4738 0160                              l5458 264C  
                            l5626 19D6                              l5618 194A  
                            l5570 3300                              l5562 32B8  
                            l5554 3254                              l5546 323A  
                            l5538 3226                              l5722 29AC  
                            l5492 4128                              l4692 158A  
                            l4684 153C                              l4676 1518  
                            l4668 14FC                              l4596 12DA  
                            l4588 12CA                              l3972 2E5C  
                            l3964 2DEE                              l3956 2D94  
                            l3948 2D54                              l3884 34D0  
                            l5388 2B34                              l4940 094E  
                            l4932 08F8                              l4924 08E2  
                            l4916 089E                              l4908 084E  
                            l4860 0644                              l4844 05A0  
                            l4836 0542                              l4828 0516  
                            l4772 02AE                              l4780 02F6  
                            l4764 022E                              l4748 01D0  
                            l5636 1A54                              l5628 19EC  
                            l5580 1680                              l5572 3302  
                            l5556 3270                              l5548 3250  
                            l5564 32C8                              l5724 29B8  
                            l5716 297C                              l5494 412A  
                            l5486 4120                              l4694 1596  
                            l4686 154A                              l4678 1528  
                            l4598 12DE                              l3966 2DFC  
                            l3974 2E62                              l3958 2DB4  
                            l3886 34DA                              l3894 3E12  
                            l3990 3910                              l3982 38CC  
                            l4950 09B8                              l4942 0974  
                            l4934 0916                              l4926 08E6  
                            l4918 08A0                              l4862 0660  
                            l4854 05DA                              l4838 0560  
                            l4790 037C                              l4782 02FE  
                            l4774 02C0                              l4766 025E  
                            l4758 0208                              l5398 3306  
                            l5590 171C                              l5582 16B0  
                            l5566 32EE                              l5558 32AE  
                            l5718 2980                              l5670 288C  
                            l5496 412C                              l5488 4122  
                            l4696 15A4                              l4688 1560  
                            l3976 2E72                              l3968 2E2A  
                            l3888 34F8                              l3896 3E20  
                            l3992 3916                              l3984 38DC  
                            l4960 09FC                              l4936 0922  
                            l4928 08EE                              l4880 0708  
                            l4872 06C2                              l4864 069E  
                            l4856 060C                              l4848 05A8  
                            l4792 038E                              l4784 0300  
                            l4776 02D2                              l4768 028E  
                            l5592 175E                              l5584 16DA  
                            l5576 1662                              l5568 32FA  
                            l5680 28B6                              l5672 289C  
                            l5728 29D2                              l5498 412E  
                            l4698 15DE                              l3978 2E92  
                            l3898 3E32                              l3994 3934  
                            l3986 38E8                              l4970 0A74  
                            l4962 0A18                              l4954 09DA  
                            l4938 0932                              l4946 0976  
                            l4882 0726                              l4874 06C8  
                            l4866 06A2                              l4858 0622  
                            l4794 03AA                              l4786 031C  
                            l4778 02D6                              l5594 1784  
                            l5586 16F0                              l5578 167A  
                            l5690 2910                              l5682 28BE  
                            l5674 28A8                              l5666 2870  
                            l3996 3EA2                              l3988 38FC  
                            l4980 0ADA                              l4972 0A88  
                            l4964 0A2E                              l4956 09E2  
                            l4948 09A8                              l4892 0776  
                            l4884 0738                              l4876 06E6  
                            l4868 06AE                              l4796 03BE  
                            l4788 034C                              l5596 179A  
                            l5588 1706                              l5692 291C  
                            l5684 28D0                              l5676 28AC  
                            l5668 2874                              l3998 3EBE  
                            l4990 0B48                              l4982 0AF0  
                            l4974 0A98                              l4958 09EA  
                            l4894 07A8                              l4886 0744  
                            l4798 03C6                              l5598 17B0  
                            l5686 28E2                              l5694 2932  
                            l5678 28B0                              l4992 0B58  
                            l4984 0B00                              l4976 0AA6  
                            l4968 0A42                              l4896 07BE  
                            l4888 0772                              l5696 2944  
                            l5688 28E8                              l4994 0BA4  
                            l4986 0B1C                              l4978 0AC2  
                            l4898 07E0                              l5698 2948  
                            l4996 0BBE                              l4988 0B34  
                            STR_1 FF72                              STR_2 FF72  
                            STR_3 FFF4                              STR_4 FF71  
                            STR_5 FF71                              STR_6 FFEA  
                            STR_8 FFFD               ??_parse_usb_message 00E1  
                            u4000 2330                              u4001 232C  
                            u4010 2470                              u4011 246C  
                            u4020 248E                              u4100 1F00  
                            u4021 248A                              u4101 1EFC  
                            u4030 24A8                              u4110 1F10  
                            u4031 24A4                              u4111 1F0C  
                            u5000 1444                              u4040 24B8  
                            u4200 20DC                              u4120 1F54  
                            u5001 1440                              u4041 24B4  
                            u4201 20D8                              u4121 1F50  
                            u5010 148A                              u4210 20F2  
                            u4130 1F66                              u4050 3FF4  
                            u5011 1486                              u4211 20EE  
                            u4131 1F62                              u4051 3FEE  
                            u5100 1576                              u5020 14C0  
                            u4300 222C                              u4220 2110  
                            u4140 1F76                              u4060 3FF6  
                            u5101 1572                              u5021 14BC  
                            u4301 2228                              u4221 210C  
                            u4141 1F72                              u5110 158A  
                            u5030 14D0                              u4310 225A  
                            u4230 2130                              u4150 1FB6  
                            u4070 3A4C                              u5111 1586  
                            u5031 14CC                              u4311 2256  
                            u4231 212C                              u4151 1FB2  
                            u4071 3A48                              u4400 1D06  
                            u4320 1AC2                              u5120 15A4  
                            u5040 14FC                              u4240 2142  
                            u4160 1FF6                              u4080 3A86  
                            u6000 0F72                              u5200 014C  
                            u4321 1ABE                              u5121 15A0  
                            u5041 14F8                              u4241 213E  
                            u4161 1FF2                              u4081 3A82  
                            u6001 0F6E                              u5201 0148  
                            u4410 1D60                              u4330 1AD4  
                            u5130 15DE                              u5050 150C  
                            u4250 2170                              u4170 206C  
                            u4090 1EEE                              u6010 0FC4  
                            u5210 0180                              u4411 1D5C  
                            u4331 1AD0                              u5131 15DA  
                            u5051 1508                              u4251 216C  
                            u4171 2068                              u4091 1EEA  
                            u6011 0FC0                              u5211 017A  
                            u4500 1EB4                              u4420 1D80  
                            u4340 1AE4                              u5140 15F0  
                            u5060 1528                              u4260 2186  
                            u4180 208E                              u6020 0FF8  
                            u5300 029E                              u5220 0182  
                            u6100 3C10                              u4501 1EB0  
                            u4421 1D7C                              u4405 1CFC  
                            u4341 1AE0                              u5141 15EC  
                            u5061 1524                              u4261 2182  
                            u4181 208A                              u6021 0FF4  
                            u5301 029A                              u4430 1D92  
                            u4350 1B24                              u5150 1600  
                            u5070 1538                              u4270 219A  
                            u4190 20B8                              u4510 371E  
                            u6030 1006                              u5310 02C0  
                            u5230 0198                              u6110 3C22  
                            u4431 1D8E                              u4351 1B20  
                            u5151 15FC                              u5071 1534  
                            u4271 2196                              u4191 20B4  
                            u4511 371A                              u6031 1002  
                            u5311 02BC                              u5231 0194  
                            u6111 3C1E                              u4440 1DC0  
                            u4360 1B36                              u5160 1620  
                            u5080 154A                              u4600 26CE  
                            u3800 2C58                              u3720 34BE  
                            u4280 21B4                              u4520 375C  
                            u6040 1048                              u5400 0424  
                            u5320 02D2                              u5240 01CC  
                            u6200 366A                              u6120 38CA  
                            u4441 1DBC                              u4361 1B32  
                            u5161 161C                              u5081 1546  
                            u4601 26CA                              u3801 2C54  
                            u3721 34BA                              u4281 21B0  
                            u4521 3758                              u6041 1044  
                            u5401 0420                              u5321 02CE  
                            u5241 01C8                              u6201 3666  
                            u6121 38C6                              u4450 1DD6  
                            u4370 1B46                              u5170 1632  
                            u5090 1560                              u4610 26DC  
                            u3810 2C82                              u3730 34D0  
                            u4290 21FC                              u4530 3790  
                            u6050 10A0                              u5410 0442  
                            u5330 031C                              u5250 01E4  
                            u6130 358A                              u6210 3684  
                            u4451 1DD2                              u4371 1B42  
                            u5171 162E                              u5091 155C  
                            u4611 26D8                              u3811 2C7E  
                            u3731 34CC                              u4291 21F8  
                            u4531 378C                              u6051 109C  
                            u5411 043E                              u5331 0318  
                            u5251 01E0                              u6131 3586  
                            u6211 3680                              u6107 3C06  
                            u4460 1DEA                              u4380 1B7C  
                            u5180 164E                              u6300 30DA  
                            u4620 2738                              u3820 2CC2  
                            u3740 34F8                              u3900 38DC  
                            u4540 313C                              u4700 3DE4  
                            u6060 10F2                              u5500 05D6  
                            u5420 04B4                              u5340 034C  
                            u5260 0204                              u6140 35A4  
                            u6220 36A2                              u4461 1DE6  
                            u4381 1B78                              u5181 164A  
                            u6301 30D6                              u4621 2734  
                            u3821 2CBE                              u3741 34F4  
                            u3901 38D8                              u4541 3138  
                            u4701 3DE0                              u6061 10EE  
                            u5501 05D2                              u5421 04B0  
                            u5341 0348                              u5261 0200  
                            u6141 35A0                              u6221 369E  
                            u4470 1E04                              u4390 1B8C  
                            u6310 30EA                              u4630 278E  
                            u3830 2D0C                              u3750 352E  
                            u3910 3934                              u5190 3D6E  
                            u4550 317A                              u4710 3E06  
                            u6070 1126                              u5510 060C  
                            u5430 04C4                              u5350 037C  
                            u5270 022E                              u6150 35CA  
                            u6230 36B8                              u4471 1E00  
                            u4391 1B88                              u6311 30E6  
                            u4631 278A                              u3831 2D08  
                            u3751 352A                              u3911 3930  
                            u5191 3D6A                              u4551 3176  
                            u4711 3E02                              u6071 1122  
                            u5511 0608                              u5431 04C0  
                            u5351 0378                              u5271 022A  
                            u6151 35C6                              u6231 36B4  
                            u4480 1E4C                              u4800 11BC  
                            u4640 27D8                              u3840 2D62  
                            u3920 3EBE                              u3760 3E58  
                            u4720 2ED8                              u4560 3198  
                            u6080 1134                              u5600 07FC  
                            u5520 0660                              u5440 04E2  
                            u5360 038E                              u5280 025E  
                            u6160 35E8                              u6240 36DC  
                            u6400 3478                              u6320 3ABA  
                            u4481 1E48                              u4801 11B8  
                            u4641 27D4                              u3841 2D5E  
                            u3921 3EBA                              u3761 3E54  
                            u4721 2ED4                              u4561 3194  
                            u6081 1130                              u5601 07F8  
                            u5521 065C                              u5441 04DE  
                            u5361 038A                              u5281 025A  
                            u6161 35E4                              u6241 36D8  
                            u6401 3474                              u6321 3AB6  
                            u4490 1E7A                              u4810 11CE  
                            u6250 301C                              u4650 27F6  
                            u3770 2BD8                              u3850 2D94  
                            u4730 2F24                              u6410 2BA4  
                            u4570 31B8                              u3930 4022  
                            u6090 116A                              u5610 0824  
                            u5530 0688                              u5450 0500  
                            u5370 03BE                              u5290 028E  
                            u6170 3604                              u6330 3AF8  
                            u4491 1E76                              u4811 11CA  
                            u6251 3018                              u4651 27F2  
                            u3771 2BD4                              u3851 2D90  
                            u4731 2F20                              u6411 2BA0  
                            u4571 31B4                              u3931 401C  
                            u6091 1166                              u5451 04FC  
                            u5371 03BA                              u5291 028A  
                            u6171 3600                              u6331 3AF4  
                            u6340 3F0A                              u4900 1328  
                            u4820 11DE                              u6260 3050  
                            u4660 2806                              u3780 2C0A  
                            u3860 2DD2                              u4740 2F40  
                            u4580 3208                              u3940 4024  
                            u5700 09B8                              u5620 084E  
                            u5540 06E6                              u5460 053E  
                            u5380 03E0                              u6500 25A0  
                            u6180 362A                              u6420 3332  
                            u6341 3F06                              u4901 1322  
                            u4821 11DA                              u4661 2802  
                            u3781 2C06                              u3861 2DCE  
                            u4741 2F3C                              u4581 3204  
                            u5701 09B4                              u5621 084A  
                            u5541 06E2                              u5461 053A  
                            u5381 03DC                              u6501 259C  
                            u6181 3626                              u6421 332E  
                            u6350 3F1E                              u4910 132A  
                            u4830 1220                              u6270 307E  
                            u4670 2814                              u3870 2DFC  
                            u3950 22A0                              u4590 3F76  
                            u4750 3B28                              u5710 09DA  
                            u5630 086C                              u5550 0704  
                            u5470 0560                              u5390 0406  
                            u6510 25BE                              u6190 3650  
                            u6430 3364                              u6351 3F1A  
                            u4831 121C                              u6271 307A  
                            u4671 2810                              u3791 2C34  
                            u3871 2DF8                              u3951 229A  
                            u4591 3F72                              u4751 3B24  
                            u5711 09D6                              u5631 0868  
                            u5615 081A                              u5551 0700  
                            u5535 067E                              u5471 055C  
                            u5391 0402                              u6511 25BA  
                            u6191 364C                              u6431 3360  
                            u4920 1352                              u4840 1236  
                            u6280 3092                              u4680 284E  
                            u3880 2E2A                              u3960 22A2  
                            u4760 3B56                              u5720 09FC  
                            u5640 088A                              u5560 0726  
                            u5480 057E                              u6520 25F6  
                            u6440 3380                              u6600 3980  
                            u6360 40E0                              u4921 134E  
                            u4841 1232                              u6281 308E  
                            u6265 3046                              u4681 284A  
                            u3881 2E26                              u4761 3B52  
                            u5721 09F8                              u5641 0886  
                            u5561 0722                              u5481 057A  
                            u6521 25F2                              u6441 337C  
                            u6601 397C                              u6361 40DC  
                            u4930 1370                              u4850 1248  
                            u6290 30BA                              u4690 285C  
                            u3890 2E72                              u3970 22B4  
                            u4770 3F48                              u5810 0BA4  
                            u5730 0A2E                              u5650 08BE  
                            u5570 0738                              u5490 05A0  
                            u6530 264C                              u6450 3392  
                            u6610 3998                              u4931 136C  
                            u4851 1244                              u6291 30B6  
                            u4691 2858                              u3891 2E6E  
                            u3971 22B0                              u4771 3F44  
                            u5811 0BA0                              u5731 0A2A  
                            u5651 08BA                              u5571 0734  
                            u5491 059C                              u6531 2648  
                            u6451 338E                              u6611 3994  
                            u4940 1390                              u4860 1258  
                            u3980 22EE                              u4780 3CB6  
                            u5900 0D16                              u5820 0BBE  
                            u5740 0A74                              u5660 08E2  
                            u5580 0772                              u6540 266A  
                            u6380 33F6                              u6460 33BA  
                            u6700 16B0                              u6620 3250  
                            u4941 138C                              u4861 1254  
                            u3981 22EA                              u5901 0D12  
                            u5821 0BBA                              u5805 0B72  
                            u5741 0A70                              u5661 08DE  
                            u5581 076E                              u6541 2666  
                            u6381 33F2                              u6461 33B6  
                            u6701 16AC                              u6621 324C  
                            u4950 139E                              u4870 1294  
                            u3990 231A                              u4790 3CC6  
                            u5910 0D34                              u5830 0BF6  
                            u5750 0AA6                              u5670 0916  
                            u5590 07A8                              u6390 346A  
                            u6710 1844                              u6630 3270  
                            u4951 139A                              u4871 1290  
                            u3991 2316                              u4791 3CC2  
                            u5911 0D30                              u5831 0BF2  
                            u5751 0AA2                              u5671 0912  
                            u5591 07A4                              u6551 26AE  
                            u6471 2500                              u6391 3466  
                            u6711 1840                              u6631 326C  
                            u4960 13AE                              u4880 12A2  
                            u5920 0D62                              u5840 0C10  
                            u5760 0AC2                              u5680 0932  
                            u6800 1990                              u6720 1878  
                            u6640 329E                              u4961 13AA  
                            u4881 129E                              u5921 0D5E  
                            u5841 0C0C                              u5761 0ABE  
                            u5681 092E                              u6481 250C  
                            u6801 198C                              u6721 1874  
                            u4970 13E0                              u4890 1310  
                            u5930 0DAA                              u5850 0C1E  
                            u5770 0AF0                              u5690 09A8  
                            u6490 254A                              u6650 32C8  
                            u4971 13DC                              u4891 130C  
                            u4787 3CAC                              u5931 0DA6  
                            u5851 0C1A                              u5771 0AEC  
                            u5691 09A4                              u6491 2546  
                            u6811 199A                              u6731 1882  
                            u6651 32C4                              u4980 13EE  
                            u5940 0E0E                              u5860 0C8C  
                            u5780 0B1C                              u6820 19D6  
                            u6740 18BE                              u6660 32E0  
                            u6900 28D0                              u4981 13EA  
                            u5941 0E0A                              u5861 0C88  
                            u5781 0B18                              u6821 19D2  
                            u6741 18BA                              u6661 32DC  
                            u6901 28CC                              u4990 140C  
                            u5950 0E4E                              u5870 0CBA  
                            u6670 32EE                              u6910 2910  
                            u4991 1408                              u5951 0E4A  
                            u5871 0CB6                              u6831 19E0  
                            u6751 18C8                              u6671 32EA  
                            u6647 3294                              u6911 290C  
                            u5960 0E70                              u5880 0CD4  
                            u6840 1A1C                              u6760 1904  
                            u6920 2944                              u5961 0E6C  
                            u5881 0CD0                              u6841 1A18  
                            u6761 1900                              u6681 1668  
                            u6921 2940                              u5970 0E7E  
                            u5890 0CF2                              u6850 1A50  
                            u6930 297C                              u5971 0E7A  
                            u5891 0CEE                              u5795 0B38  
                            u6851 1A4C                              u6771 190E  
                            u6691 1674                              u6931 2978  
                            u5980 0EEA                              u6860 1A84  
                            u6780 194A                              u6940 29AC  
                            u5981 0EE6                              u6861 1A80  
                            u6781 1946                              u6941 29A8  
                            u5990 0F0C                              u5991 0F08  
                            u6791 1954                              u6891 2892  
                            u7587 2880                              u7597 28D8  
                            abs@a 0072                              _dbuf 02CE  
                            _atof 4052                              _main 2870  
                            _dtoa 226E                              _nanf 40A2  
                            _home 0146                              _ftoa 2A22  
                            _mode 0057                              _itoa 33DE  
                            _prec 00F8                              pad@i 0077  
                            pad@p 0074                              fsr0h 000FEA  
                            fsr1h 000FE2                              indf0 000FEF  
                            fsr2h 000FDA                              fsr0l 000FE9  
                            indf1 000FE7                              indf2 000FDF  
                            fsr1l 000FE1                              pad@w 0079  
                            fsr2l 000FD9                              btemp 0058  
                            prodh 000FF4                              prodl 000FF3  
                            start 0134                   ___fldiv@new_exp 0071  
    parse_usb_message@temp_string 01EE               append_string@length 0010  
                 ??_append_string 000E                   append_string@ch 000D  
                    ___param_bank 000000                             ??_ISR 0012  
                           ??_abs 0074                             ??_pad 0076  
       __end_of_parse_usb_message 1AA6                     ___fltol@sign1 0068  
                 __end_of___aodiv 2D4E                             ?_atof 008E  
                 __end_of___fladd 1662                             ?_main 0001  
                           ?_dtoa 007B                             ?_nanf 0060  
                 __end_of___aomod 2EB4                             ?_ftoa 00CB  
                 __end_of___fldiv 226E                             ?_itoa 006C  
                 __end_of___awdiv 363C                   __end_of___flneg 3F98  
                           STR_11 FF71                             STR_12 FF71  
                           STR_20 FFFB                             STR_13 FF69  
                           STR_22 FF8C                             STR_23 FFF9  
                           STR_31 FFE6                             STR_15 FFA9  
                           STR_40 FFDA                             STR_16 FFB0  
                           STR_25 FFF1                             STR_33 FFDE  
                           STR_17 FFB7                             STR_41 FFA2  
                           STR_50 FF25                             STR_42 FFA2  
                           STR_18 FF7B                             STR_43 FF84  
                           STR_51 FF60                             STR_60 FF44  
                           STR_52 FF60                             STR_44 FEFC  
                 __end_of___awmod 36EE                             STR_29 FFE2  
                           STR_53 FF9B                             STR_61 FF19  
                           STR_45 FF0B                             STR_70 FF94  
                           STR_54 FF9B                             STR_62 FF19  
                           STR_46 FEE5                             STR_39 FF71  
                           STR_47 FFEE                             STR_63 FFBE  
                           STR_71 FF57                             STR_55 FF30  
                           STR_56 FF30                             STR_64 FFBE  
                           STR_48 FFF7                             STR_72 FF4E  
                           STR_73 FFD2                             STR_65 FFC9  
                           STR_57 FF3A                             STR_49 FF25  
                           STR_58 FF3A                             STR_66 FFC9  
                           STR_67 FFC4                             STR_59 FF44  
                           STR_68 FFC4                             STR_76 FFD6  
                           STR_77 FFCE                             STR_69 FF94  
                           STR_79 FF71                   __end_of___flmul 1ED2  
                 __end_of___flsub 3EA2                   __end_of___fltol 310C  
                 ___awdiv@divisor 0062                             i2l310 40EE  
                           i2l312 40FC                             i2l313 4104  
                           i2l410 3A2A                             i2l182 0108  
                           i2l344 4162                             i2l515 411E  
                 ___awdiv@counter 0064                      vfpfcnvrt@fmt 00A0  
             ___lmul@multiplicand 0064                             _flags 00FA  
                           _fputc 34AA                             _fputs 3E12  
                 __end_of_isdigit 402A                             atof@s 008E  
                           pad@fp 0070                             _width 004E  
                           _state 00FE                             _putch 4168  
                           _start 0056                             dtoa@d 007D  
                           dtoa@i 009B                             dtoa@n 0093  
                           dtoa@p 008F                             dtoa@s 009D  
                           dtoa@w 0091                             nanf@s 0060  
                           nanf@u 0064                   __end_of_islower 3FFC  
                           ftoa@i 00D9                   __end_of_isspace 3E12  
                           itoa@i 0072                             itoa@n 006C  
                           itoa@s 006E                             tablat 000FF5  
                           plusw0 000FEB                             plusw1 000FE3  
                           plusw2 000FDB               get_coords_usb@F7053 023C  
             get_coords_usb@F7055 0228                             ttemp5 0059  
                           ttemp6 005C                             ttemp7 0060  
                           status 000FD8                             wtemp8 0059  
                 __end_of_sprintf 3D28                   __end_of_strncmp 33DE  
                 __end_of_toupper 3F5E            ISR@temp_receive_string 001C  
                __end_ofi2_strcpy 3C82                  __end_ofi2_strlen 3DCA  
          get_coords_usb@latitude 009D                  append_string@str 000B  
                 __initialization 379A                      __end_of_atof 407A  
                    __end_of_main 2A22                      __end_of_dtoa 24F0  
                    __end_of_nanf 40C6                      __end_of_ftoa 2BC4  
                    __end_of_itoa 34AA                            ??_atof 0092  
                          ??_main 00E1                            ??_dtoa 0085  
                          ??_nanf 0064                            ??_ftoa 00D3  
                          ??_itoa 0070                     __activetblptr 000002  
                   _left_joystick 0053                            ?_fputc 0060  
                          ?_fputs 0069                  ___awdiv@dividend 0060  
                          _ANSELA 000F38                            ?_putch 0001  
                          _ANSELB 000F39                            _ANSELC 000F3A  
                          _ANSELD 000F3B                            _ANSELE 000F3C  
                   _init_MRF89XAM 3B62                            i2l1445 3DC8  
                          i2l1439 3C80                            i2l5342 40E6  
                          i2l5344 40E6                            i2l5346 40E8  
                          i2l5348 4102                            i2l5470 3D7A  
                          i2l5472 3D86                            i2l5466 3C24  
                          i2l5474 3D8A                            i2l5468 3C34  
                          i2l5476 3DBC                            i2l5652 39BC  
                          i2l5644 4106                            i2l5740 0044  
                          i2l5654 39D0                            i2l5646 4118  
                          i2l5662 415E                            i2l5750 0078  
                          i2l5742 0044                            i2l5656 39E6  
                          i2l5648 411C                            i2l5760 00B0  
                          i2l5752 0082                            i2l5744 0052  
                          i2l5736 0032                            i2l5658 3A16  
                          i2l5770 0102                            i2l5762 00C2  
                          i2l5746 0060                            i2l5754 0092  
                          i2l5738 0032                            i2l5764 00C8  
                          i2l5756 00A0                            i2l5748 0066  
                          i2l5766 00D8                            i2l5758 00AE  
                          i2l5768 00F8                            _RCREG2 000F74  
                          _OSCCON 000FD3                            _SPBRG2 000F75  
                ??_write_spi_data 0060                            _TXREG2 000F73  
                __end_of___xxtofl 2870               _transmit_string_usb 3A98  
                    vfprintf@cfmt 00B6                            ___flge 310C  
                          ___fleq 36EE                  ??_get_coords_usb 009A  
                          ___lmul 3A2C                         ??___aodiv 0070  
                       ??___fladd 0068                         ??___aomod 0070  
                          ___wmul 407A                         ??___fldiv 0068  
                       ??___awdiv 0064                         ??___flneg 0064  
                       ??___awmod 0064                         ??___flmul 0068  
                       ??___flsub 0078                         ??___fltol 0064  
                __end_of_init_spi 4154                            clear_0 37E6  
                          clear_1 37F8                            clear_2 3804  
                          clear_3 3810                            clear_4 382A  
                ___awdiv@quotient 0066                   ___awmod@divisor 0062  
                          isa$std 000001                   ___awmod@counter 0064  
                          pad@buf 0072                            _strcat 402A  
                          dtoa@fp 007B                            _strcmp 394A  
                          _strcpy 3BC4                            _strlen 3C82  
                          _strtof 0138                  __end_of_isxdigit 3B62  
        _transmit_string_MRF89XAM 3212                            fputc@c 0060  
                          fputs@c 006D                            fputs@i 006E  
                    __pdataCOMRAM 0057                            fputs@s 0069  
                       ??_isdigit 0062                         ??_islower 0062  
                    __mediumconst FEE4                         ??_isspace 0062  
            ?_transmit_string_usb 0064                            tblptrh 000FF7  
                          tblptrl 000FF6                            tblptru 000FF8  
                          putch@c 0001        transmit_string_usb@counter 0066  
                __end_of_vfprintf 3D7A                         ??_sprintf 00BE  
      transmit_string_usb@message 0064                         ??_strncmp 0066  
                       ??_toupper 0066                    ?_init_MRF89XAM 0001  
                      ___flge@ff1 0060                        ___flge@ff2 0064  
                    ___xxtofl@arg 006A                      ___xxtofl@exp 0069  
                    ___xxtofl@val 0060                        ___fleq@ff1 0060  
                      ___fleq@ff2 0064                        __accesstop 0060  
         __end_of__initialization 3830                        ___flneg@f1 0060  
                   ___rparam_used 000001                        ___fltol@f1 0060  
                 _init_interrupts 4136                    __pcstackCOMRAM 0001  
                    __pidataBANK0 416B                      __pidataBANK1 4164  
               write_spi_reg@data 0060                     __end_of_fputc 3576  
                   __end_of_fputs 3E5A                     __end_of_putch 416A  
         get_coords_usb@longitude 00B1             ??_transmit_string_usb 0066  
                       ?i2_strcpy 0001                         ?i2_strlen 0001  
                         ??_fputc 0064                           ??_fputs 006D  
                         ??_putch 0060                        __pbssBANK0 00F8  
                      __pbssBANK1 0100                        __pbssBANK2 0200  
                      __pbssBANK3 0300                       i2strcpy@src 0003  
              main@previous_state 00F7                           ?___flge 0060  
                         ?___fleq 0060                           ?___lmul 0060  
                         ?___wmul 0060                     _read_byte_usb 4106  
                  ___lmul@product 0068                           ?_strcat 006E  
                         ?_strcmp 0060                           ?_strcpy 0064  
                         ?_strlen 0060                           ?_strtof 0079  
                       ?___xxtofl 0060                     _read_spi_data 40E6  
                    ISR@MRF_input 0044                  _MRF_transmitting 00FD  
                 ??_init_MRF89XAM 0063                           _SSP1BUF 000FC9  
                      ??i2_strcpy 0005                        ??i2_strlen 0003  
                  _right_joystick 0052                 ftoa@decimalPlaces 00D1  
         __end_of_init_interrupts 4148                         ?_init_spi 0001  
       parse_usb_message@response 018A          parse_usb_message@message 00DF  
        write_spi_reg@reg_address 0061                           __Hparam 0000  
                       ?_isxdigit 0064                           __Lparam 0000  
                _receive_MRF89XAM 415E             __end_of_append_string 3A2C  
                   _write_spi_reg 3EE4                           ___aodiv 2BC4  
                         ___fladd 11A0                           ___aomod 2D4E  
                         ___fldiv 1ED2                           ___awdiv 3576  
                         ___flneg 3F5E                           ___awmod 363C  
                  ?_read_byte_usb 0001                           ___flmul 1AA6  
                         ___flsub 3E5A                           ___fltol 3004  
                       ?_vfprintf 00B0                        _init_uart2 4120  
                         __pcinit 379A                           __ramtop 1000  
                         __ptext0 2870                           __ptext1 3212  
                         __ptext2 40C6                           __ptext3 394A  
                         __ptext4 1662                           __ptext5 3A98  
                         __ptext6 4154                           __ptext7 3306  
                         __ptext8 402A                           __ptext9 3BC4  
                       _T0CONbits 000FD5                    ?_read_spi_data 0001  
                         _isdigit 3FFC                        ??___xxtofl 0064  
               __end_of_init_pins 3FCE                  ___awmod@dividend 0060  
                         _islower 3FCE                           _isspace 3DCA  
                         _sprintf 3CD6                           _strncmp 3306  
                         _toupper 3F24              end_of_initialization 3830  
                         ftoa@num 00CB                           ftoa@str 00CF  
                         fputc@fp 0062                     __Lmediumconst FEE4  
                         fputs@fp 006B                        ??_init_spi 0060  
                      ??_isxdigit 0066                    ?_write_spi_reg 0060  
               __end_of_vfpfcnvrt 3004                   reverse_string@c 0067  
                 reverse_string@i 0068                   reverse_string@j 006A  
                 reverse_string@s 0064        ??_transmit_string_MRF89XAM 0066  
                         postdec1 000FE5                           postdec2 000FDD  
                         postinc0 000FEE                           postinc1 000FE6  
                         postinc2 000FDE                  vfpfcnvrt@convarg 00A6  
                      ??_vfprintf 00B6                           strcmp@l 0060  
                         strcmp@r 0062                           strcpy@d 006C  
                         strlen@a 0062                           strcpy@s 006A  
                         strlen@s 0060                           strtof@i 008D  
                         strtof@s 0079                         _PORTBbits 000F81  
                      _timer_tick 0050                         _PORTDbits 000F83  
                     ___fladd@grs 006F                     ___xxtofl@sign 0068  
                       _TRISAbits 000F92                         _TRISBbits 000F93  
                       _TRISCbits 000F94                         _TRISDbits 000F95  
            _MRF_message_received 00FC                write_spi_data@data 0060  
                     ___fldiv@grs 0073                       ___fldiv@rem 006C  
                     ___flmul@grs 006D                 _transmit_byte_usb 4154  
                ?_init_interrupts 0001                ?_transmit_byte_usb 0001  
                 ??_read_byte_usb 0001               ??_transmit_byte_usb 0060  
                  __end_of___flge 3212                    __end_of___fleq 379A  
                  __end_of___lmul 3A98                       vfpfcnvrt@ap 00A2  
                     vfpfcnvrt@cp 00AE                       vfpfcnvrt@fp 009E  
                  __end_of___wmul 40A2                       ?_init_uart2 0001  
                   __pidataCOMRAM 416A                   ??_read_spi_data 0001  
                   ftoa@wholePart 00D5                    __end_of_strcat 4052  
                  __end_of_strcmp 39BC                    __end_of_strcpy 3C24  
                  __end_of_strlen 3CD6                    __end_of_strtof 11A0  
             start_initialization 379A             get_coords_usb@counter 00CE  
                     __end_of_ISR 0134                       __end_of_abs 3EE4  
                     __end_of_pad 394A          get_coords_usb@msg_coords 00C5  
          parse_usb_message@F7044 0300            parse_usb_message@F7046 0260  
       __end_of_transmit_byte_usb 415E                         i2strcpy@d 0009  
                       i2strlen@a 0003                         i2strcpy@s 0007  
                       i2strlen@s 0001   transmit_string_MRF89XAM@counter 006B  
                 ??_write_spi_reg 0061                    _reverse_string 383E  
                     vfprintf@fmt 00B2                          ??___flge 0068  
                        ??___fleq 0068                     _isxdigit$2508 006A  
                        ??___lmul 0068                          ??___wmul 0064  
                     __pdataBANK0 00FE                       __pdataBANK1 01F8  
     __end_of_transmit_string_usb 3B00                          ??_strcat 0072  
                        ??_strcmp 0064                          ??_strcpy 0068  
                        ??_strlen 0062                          ??_strtof 007D  
                       ___fladd@a 0064                         ___fladd@b 0060  
                  _current_coords 0126                         ___fldiv@a 0064  
                       ___fldiv@b 0060                       __pbssBIGRAM 038C  
                       ___flmul@a 0064                         ___flmul@b 0060  
                     __pbssCOMRAM 0046                         ___flsub@a 0074  
                       ___flsub@b 0070                    _current_report 0364  
                   __pcstackBANK0 0060                     __pcstackBANK1 018A  
                    ISR@usb_input 0045                  ___aodiv@dividend 0060  
        __end_of_receive_MRF89XAM 4164                          ISR@F7073 0200  
                    i2strcpy@dest 0001            __end_of_reverse_string 38CC  
                     _all_reports 038C                         _dtoa$2353 008D  
__end_of_transmit_string_MRF89XAM 3306                         __pintcode 0008  
                   __pmediumconst FEE4                          ?___aodiv 0060  
                        ?___fladd 0060                          ?___aomod 0060  
                        ?___fldiv 0060                          ?___awdiv 0060  
                ___aodiv@quotient 0072                          ?___flneg 0060  
                        ?___awmod 0060                          ?___flmul 0060  
                        ?___flsub 0070                          ?___fltol 0060  
                        ?_isdigit 0060                          ?_islower 0060  
                        ?_isspace 0060              read_byte_usb@content 0001  
                        ?_sprintf 00B8                         _init_pins 3F98  
                        ?_strncmp 0060             __end_of_init_MRF89XAM 3BC4  
                        ?_toupper 0064                    ___wmul@product 0064  
                     _destination 012E                          _LATAbits 000F89  
                        _LATCbits 000F8B                   ?_reverse_string 0064  
                        _PIE3bits 000FA3                          i2u700_40 00AE  
                        i2u700_41 00AA                          i2u701_40 00C2  
                        i2u701_41 00BE                          _PIR3bits 000FA4  
                        i2u702_40 00F8                          i2u702_41 00F4  
                        i2u637_40 40FC                          i2u637_41 40F8  
                        i2u656_40 3C6E                          i2u656_47 3C64  
                        i2u657_40 3C80                          i2u657_41 3C7C  
                        i2u658_40 3DAC                          i2u658_47 3DA2  
                        i2u659_40 3DBC                          i2u659_41 3DB8  
                        i2u687_40 4118                          i2u687_41 4114  
                        i2u695_41 003C                          i2u688_40 39E6  
                        i2u696_40 0052                          i2u688_41 39E2  
                        i2u696_41 004E                          i2u697_40 0060  
                        i2u697_41 005C                          i2u698_40 0078  
                        i2u698_41 0074                          i2u699_40 00A0  
                        i2u699_41 009C                          _RCONbits 000FD0  
                       main@F7067 0250                          _SSP1CON1 000FC6  
                     strtof@digit 0083                       strtof@flags 0084  
                main@MRF_msg_code 00F3                       strtof@expon 0085  
                       _vfpfcnvrt 2EB4                 ___wmul@multiplier 0060  
        transmit_byte_usb@message 0060                         _waypoint1 0046  
                       _waypoint2 013E                         _waypoint3 0136  
                    _isspace$2268 0064                          i2_strcpy 3C24  
                        i2_strlen 3D7A                        ?_init_pins 0001  
               ___lmul@multiplier 0060                       _INTCON2bits 000FF1  
                     _INTCON3bits 000FF0                         copy_data0 37AE  
                       ftoa@digit 00D7            parse_MRF_message@F7080 0114  
          parse_MRF_message@F7078 011D    transmit_string_MRF89XAM@length 0069  
                        __Hrparam 0000                        vfprintf@ap 00B4  
                        __Lrparam 0000                        vfprintf@fp 00B0  
  transmit_string_MRF89XAM@tx_str 0064                    _write_spi_data 40C6  
                    ??_init_uart2 0060                        ?_vfpfcnvrt 009E  
                 ___aodiv@divisor 0068                   ___aodiv@counter 0070  
                  _get_coords_usb 24F0                        sprintf@fmt 00BA  
                        ___xxtofl 26B8                        strcat@dest 006E  
       ?_transmit_string_MRF89XAM 0064                          __ptext10 33DE  
                        __ptext11 383E                          __ptext20 3B00  
                        __ptext12 363C                          __ptext21 3FFC  
                        __ptext13 3576                          __ptext30 3C82  
                        __ptext22 3DCA                          __ptext14 24F0  
                        __ptext31 3CD6                          __ptext23 407A  
                        __ptext15 4052                          __ptext40 2D4E  
                        __ptext32 3D28                          __ptext24 3A2C  
                        __ptext16 0138                          __ptext41 2BC4  
                        __ptext33 2EB4                          __ptext25 3F5E  
                        __ptext17 3F24                          __ptext50 4136  
                        __ptext42 26B8                          __ptext34 226E  
                        __ptext26 310C                          __ptext18 3FCE  
                        __ptext51 3B62                          __ptext43 3004  
                        __ptext35 38CC                          __ptext27 36EE  
                        __ptext19 40A2                          __ptext52 3EE4  
                        __ptext44 3E5A                          __ptext36 3E12  
                        __ptext28 1ED2                          __ptext45 11A0  
                        __ptext37 34AA                          __ptext29 2A22  
                        __ptext54 415E                          __ptext46 1AA6  
                        __ptext38 4168                          __ptext55 40E6  
                        __ptext47 4120                          __ptext39 3EA2  
                        __ptext56 4106                          __ptext48 4148  
                        __ptext57 39BC                          __ptext49 3F98  
                        __ptext58 3D7A                          __ptext59 3C24  
                    _SSP1CON1bits 000FC6                   ftoa@decimalPart 00DB  
                       isxdigit@c 0064                        strcpy@dest 0064  
            _usb_message_received 00FB                          _init_spi 4148  
              __end_of_init_uart2 4136                          _humidity 01F8  
                        _isxdigit 3B00            __end_of_write_spi_data 40E6  
                        isa$xinst 000000         write_spi_reg@address_byte 0062  
                      strtof@eexp 0087                          int$flags 0058  
                   _append_string 39BC             __end_of_read_byte_usb 4120  
                        _vfprintf 3D28                      _SSP1STATbits 000FC7  
          __end_of_get_coords_usb 26B8                  ___aomod@dividend 0060  
           __end_of_read_spi_data 4106                        _INTCONbits 000FF2  
                        isdigit@c 0060                          itoa@sign 0070  
               ?_receive_MRF89XAM 0001                       ??_init_pins 0060  
                        intlevel2 0000                ??_receive_MRF89XAM 0002  
                       sprintf@ap 00BE                         strcat@src 0070  
                        islower@c 0060                          isspace@c 0060  
                 main@test_string 00E3                         strcpy@src 0066  
                      _RCSTA2bits 000F71                 read_spi_data@data 0001  
                       strncmp@_l 0060                         strncmp@_r 0062  
           __end_of_write_spi_reg 3F24                   ?_write_spi_data 0001  
                  ?_append_string 000B                         strtof@res 007B  
                     _MRF_message 014E                   ___aomod@divisor 0068  
                     ??_vfpfcnvrt 00A4                   ___aomod@counter 0070  
                 ?_get_coords_usb 0092                       _temperature 01FA  
                        sprintf@f 00C0                          sprintf@s 00B8  
                        strncmp@l 0067                          strncmp@n 0064  
                        strncmp@r 0069                          toupper@c 0064  
                        strtof@_u 0089                        _MRF_param1 0180  
                      _MRF_param2 0176                     ___fladd@signs 006C  
                ??_reverse_string 0066                      ___aodiv@sign 0071  
                    ___fladd@aexp 006D                      ___fladd@bexp 006E  
                 _last_message_id 0054                      ___aomod@sign 0071  
>>>>>>> Stashed changes
